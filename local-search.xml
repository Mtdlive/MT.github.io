<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>harbor Arm架构部署</title>
    <link href="/2022/12/09/harbor-ArmInstall/"/>
    <url>/2022/12/09/harbor-ArmInstall/</url>
    
    <content type="html"><![CDATA[<p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><h1 id="harbor-Arm架构部署"><a href="#harbor-Arm架构部署" class="headerlink" title="harbor Arm架构部署"></a>harbor Arm架构部署</h1><p><strong>由于目前harbor官方暂未支持arm架构部署安装，因此不得不另辟蹊径安装部署</strong></p><p><a class="btn" href="https://pan.baidu.com/s/141UItDc5h5va0vV4dFWUXg?pwd=4uxi" title="点击下载">harbor-arrch64-v1.10.1 提取码: 4uxi</a></p><div class="note note-success">            <h2 id="注意！"><a href="#注意！" class="headerlink" title="注意！"></a>注意！</h2><hr><ol><li><p>该压缩包仅在arm架构,银河麒麟服务器中经过测试！</p></li><li><p>请提前安装docker-ce服务，并确保docker版本&gt;&#x3D;1903且服务正常运行！</p></li><li><p>请确保daemon.json已配置私有镜像仓库信息<br>cat &#x2F;etc&#x2F;docker&#x2F;daemon.json<br>{<br>  “insecure-registries”: [“x.x.x.x:8086”,”harbor:8086”],<br>}<br>确保已配置hosts解析<br>cat &#x2F;etc&#x2F;hosts<br>x.x.x.x harbor</p></li><li><p>将压缩包下载上传至服务器，解压后将生成两个目录</p></li><li><p>请进入images目录执行1.sh 导入镜像</p></li><li><p>请进入install目录将docker-compose文件移动至 &#x2F;usr&#x2F;bin&#x2F;</p></li><li><p>修改install目录下harbor.yml文件配置</p></li><li><p>最后执行install.sh进行安装harbor服务</p></li></ol>          </div><hr><p><strong>若你的确是需要自己手动重新编译，进行部署arm架构下的harbor服务</strong><br><strong>下方提供本人编译部署的全部过程，注意我所用的环境为银河麒麟服务器</strong><br><strong>相关信息：4.19.90-24.4.v2101.ky10.aarch64</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 以下为我本人编译部署全过程</span><br><span class="hljs-comment"># github harbor部署包下载</span><br>https://github.com/mytting/harbor-arm64<br><br><span class="hljs-comment">## 执行以下命令，创建基础目录，下载部署包</span><br><span class="hljs-built_in">mkdir</span> /data/harbor/&#123;data,logs&#125;<br><span class="hljs-built_in">cd</span> /data/harbor/<br>wget https://codeload.github.com/mytting/harbor-arm64/zip/refs/heads/main<br>unzip main<br><span class="hljs-built_in">cd</span> harbor-arm64-main<br><br><span class="hljs-comment"># 以下三条命令执行时间较长，请耐性等待1-2个小时</span><br><span class="hljs-comment"># build基础镜像</span><br><span class="hljs-comment"># 执行过程有可能会报错终止，重复执行，并在执行结束后执行 echo $? 若输出为 0 则执行下一步</span><br>make build_base_docker<br><br><span class="hljs-comment"># build镜像</span><br><span class="hljs-comment"># 执行过程有可能会报错终止，重复执行，并在执行结束后执行 echo $? 若输出为 0 则执行下一步</span><br>make build<br><br><span class="hljs-comment"># 打包harbor</span><br><span class="hljs-comment"># 执行过程有可能会报错终止，重复执行</span><br><span class="hljs-comment"># 本人在实际执行过程中，前两条都已多次执行后成功，但最后一条命令在最后报了一个错误</span><br><span class="hljs-comment"># 我在多次重复执行后依旧报错，最后跳过这条报错，进行部署harbor也成功了</span><br>make package_offline<br><br><span class="hljs-comment"># 报错信息如下：</span><br>Removing intermediate container 8662816b7939<br> ---&gt; 7414e35f2d96<br>Successfully built 7414e35f2d96<br>Successfully tagged goharbor/chartmuseum-photon:v1.10.1<br>Done.<br>make[1]: 离开目录“/data/harbor/harbor-arm64-main”<br>packing offline package ...<br>saving harbor docker image<br>Error response from daemon: reference does not exist<br>make: *** [Makefile:355：package_offline] 错误 1<br><br>[root@Kylin harbor-arm64-main]<span class="hljs-comment"># echo $?</span><br>2<br><br><br><span class="hljs-comment"># 执行后续部署操作</span><br><span class="hljs-built_in">cd</span> /data/harbor/harbor-arm64-main/harbor/<br>vim harbor.yml<br><span class="hljs-comment"># harbor.yml配置参考如下:</span><br>[root@Kylin harbor]<span class="hljs-comment"># egrep -v &quot;^#|^$|^( )&#123;1,&#125;#&quot; harbor.yml </span><br>hostname: 123.123.123.123<br>http:<br>  port: 11880<br>harbor_admin_password: Kylin123123.<br>database:<br>  password: Kylin123123.<br>  max_idle_conns: 50<br>  max_open_conns: 100<br>data_volume: /data/harbor/data<br>clair:<br>  updaters_interval: 12<br>jobservice:<br>  max_job_workers: 10<br>notification:<br>  webhook_job_max_retry: 10<br>chart:<br>  absolute_url: disabled<br><span class="hljs-built_in">log</span>:<br>  level: info<br>  <span class="hljs-built_in">local</span>:<br>    rotate_count: 50<br>    rotate_size: 200M<br>    location: /data/harbor/logs<br>_version: 1.10.0<br>proxy:<br>  http_proxy:<br>  https_proxy:<br>  no_proxy:<br>  components:<br>    - core<br>    - jobservice<br>    - clair<br><br><br><span class="hljs-comment"># 继续执行后续操作</span><br>./prepare<br><span class="hljs-comment"># 确保 ./prepare 执行结果没有报错</span><br>./install.sh<br><span class="hljs-comment"># ./install.sh 脚本最终的输出结果如下：</span><br>[Step 4]: starting Harbor ...<br>Creating network <span class="hljs-string">&quot;harbor_harbor&quot;</span> with the default driver<br>Creating harbor-log ... <span class="hljs-keyword">done</span><br>Creating redis         ... <span class="hljs-keyword">done</span><br>Creating registryctl   ... <span class="hljs-keyword">done</span><br>Creating harbor-db     ... <span class="hljs-keyword">done</span><br>Creating registry      ... <span class="hljs-keyword">done</span><br>Creating harbor-portal ... <span class="hljs-keyword">done</span><br>Creating harbor-core   ... <span class="hljs-keyword">done</span><br>Creating harbor-jobservice ... <span class="hljs-keyword">done</span><br>Creating nginx             ... <span class="hljs-keyword">done</span><br>✔ ----Harbor has been installed and started successfully.----<br>[root@Kylin harbor]<span class="hljs-comment"># echo $?</span><br>0<br><br><span class="hljs-comment"># 配置docker私有仓库</span><br>[root@Kylin harbor]<span class="hljs-comment"># cat /etc/docker/daemon.json </span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://dl0ygawi.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;123.123.123.123:11880&quot;</span>]<br>&#125;<br><br><span class="hljs-comment"># 重启docker</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br><br><span class="hljs-comment"># 重启完docker有可能harbor部分容器停止后并未启动，手动启动一次</span><br><span class="hljs-built_in">cd</span> /data/harbor/harbor-arm64-main/harbor/<br>[root@Kylin harbor]<span class="hljs-comment"># docker-compose up -d</span><br>harbor-log is up-to-date<br>Starting redis ... <br>Starting harbor-db ... <br>Starting redis     ... <span class="hljs-keyword">done</span><br>Starting harbor-db ... <span class="hljs-keyword">done</span><br>Starting registry  ... <span class="hljs-keyword">done</span><br>harbor-core is up-to-date<br>harbor-jobservice is up-to-date<br>Starting nginx     ... <span class="hljs-keyword">done</span><br><span class="hljs-comment"># 终端登录仓库</span><br>[root@Kylin harbor]<span class="hljs-comment"># docker login 123.123.123.123:11880</span><br>Username: admin<br>Password: <br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> /root/.docker/config.json.<br><br><span class="hljs-comment"># 网页访问仓库地址</span><br>http://123.123.123.123:11880<br><br><span class="hljs-comment"># harbor相关容器</span><br>[root@Kylin harbor]<span class="hljs-comment"># docker ps|grep goharbor</span><br>32c46fd4ee55        goharbor/harbor-jobservice:v1.10.1               <span class="hljs-string">&quot;/harbor/harbor_jobs…&quot;</span>   About an hour ago   Up About an hour (healthy)                                                                             harbor-jobservice<br>faa45a5acc07        goharbor/nginx-photon:v1.10.1                    <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   About an hour ago   Up About an hour (healthy)   0.0.0.0:11880-&gt;8080/tcp                                                   nginx<br>5a96f4dc2a95        goharbor/harbor-core:v1.10.1                     <span class="hljs-string">&quot;/harbor/harbor_core&quot;</span>    About an hour ago   Up About an hour (healthy)                                                                             harbor-core<br>878f1155448a        goharbor/harbor-portal:v1.10.1                   <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   About an hour ago   Up About an hour (healthy)   8080/tcp                                                                  harbor-portal<br>31da018a8279        goharbor/registry-photon:v1.10.1                 <span class="hljs-string">&quot;/home/harbor/entryp…&quot;</span>   About an hour ago   Up About an hour (healthy)   5000/tcp                                                                  registry<br>bca5e0027e92        goharbor/harbor-db:v1.10.1                       <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   About an hour ago   Up About an hour (healthy)   5432/tcp                                                                  harbor-db<br>cfeb1bce6b9c        goharbor/harbor-registryctl:v1.10.1              <span class="hljs-string">&quot;/home/harbor/start.…&quot;</span>   About an hour ago   Up About an hour (healthy)                                                                             registryctl<br>745b0a26107c        goharbor/redis-photon:v1.10.1                    <span class="hljs-string">&quot;redis-server /etc/r…&quot;</span>   About an hour ago   Up About an hour (healthy)   6379/tcp                                                                  redis<br>031325c2b965        goharbor/harbor-log:v1.10.1                      <span class="hljs-string">&quot;/bin/sh -c /usr/loc…&quot;</span>   About an hour ago   Up About an hour (healthy)   127.0.0.1:1514-&gt;10514/tcp                                                 harbor-log<br><br><span class="hljs-comment"># 备注：</span><br><span class="hljs-comment"># 在编译过程中，可能会出现异常报错，而重复执行一次后又正常了</span><br><span class="hljs-comment"># 编译过程只要没有结束，就不需要手动干预，等待执行结束就好</span><br><span class="hljs-comment"># 编译过程中会频繁访问GitHub，网络问题可能会导致其不断超时，等待其不断访问重试即可，无需手动干预</span><br><span class="hljs-comment"># 目前银河麒麟服务器harbor仓库配置及数据存放目录如下：</span><br><span class="hljs-comment"># docker-compose.yml及harbor.yml文件</span><br>/data/harbor/harbor-arm64-main/harbor/<br><span class="hljs-comment"># 数据及日志</span><br>/data/harbor/&#123;data,logs&#125;<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>kylin</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>kylin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jumpserver部署</title>
    <link href="/2022/12/06/jumpserver/"/>
    <url>/2022/12/06/jumpserver/</url>
    
    <content type="html"><![CDATA[<p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><p>@<a href="%E7%9B%AE%E5%BD%95">toc</a></p><hr><h2 id="参考信息"><a href="#参考信息" class="headerlink" title="参考信息"></a>参考信息</h2><p><strong>当前版本：CentOS7.9</strong></p><table><thead><tr><th>主机</th><th>IP</th></tr></thead><tbody><tr><td>Jumpserver服务器</td><td>10.20.0.16</td></tr><tr><td>资产主机</td><td>10.20.0.15</td></tr></tbody></table><p>#执行脚本前请确保以下配置达标</p><div>            <input type="checkbox" disabled checked="checked">访问外网正常          </div><div>            <input type="checkbox" disabled checked="checked">内存>=4GB          </div><div>            <input type="checkbox" disabled checked="checked">处理器>=4          </div><div>            <input type="checkbox" disabled checked="checked">硬盘>=50GB          </div><div>            <input type="checkbox" disabled checked="checked">关闭SELINUX          </div><div>            <input type="checkbox" disabled checked="checked">关闭防火墙          </div><hr><p>#自动化部署脚本<code>quick_start</code>内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#cat quick_start.sh</span><br><span class="hljs-comment">#!/usr/bin/env bash</span><br><span class="hljs-comment">#</span><br><br>Version=v2.28.1<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">install_soft</span></span>() &#123;<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v dnf &gt; /dev/null; <span class="hljs-keyword">then</span><br>      dnf -q -y install <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">command</span> -v yum &gt; /dev/null; <span class="hljs-keyword">then</span><br>      yum -q -y install <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">command</span> -v apt &gt; /dev/null; <span class="hljs-keyword">then</span><br>      apt-get -qqy install <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">command</span> -v zypper &gt; /dev/null; <span class="hljs-keyword">then</span><br>      zypper -q -n install <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">command</span> -v apk &gt; /dev/null; <span class="hljs-keyword">then</span><br>      apk add -q <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>      <span class="hljs-built_in">command</span> -v gettext &gt;/dev/null || &#123;<br>      apk add -q gettext-dev python3<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>      <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;[\033[31m ERROR \033[0m] <span class="hljs-variable">$1</span> command not found, Please install it first&quot;</span><br>      <span class="hljs-built_in">exit</span> 1<br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">prepare_install</span></span>() &#123;<br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> curl wget tar iptables; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">command</span> -v <span class="hljs-variable">$i</span> &amp;&gt;/dev/null || install_soft <span class="hljs-variable">$i</span><br>  <span class="hljs-keyword">done</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">get_installer</span></span>() &#123;<br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;download install script to /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>&quot;</span><br>  <span class="hljs-built_in">cd</span> /opt || <span class="hljs-built_in">exit</span> 1<br>  <span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;/opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">timeout</span> 60 wget -qO jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>.tar.gz https://github.com/jumpserver/installer/releases/download/<span class="hljs-variable">$&#123;Version&#125;</span>/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>.tar.gz || &#123;<br>      <span class="hljs-built_in">rm</span> -f /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>.tar.gz<br>      <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;[\033[31m ERROR \033[0m] Failed to download jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>&quot;</span><br>      <span class="hljs-built_in">exit</span> 1<br>    &#125;<br>    tar -xf /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>.tar.gz -C /opt || &#123;<br>      <span class="hljs-built_in">rm</span> -rf /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span><br>      <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;[\033[31m ERROR \033[0m] Failed to unzip jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>&quot;</span><br>      <span class="hljs-built_in">exit</span> 1<br>    &#125;<br>    <span class="hljs-built_in">rm</span> -f /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>.tar.gz<br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">config_installer</span></span>() &#123;<br>  <span class="hljs-built_in">cd</span> /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span> || <span class="hljs-built_in">exit</span> 1<br>  sed -i <span class="hljs-string">&quot;s/VERSION=.*/VERSION=<span class="hljs-variable">$&#123;Version&#125;</span>/g&quot;</span> /opt/jumpserver-installer-<span class="hljs-variable">$&#123;Version&#125;</span>/static.env<br>  ./jmsctl.sh install<br>  ./jmsctl.sh start<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;OS&#125;</span>&quot;</span> == <span class="hljs-string">&#x27;Darwin&#x27;</span> ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Unsupported Operating System Error&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;macOS installer please see: https://github.com/jumpserver/Dockerfile&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br>  <span class="hljs-keyword">fi</span><br>  prepare_install<br>  get_installer<br>  config_installer<br>&#125;<br><br>main<br><br></code></pre></td></tr></table></figure><hr><h2 id="部署开始"><a href="#部署开始" class="headerlink" title="部署开始"></a>部署开始</h2><p><a class="btn" href="https://github.com/jumpserver/jumpserver/releases/download/v2.28.1/quick_start.sh" title="点击跳转">quick_start.sh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#若果脚本拉不下来也可以直接复制我上面的 quick_start.sh</span><br>[root@C7-6 data]<span class="hljs-comment"># curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.28.1/quick_start.sh</span><br><span class="hljs-comment">#github里直接复制粘贴的命令有个缺陷，docker未配置加速，拉镜像慢到跑不动了</span><br><span class="hljs-comment">#建议在执行脚本进行到拉取镜像时手动退出，并配置镜像加速后再重新执行脚本</span><br><br><span class="hljs-comment">#将此行加入 /etc/docker/daemon.json</span><br> <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://dl0ygawi.mirror.aliyuncs.com&quot;</span>],<br><span class="hljs-comment">#记得重启docker</span><br>sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@C7-6 data]<span class="hljs-comment"># bash quick_start.sh</span><br><br>……………..<span class="hljs-comment"># 脚本执行时间很长............</span><br>download install script to /opt/jumpserver-installer-v2.28.1<br><br><br>       ██╗██╗   ██╗███╗   ███╗██████╗ ███████╗███████╗██████╗ ██╗   ██╗███████╗██████╗<br>       ██║██║   ██║████╗ ████║██╔══██╗██╔════╝██╔════╝██╔══██╗██║   ██║██╔════╝██╔══██╗<br>       ██║██║   ██║██╔████╔██║██████╔╝███████╗█████╗  ██████╔╝██║   ██║█████╗  ██████╔╝<br>  ██   ██║██║   ██║██║╚██╔╝██║██╔═══╝ ╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝██╔══╝  ██╔══██╗<br>  ╚█████╔╝╚██████╔╝██║ ╚═╝ ██║██║     ███████║███████╗██║  ██║ ╚████╔╝ ███████╗██║  ██║<br>   ╚════╝  ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝  ╚══════╝╚═╝  ╚═╝<br><br>   Version:  v2.28.1  <br><br>1. Check Configuration File<br>Path to Configuration file: /opt/jumpserver/config<br>/opt/jumpserver/config/config.txt  [ √ ]<br>/opt/jumpserver/config/nginx/cert/server.crt   [ √ ]<br>/opt/jumpserver/config/nginx/cert/server.key   [ √ ]<br>complete<br><br>&gt;&gt;&gt; Install and Configure Docker<br>1. Install Docker<br>complete<br><br>2. Configure Docker<br>complete<br><br>3. Start Docker<br>complete<br><br>&gt;&gt;&gt; Loading Docker Image<br>[jumpserver/redis:6.2]<br>6.2: Pulling from jumpserver/redis<br>a603fa5e3b41: Pull complete <br>77631c3ef092: Pull complete <br>ed3847cf62b8: Pull complete <br>c35fa6b24d23: Pull complete <br>715a5ac967d7: Pull complete <br>0a26dfd13d55: Pull complete <br>Digest: sha256:a6349e1a6a8b317dbd9e196eb3f4c44b304f7fb899e7d2af7b0211112bccd952<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> jumpserver/redis:6.2<br>docker.io/jumpserver/redis:6.2<br>..............................................<br><span class="hljs-comment">#此处提示是否自动以自定义设置服务相关信息,看个人喜好设置</span><br>Digest: sha256:a7065804f135f3d1fef15412adec99d62475e42e48c0ec6934d7fc4b44aae1ad<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> jumpserver/web:v2.28.1<br>docker.io/jumpserver/web:v2.28.1<br><br>complete<br><br>&gt;&gt;&gt; Install and Configure JumpServer<br>1. Configure Private Key<br>SECRETE_KEY:     ZjQzODRkNTYtNTY1Ny1hNTIyLTBlMmYtNzEzMDVmYTNlZDZk<br>BOOTSTRAP_TOKEN: ZjQzODRkNTYtNTY1Ny1hNTIy<br>complete<br><br>2. Configure Persistent Directory<br>Do you need custom persistent store, will use the default directory /data/jumpserver? (y/n)  (default n): n<br>complete<br><br>3. Configure MySQL<br>Do you want to use external MySQL? (y/n)  (default n): n<br>complete<br><br>4. Configure Redis<br>Do you want to use external Redis? (y/n)  (default n): n<br>complete<br><br>5. Configure External Port<br>Do you need to customize the JumpServer external port? (y/n)  (default n): <br>.................................<br><span class="hljs-comment">#当出现此行时表示安装成功，访问地址和账户信息以打印在下方</span><br>&gt;&gt;&gt; The Installation is Complete<br>1. You can use the following <span class="hljs-built_in">command</span> to start, and <span class="hljs-keyword">then</span> visit<br><span class="hljs-built_in">cd</span> /opt/jumpserver-installer-v2.28.1<br>./jmsctl.sh start<br><br>2. Other management commands<br>./jmsctl.sh stop<br>./jmsctl.sh restart<br>./jmsctl.sh backup<br>./jmsctl.sh upgrade<br>For more commands, you can enter ./jmsctl.sh --<span class="hljs-built_in">help</span> to understand<br><br>3. Web access<br>http://192.168.40.150:80<br>Default username: admin  Default password: admin<br><br>4. SSH/SFTP access<br>ssh -p2222 admin@192.168.40.150<br>sftp -P2222 admin@192.168.40.150<br><br>5. More information<br>Official Website: https://www.jumpserver.org/<br>Documentation: https://docs.jumpserver.org/<br><br><br>[+] Running 8/8<br> ⠿ Container jms_redis   Healthy                                                                                          2.0s<br> ⠿ Container jms_mysql   Healthy                                                                                          2.0s<br> ⠿ Container jms_core    Healthy                                                                                         28.7s<br> ⠿ Container jms_web     Started                                                                                         29.5s<br> ⠿ Container jms_celery  Started                                                                                         29.5s<br> ⠿ Container jms_lion    Started                                                                                         29.7s<br> ⠿ Container jms_koko    Started                                                                                         29.7s<br> ⠿ Container jms_magnus  Started                                                                                         42.3s<br></code></pre></td></tr></table></figure><hr><p>#登录 jumpserver web 界面 ，账户在上图可看<br>#创建普通用户<br><img src="https://img-blog.csdnimg.cn/20200703155615702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200703155637153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><hr><p>#创建管理用户<br>#管理用户应当是资产主机上的root管理员或者是在资产主机上拥有 <code>NOPASSWD: ALL sudo</code> 权限的用户<br>#jumpserver会使用该用户去推送系统用户以及获取资产硬件信息等，因此若该用户的密钥配置错误将会导致无法连接资产主机<br><img src="https://img-blog.csdnimg.cn/20200703155755546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><hr><p>#创建系统用户<br>#该用户是jumpserver跳转登录资产主机时使用的用户<br><img src="https://img-blog.csdnimg.cn/20200703155838607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200703155853724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><hr><p>#创建资产<br><img src="https://img-blog.csdnimg.cn/20200703155932353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200703155946436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200703160009759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><hr><p>#资产授权<br><img src="https://img-blog.csdnimg.cn/20200703160028355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200703160051251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><hr><p>#登录mahuateng 用户<br><img src="https://img-blog.csdnimg.cn/20200703160114330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200703160124821.png"></p><hr><p>#返回admin用户，配置命令过滤<br><img src="https://img-blog.csdnimg.cn/20200703160146362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200703160152961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200703160201839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/2020070316021226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><hr><p>#更新系统用户配置<br><img src="https://img-blog.csdnimg.cn/20200703160224699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200703160231968.png"><br><img src="https://img-blog.csdnimg.cn/20200703160240440.png"></p><hr><p>#登录mahuateng 用户<br><img src="https://img-blog.csdnimg.cn/20200703160301579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>jumpserver</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>jumpserver</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible相关操作</title>
    <link href="/2022/12/04/ansible/"/>
    <url>/2022/12/04/ansible/</url>
    
    <content type="html"><![CDATA[<p>@<a href="%E5%AE%9E%E9%AA%8C%E5%88%97%E8%A1%A8">toc</a></p><hr><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><p>#请确保以下事项</p><div>            <input type="checkbox" disabled checked="checked">三台虚拟机          </div><div>            <input type="checkbox" disabled checked="checked">关闭防火墙          </div><div>            <input type="checkbox" disabled checked="checked">关闭SELINUX          </div><div>            <input type="checkbox" disabled checked="checked">虚拟机时间同步          </div><table><thead><tr><th>主机版本</th><th>主&#x2F;被</th><th>主机IP</th><th>主机名</th></tr></thead><tbody><tr><td>CentOS 7</td><td>主控端</td><td>192.168.124.5</td><td>C7</td></tr><tr><td>CentOS 7</td><td>被控端</td><td>192.168.124.13</td><td>C7-3</td></tr><tr><td>CentOS 7</td><td>被控端</td><td>192.168.124.14</td><td>C7-4</td></tr></tbody></table><hr><h1 id="实验准备"><a href="#实验准备" class="headerlink" title="实验准备"></a>实验准备</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在主控端 主机C7上操作：</span><br><span class="hljs-comment">#安装ansible</span><br>[root@C7 ~]<span class="hljs-comment"># yum install ansible</span><br>Loaded plugins: fastestmirror, langpacks<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.neusoft.edu.cn<br> * extras: mirrors.aliyun.com<br> * updates: mirrors.neusoft.edu.cn<br>No package ansible available.<br>Error: Nothing to <span class="hljs-keyword">do</span><br><br><span class="hljs-comment">#很显然，我们的光盘仓库中缺失ansible相关依赖包</span><br><span class="hljs-comment">#搜索一下epel并添加epel源</span><br>[root@C7 ~]<span class="hljs-comment"># yum list | grep epel-release</span><br>epel-release.noarch                         7-11                       extras   <br>[root@C7 ~]<span class="hljs-comment"># yum install epel-release -y</span><br><br><span class="hljs-comment">#这次安装成功</span><br>[root@C7 ~]<span class="hljs-comment"># yum install ansible</span><br>……………<br>Total download size: 20 M<br>Installed size: 114 M<br>Is this ok [y/d/N]: y<br>…………<br>Installed:<br>  ansible.noarch 0:2.9.9-1.el7                                                                                                      <br><br>Dependency Installed:<br>  python-babel.noarch 0:0.9.6-8.el7           python-httplib2.noarch 0:0.9.2-1.el7      python-jinja2.noarch 0:2.7.2-4.el7        <br>  python-markupsafe.x86_64 0:0.11-10.el7      python-paramiko.noarch 0:2.1.1-9.el7      python2-jmespath.noarch 0:0.9.4-2.el7     <br>  sshpass.x86_64 0:1.06-2.el7                <br><br>Complete!<br><br><br><span class="hljs-comment">#在继续实验之前我们需要提前配置好远程被控主机的免密钥登录</span><br><span class="hljs-comment">#全部直接回车直到结束</span><br>[root@C7-3 ~]<span class="hljs-comment"># ssh-keygen -t rsa -C &quot;ansible@linux&quot;</span><br>Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/root/.ssh/id_rsa): <br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): <br>Enter same passphrase again: <br>Your identification has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.<br>Your public key has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:KLIoqlICPAnj9JYIHr5opUN8gH4gnziRF56LlxFyweQ ansible@linux<br>The key<span class="hljs-string">&#x27;s randomart image is:</span><br><span class="hljs-string">+---[RSA 2048]----+</span><br><span class="hljs-string">|o+*o             |</span><br><span class="hljs-string">|OXoo             |</span><br><span class="hljs-string">|%*E..            |</span><br><span class="hljs-string">|+&amp;o@   .         |</span><br><span class="hljs-string">|=.&amp; . . S        |</span><br><span class="hljs-string">|oB.o .           |</span><br><span class="hljs-string">|+oo              |</span><br><span class="hljs-string">|+                |</span><br><span class="hljs-string">|=                |</span><br><span class="hljs-string">+----[SHA256]-----+</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#这里的 id_rsa 为私钥文件，id_rsa.pub 为公钥文件</span><br><span class="hljs-comment">#特别注意：.ssh目录的权限需是700</span><br>[root@C7-3 ~]<span class="hljs-comment"># ll /root/.ssh/</span><br>total 8<br>-rw------- 1 root root 1675 Jun  2 17:21 id_rsa<br>-rw-r--r-- 1 root root  395 Jun  2 17:21 id_rsa.pub<br><br>[root@C7 ~]<span class="hljs-comment"># cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br>[root@C7 ~]<span class="hljs-comment"># ll /root/.ssh/</span><br>total 16<br>-rw-r--r-- 1 root root  395 Jun  3 08:39 authorized_keys<br>-rw------- 1 root root 1675 Jun  2 17:15 id_rsa<br>-rw-r--r-- 1 root root  395 Jun  3 08:39 id_rsa.pub<br><br><span class="hljs-comment">#当前登录远程被控主机提示需要输入密码</span><br>[root@C7 ~]<span class="hljs-comment"># ssh 192.168.124.13</span><br>root@192.168.124.13<span class="hljs-string">&#x27;s password: </span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">#将authorized_keys 文件发送到另外两台被控主机</span><br><span class="hljs-string">#中间输入yes；密码输入被控主机的root密钥</span><br><span class="hljs-string">[root@C7 ~]# scp /root/.ssh/authorized_keys 192.168.124.13:/root/.ssh/</span><br><span class="hljs-string">The authenticity of host &#x27;</span>192.168.124.13 (192.168.124.13)<span class="hljs-string">&#x27; can&#x27;</span>t be established.<br>ECDSA key fingerprint is SHA256:Qqm+M0hyyYv59HC4ibs/tKiKpM4TIO7HqrZmDJoGWrs.<br>ECDSA key fingerprint is MD5:66:0c:de:ae:d5:6a:99:77:2f:f3:f0:20:a7:73:30:1a.<br>Are you sure you want to <span class="hljs-built_in">continue</span> connecting (<span class="hljs-built_in">yes</span>/no)? <span class="hljs-built_in">yes</span>     <span class="hljs-comment">#输入yes</span><br>Warning: Permanently added <span class="hljs-string">&#x27;192.168.124.13&#x27;</span> (ECDSA) to the list of known hosts.<br>root@192.168.124.13<span class="hljs-string">&#x27;s password:       #输入被控主机的root密钥</span><br><span class="hljs-string">authorized_keys                                                                                        100%  395   121.4KB/s   00:00    </span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@C7 ~]# scp /root/.ssh/authorized_keys 192.168.124.14:/root/.ssh/</span><br><span class="hljs-string">The authenticity of host &#x27;</span>192.168.124.14 (192.168.124.14)<span class="hljs-string">&#x27; can&#x27;</span>t be established.<br>ECDSA key fingerprint is SHA256:Qqm+M0hyyYv59HC4ibs/tKiKpM4TIO7HqrZmDJoGWrs.<br>ECDSA key fingerprint is MD5:66:0c:de:ae:d5:6a:99:77:2f:f3:f0:20:a7:73:30:1a.<br>Are you sure you want to <span class="hljs-built_in">continue</span> connecting (<span class="hljs-built_in">yes</span>/no)? <span class="hljs-built_in">yes</span>     <span class="hljs-comment">#输入yes</span><br>Warning: Permanently added <span class="hljs-string">&#x27;192.168.124.14&#x27;</span> (ECDSA) to the list of known hosts.<br>root@192.168.124.14<span class="hljs-string">&#x27;s password:        #输入被控主机的root密钥</span><br><span class="hljs-string">authorized_keys                                                                                        100%  395   212.5KB/s   00:00    </span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">#现在我们来尝试以下是否可以在主控端远程免密钥登录两台被控主机</span><br><span class="hljs-string">[root@C7 ~]# ssh 192.168.124.13</span><br><span class="hljs-string">Last login: Tue Jun  2 17:19:57 2020 from 192.168.124.5</span><br><span class="hljs-string">[root@C7-3 ~]# exit</span><br><span class="hljs-string">logout</span><br><span class="hljs-string">Connection to 192.168.124.13 closed.</span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@C7 ~]# ssh 192.168.124.14</span><br><span class="hljs-string">Last login: Tue Jun  2 16:14:35 2020 from 192.168.124.1</span><br><span class="hljs-string">[root@C7-4 ~]# exit</span><br><span class="hljs-string">logout</span><br><span class="hljs-string">Connection to 192.168.124.14 closed.</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#如果你觉得输入主机IP 进行远程连接过于麻烦，你可以在主控端的 /etc/hosts 文件中配置IP解析</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/hosts</span><br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><span class="hljs-comment">#追加以下两行就行了</span><br>192.168.124.13 C7-3<br>192.168.124.14 C7-4<br><br>[root@C7 ~]<span class="hljs-comment"># ssh C7-3</span><br>The authenticity of host <span class="hljs-string">&#x27;c7-3 (192.168.124.13)&#x27;</span> can<span class="hljs-string">&#x27;t be established.</span><br><span class="hljs-string">ECDSA key fingerprint is SHA256:Qqm+M0hyyYv59HC4ibs/tKiKpM4TIO7HqrZmDJoGWrs.</span><br><span class="hljs-string">ECDSA key fingerprint is MD5:66:0c:de:ae:d5:6a:99:77:2f:f3:f0:20:a7:73:30:1a.</span><br><span class="hljs-string">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="hljs-string">Warning: Permanently added &#x27;</span>c7-3<span class="hljs-string">&#x27; (ECDSA) to the list of known hosts.</span><br><span class="hljs-string">Last login: Tue Jun  2 17:32:53 2020 from 192.168.124.5</span><br><span class="hljs-string">[root@C7-3 ~]# exit</span><br><span class="hljs-string">logout</span><br><span class="hljs-string">Connection to c7-3 closed.</span><br><span class="hljs-string"></span><br><span class="hljs-string">[root@C7 ~]# ssh C7-4</span><br><span class="hljs-string">The authenticity of host &#x27;</span>c7-4 (192.168.124.14)<span class="hljs-string">&#x27; can&#x27;</span>t be established.<br>ECDSA key fingerprint is SHA256:Qqm+M0hyyYv59HC4ibs/tKiKpM4TIO7HqrZmDJoGWrs.<br>ECDSA key fingerprint is MD5:66:0c:de:ae:d5:6a:99:77:2f:f3:f0:20:a7:73:30:1a.<br>Are you sure you want to <span class="hljs-built_in">continue</span> connecting (<span class="hljs-built_in">yes</span>/no)? <span class="hljs-built_in">yes</span><br>Warning: Permanently added <span class="hljs-string">&#x27;c7-4&#x27;</span> (ECDSA) to the list of known hosts.<br>Last login: Tue Jun  2 17:33:05 2020 from 192.168.124.5<br>[root@C7-4 ~]<span class="hljs-comment"># exit</span><br><span class="hljs-built_in">logout</span><br>Connection to c7-4 closed.<br><br><br><span class="hljs-comment">#觉得手动操作有些不够逼格呢？这里提供参考脚本</span><br><span class="hljs-comment">#利用 sshpass 批量实现基于 key 验证</span><br><span class="hljs-comment">#!/bin/bash</span><br>ssh-keygen -f /root/.ssh/id_rsa  -P <span class="hljs-string">&#x27;&#x27;</span><br>NET=192.168.124<br><span class="hljs-built_in">export</span> SSHPASS=linux<br><span class="hljs-keyword">for</span> IP <span class="hljs-keyword">in</span> &#123;10..20&#125;; <span class="hljs-keyword">do</span><br>    sshpass -e ssh-copy-id  <span class="hljs-variable">$&#123;NET&#125;</span>.<span class="hljs-variable">$&#123;IP&#125;</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p><strong><code>建议从此刻状态对所有主机创建虚拟机快照</code></strong></p><hr><h1 id="实验开始"><a href="#实验开始" class="headerlink" title="实验开始"></a>实验开始</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#终于可以配置ansible了，前期工作基本就是这些</span><br><span class="hljs-comment">#ansible有三个重要的文件，在yum安装下文件默认在：/etc/ansible/ 下</span><br>[root@C7 ~]<span class="hljs-comment"># ls /etc/ansible/</span><br>ansible.cfg  hosts  roles<br><br><span class="hljs-comment">#ansible.cfg 毫无疑问这是ansible的主配置文件</span><br><span class="hljs-comment">#hosts 远程控制主机清单</span><br><span class="hljs-comment">#roles 存放角色的目录</span><br><br><span class="hljs-comment">#配置hosts文件</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts </span><br><span class="hljs-comment">#随便找个位置写即可</span><br><br>[srvs]    <span class="hljs-comment"># []中的英文尽量写的好记一点，因为后面的终端中要输入</span><br>192.168.124.13    <span class="hljs-comment">#被控主机IP</span><br>192.168.124.14    <span class="hljs-comment">#被控主机IP</span><br><br><span class="hljs-comment">#查看被ansible管理的所有主机列表</span><br>[root@C7 ~]<span class="hljs-comment"># ansible srvs --list</span><br>  hosts (2):<br>    192.168.124.13<br>    192.168.124.14<br><br><span class="hljs-comment">#测试一下被管理的主机能否ping通</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -m ping</span><br>192.168.124.14 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>    &#125;, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br>192.168.124.13 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>    &#125;, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#你是否想过：倘若这里管理的主机多达100台，是否我就必须写100行主机IP呢？</span><br><span class="hljs-comment">#当然不必如此，对于被管理主机非常多的情况下，我们有另一种写法</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts </span><br><span class="hljs-comment">#将前面两台主机IP注释掉，添加新行</span><br><br>[srvs]<br><span class="hljs-comment">#192.168.124.13    #被控主机IP</span><br><span class="hljs-comment">#192.168.124.14    #被控主机IP</span><br>192.168.124.[10:20]    <span class="hljs-comment">#表示10到20的主机IP</span><br><br><span class="hljs-comment">#重新查看被ansible管理的所有主机列表</span><br>[root@C7 ~]<span class="hljs-comment"># ansible srvs --list</span><br>  hosts (11):<br>    192.168.124.10<br>    192.168.124.11<br>…………..<span class="hljs-comment">#省略不写</span><br>    192.168.124.19<br>    192.168.124.20<br><br><span class="hljs-comment">#当然，我这里仅部署了两台被控主机，若此时测试所有主机能否ping通，其余18台主机是不通的</span><br><span class="hljs-comment">#不仅这些主机ping不通，其ping的过程也并不是按照主机IP顺序进行的</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -m ping</span><br>192.168.124.10 | UNREACHABLE! =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;Failed to connect to the host via ssh: ssh: connect to host 192.168.124.10 port 22: Connection refused&quot;</span>, <br>    <span class="hljs-string">&quot;unreachable&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br>192.168.124.14 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>    &#125;, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br>192.168.124.13 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>    &#125;, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br>192.168.124.11 | UNREACHABLE! =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;Failed to connect to the host via ssh: ssh: connect to host 192.168.124.11 port 22: No route to host&quot;</span>, <br>    <span class="hljs-string">&quot;unreachable&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-comment">#为了试验正常进行，还是把hosts主机清单改回来吧</span><br></code></pre></td></tr></table></figure><hr><h2 id="ansible中拥有非常多的模块，通过这些模块能够帮助我们完成及减少工作当中一些繁琐重复的内容-例举ansible常用模块：篇幅有限这里仅做例举而不进行详细说明Command-模块；Shell-模块；Script-模块；Copy-模块；Fetch-模块；File-模；unarchive-模块；Archive-模块；Hostname-模块；Cron-模块；Yum-模块；Service-模块；User-模块；Group-模块；Setup-模块；-倘若你对这些如此多的模块感到非常迷茫，那么使用ansible-doc是个办法-其作用是ansible-doc-指定模块-查看该模块的帮助信息"><a href="#ansible中拥有非常多的模块，通过这些模块能够帮助我们完成及减少工作当中一些繁琐重复的内容-例举ansible常用模块：篇幅有限这里仅做例举而不进行详细说明Command-模块；Shell-模块；Script-模块；Copy-模块；Fetch-模块；File-模；unarchive-模块；Archive-模块；Hostname-模块；Cron-模块；Yum-模块；Service-模块；User-模块；Group-模块；Setup-模块；-倘若你对这些如此多的模块感到非常迷茫，那么使用ansible-doc是个办法-其作用是ansible-doc-指定模块-查看该模块的帮助信息" class="headerlink" title="#ansible中拥有非常多的模块，通过这些模块能够帮助我们完成及减少工作当中一些繁琐重复的内容#例举ansible常用模块：篇幅有限这里仅做例举而不进行详细说明Command 模块；Shell 模块；Script 模块；Copy 模块；Fetch 模块；File 模；unarchive 模块；Archive 模块；Hostname 模块；Cron 模块；Yum 模块；Service 模块；User 模块；Group 模块；Setup 模块；#倘若你对这些如此多的模块感到非常迷茫，那么使用ansible-doc是个办法#其作用是ansible-doc +指定模块 查看该模块的帮助信息"></a>#ansible中拥有非常多的模块，通过这些模块能够帮助我们完成及减少工作当中一些繁琐重复的内容<br>#例举ansible常用模块：篇幅有限这里仅做例举而不进行详细说明<br>Command 模块；Shell 模块；Script 模块；Copy 模块；Fetch 模块；File 模；<br>unarchive 模块；Archive 模块；Hostname 模块；Cron 模块；Yum 模块；<br>Service 模块；User 模块；Group 模块；Setup 模块；<br>#倘若你对这些如此多的模块感到非常迷茫，那么使用ansible-doc是个办法<br>#其作用是ansible-doc +指定模块 查看该模块的帮助信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#例如yum模块</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-doc yum</span><br>&gt; YUM    (/usr/lib/python2.7/site-packages/ansible/modules/packaging/os/yum.py)<br><br>        Installs, upgrade, downgrades, removes, and lists packages and <span class="hljs-built_in">groups</span> with the `yum‘ package<br>        manager. This module only works on Python 2. If you require Python 3 support see the [dnf]<br>        module.<br><br>  * This module is maintained by The Ansible Core Team<br>  * note: This module has a corresponding action plugin.<br>………<br><br><span class="hljs-comment">#若后面跟 --list 或 -l 则可以查看所有支持的ansible模块</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-doc --list</span><br>fortios_router_community_list                                 Configure community lists <span class="hljs-keyword">in</span> Fortinet<span class="hljs-string">&#x27;s FortiOS and FortiGate    </span><br><span class="hljs-string">azure_rm_devtestlab_info                                      Get Azure DevTest Lab facts  </span><br><span class="hljs-string">……….</span><br></code></pre></td></tr></table></figure></h2><h1 id="剧本"><a href="#剧本" class="headerlink" title="剧本"></a>剧本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#ansible中有一个非常重要的组成部分，那就是Playbook（剧本）</span><br><span class="hljs-comment">#通过剧本我们可以实现一次同时部署多台主机</span><br><span class="hljs-comment">#playbook由YAML语法构成，文件首行固定为 ---，且对缩进有严格要求，敏感大小写</span><br><span class="hljs-comment">#一个完整的代码块最少包括name和task，且一个name只能包含一个task</span><br><span class="hljs-comment">#YAML文件扩展名通常为yml或yaml</span><br><br><span class="hljs-comment">#尝试编写一个简单的剧本</span><br>[root@C7 ~]<span class="hljs-comment"># mkdir /etc/ansible/roles/playbook</span><br>[root@C7 ~]<span class="hljs-comment"># vim !$/hi.yml</span><br>---<br>- hosts: srvs<br>  tasks:<br>    - name: <span class="hljs-built_in">test</span><br>      shell: /bin/echo <span class="hljs-string">&quot;Hi,I&#x27;m `who am i`&quot;</span> &gt; /data/hi.txt<br><br><span class="hljs-comment">#编辑结束应进行运行测试，是否有语法错误</span><br><span class="hljs-comment">#俗称干跑，而不进行实际操作</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook --check -C /etc/ansible/roles/playbook/hi.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [<span class="hljs-built_in">test</span>] ************************************************************************************************************************<br>skipping: [192.168.124.13]<br>skipping: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.14             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br><br><span class="hljs-comment">#现在进行真正执行操作</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/hi.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [<span class="hljs-built_in">test</span>] ************************************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#执行完，我们是否可以在本机查看远程被控主机的文件内容呢？</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;cat /data/hi.txt&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Hi,I<span class="hljs-string">&#x27;m root     pts/3        2020-06-03 09:23 (192.168.124.5)</span><br><span class="hljs-string">192.168.124.13 | CHANGED | rc=0 &gt;&gt;</span><br><span class="hljs-string">Hi,I&#x27;</span>m root     pts/3        2020-06-03 09:23 (192.168.124.5)<br><br><span class="hljs-comment">#很明显可以直接看到内容，那么如果我只想在某一台主机上执行刚才的yml文件呢？</span><br><span class="hljs-comment">#略微修改一下之前的yml文件内容以作区分</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/hi.yml</span><br>---<br>- hosts: srvs<br>  tasks:<br>    - name: <span class="hljs-built_in">test</span><br>      shell: /bin/echo <span class="hljs-string">&quot;You can see !&quot;</span> &gt; /data/see.txt<br><br><br><span class="hljs-comment">#这次我就不干跑测试了，直接运行</span><br><span class="hljs-comment">#这次我们只对C7-3主机执行操作</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook --limit 192.168.124.13 /etc/ansible/roles/playbook/hi.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [<span class="hljs-built_in">test</span>] ************************************************************************************************************************<br>changed: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><span class="hljs-comment">#查看执行后，远程主机C7-3上的文件内容</span><br><span class="hljs-comment">#注意，命令参数有顺序要求</span><br>[root@C7 ~]<span class="hljs-comment"># ansible -a 192.168.124.13 &quot;cat /data/see.txt&quot;</span><br>[WARNING]: Could not match supplied host pattern, ignoring: <span class="hljs-built_in">cat</span><br>[WARNING]: Could not match supplied host pattern, ignoring: /data/see.txt<br>[WARNING]: No hosts matched, nothing to <span class="hljs-keyword">do</span><br><br>[root@C7 ~]<span class="hljs-comment"># ansible 192.168.124.13 -a &quot;cat /data/see.txt&quot;</span><br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>You can see !<br><br><span class="hljs-comment">#很显然我只是把 -a参数写在了前面，但这样会导致命令执行失败</span><br></code></pre></td></tr></table></figure><hr><h1 id="部署httpd"><a href="#部署httpd" class="headerlink" title="部署httpd"></a>部署httpd</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#让我们更近一步，尝试使用ansible-playbook 来完成远程主机的httpd服务的部署</span><br><span class="hljs-comment">#在部署远程主机httpd服务之前，首先我们要在主控端安装httpd</span><br><br>[root@C7 ~]<span class="hljs-comment"># yum -y install httpd</span><br>[root@C7 ~]<span class="hljs-comment"># cp /etc/httpd/conf/httpd.conf /etc/ansible/roles/playbook/</span><br><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/index.html</span><br>If you can see,that‘s good!<br><br><br><span class="hljs-comment">#编写httpd_install.yml  playbook脚本</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd_install.yml</span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  tasks:<br>    - name: install httpd<br>      yum: name=httpd<br>    - name: config httpd service<br>      copy: src=/etc/ansible/roles/playbook/httpd.conf dest=/etc/httpd/conf/httpd.conf<br>    - name: copy default index.html<br>      copy: src=/etc/ansible/roles/playbook/index.html dest=/usr/share/httpd/noindex/index.html<br>    - name: manage httpd service<br>      service: name=httpd state=started enabled=<span class="hljs-built_in">yes</span><br><br><span class="hljs-comment">#在C7-3主机上进行干跑测试</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook --check --limit 192.168.124.13 -C /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [install httpd] ***************************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [config httpd service] ********************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [copy default index.html] *****************************************************************************************************<br>changed: [192.168.124.13]<br><br>TASK [manage httpd service] ********************************************************************************************************<br>changed: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=5    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><br><span class="hljs-comment">#显示无报错，在C7-3被控主机真正运行操作</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook --limit 192.168.124.13 /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [install httpd] ***************************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [config httpd service] ********************************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [copy default index.html] *****************************************************************************************************<br>changed: [192.168.124.13]<br><br>TASK [manage httpd service] ********************************************************************************************************<br>changed: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=5    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#访问C7-3 httpd页面</span><br>[root@C7 ~]<span class="hljs-comment"># curl 192.168.124.13:80</span><br>If you can see,that<span class="hljs-string">&#x27;s good!</span><br><span class="hljs-string"></span><br><span class="hljs-string">#查看C7-3 httpd监听端口</span><br><span class="hljs-string">[root@C7 ~]# ansible 192.168.124.13 -a &quot;ss -ntul&quot;</span><br><span class="hljs-string">192.168.124.13 | CHANGED | rc=0 &gt;&gt;</span><br><span class="hljs-string">Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              </span><br><span class="hljs-string">udp    UNCONN     0      0      127.0.0.1:323                   *:*                  </span><br><span class="hljs-string">udp    UNCONN     0      0         [::1]:323                [::]:*                  </span><br><span class="hljs-string">tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  </span><br><span class="hljs-string">tcp    LISTEN     0      128       *:80                    *:*                  </span><br><span class="hljs-string">tcp    LISTEN     0      128       *:22                    *:*                  </span><br><span class="hljs-string">tcp    LISTEN     0      100       [::1]:25                 [::]:*                  </span><br><span class="hljs-string">tcp    LISTEN     0      128    [::]:22                 [::]:*                  </span><br><span class="hljs-string"></span><br><span class="hljs-string">#查看所有主机 httpd监听端口使用 ansible all -a &quot;ss -ntul&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#编写notify 和handlers 实现修改配置文件后触发httpd 服务重启</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd_install.yml</span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  tasks:<br>    - name: install httpd<br>      yum: name=httpd<br>    - name: config httpd service<br>      copy: src=/etc/ansible/roles/playbook/httpd.conf dest=/etc/httpd/conf/httpd.conf<br>      notify: restart httpd service        <span class="hljs-comment">#新行</span><br>    - name: copy default index.html<br>      copy: src=/etc/ansible/roles/playbook/index.html dest=/usr/share/httpd/noindex/index.html<br>    - name: manage httpd service<br>      service: name=httpd state=started enabled=<span class="hljs-built_in">yes</span><br>  handlers:                                <span class="hljs-comment">#新行</span><br>    - name: restart httpd service          <span class="hljs-comment">#新行</span><br>      service: name=httpd state=restarted  <span class="hljs-comment">#新行</span><br><br><span class="hljs-comment">#顺便把httpd 服务端口改了</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd.conf</span><br><span class="hljs-comment">#Listen 80</span><br>Listen 88<br><br><span class="hljs-comment">#任何时候都不要忘记测试</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook --check -C /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [install httpd] ***************************************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [config httpd service] ********************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>TASK [copy default index.html] *****************************************************************************************************<br>changed: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [manage httpd service] ********************************************************************************************************<br>changed: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>RUNNING HANDLER [restart httpd service] ********************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=6    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#测试无误后，在所有被控主机上执行操作</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [install httpd] ***************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [config httpd service] ********************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>TASK [copy default index.html] *****************************************************************************************************<br>changed: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [manage httpd service] ********************************************************************************************************<br>ok: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>RUNNING HANDLER [restart httpd service] ********************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=6    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><span class="hljs-comment">#访问两台被控主机httpd 页面</span><br>[root@C7 ~]<span class="hljs-comment"># curl C7-3:88</span><br>If you can see,that<span class="hljs-string">&#x27;s good!</span><br><span class="hljs-string">[root@C7 ~]# curl C7-4:88</span><br><span class="hljs-string">If you can see,that&#x27;</span>s good!<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#除了可以这样执行之外，我们还可以利用ansible-playbook仅执行指定的tags任务</span><br><span class="hljs-comment">#给指定的tasks打标签，以供调用</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd_install.yml </span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  tasks:<br>    - name: install httpd<br>      yum: name=httpd<br>    - name: config httpd service<br>      copy: src=/etc/ansible/roles/playbook/httpd.conf dest=/etc/httpd/conf/httpd.conf<br>      notify: restart httpd service        <br>      tags: config                         <span class="hljs-comment">#新行</span><br>    - name: copy default index.html<br>      copy: src=/etc/ansible/roles/playbook/index.html dest=/usr/share/httpd/noindex/index.html<br>    - name: manage httpd service<br>      service: name=httpd state=started enabled=<span class="hljs-built_in">yes</span><br>  handlers:                                <br>    - name: restart httpd service          <br>      service: name=httpd state=restarted  <br><br><span class="hljs-comment">#修改httpd 端口</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd.conf</span><br><span class="hljs-comment">#Listen 80</span><br>Listen 8888<br><br><span class="hljs-comment">#列出playbook中所有的tags</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook --list-tags /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>playbook: /etc/ansible/roles/playbook/httpd_install.yml<br><br>  play <span class="hljs-comment">#1 (srvs): srvsTAGS: []</span><br>      TASK TAGS: [config]<br><br><span class="hljs-comment">#用ansible-playbook 仅执行指定的tags 任务</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -t config /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [config httpd service] ********************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>RUNNING HANDLER [restart httpd service] ********************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#查看远程被控主机httpd 监听端口</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;ss -ntul&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      128    [::]:8888               [::]:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      128       *:8888                  *:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br><br><span class="hljs-comment">#访问</span><br>[root@C7 ~]<span class="hljs-comment"># curl C7-3:8888</span><br>If you can see,that<span class="hljs-string">&#x27;s good!</span><br><span class="hljs-string">[root@C7 ~]# curl C7-4:8888</span><br><span class="hljs-string">If you can see,that&#x27;</span>s good!<br></code></pre></td></tr></table></figure><hr><h1 id="变量使用"><a href="#变量使用" class="headerlink" title="变量使用"></a>变量使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#接下来，让我们初步了解ansible-playbook的变量如何使用</span><br><span class="hljs-comment">#变量仅由字母、数字和下划线组成，且只能以数字开头</span><br><span class="hljs-comment">#变量可在/etc/ansible/hosts 中定义，或者在独立的变量YAML文件中定义</span><br><span class="hljs-comment">#变量调用方式：通过 &#123;&#123; variable_name &#125;&#125; 调用变量，且变量名前后必须有空格</span><br><span class="hljs-comment">#有时用 &quot;&#123;&#123; variable_name &#125;&#125;&quot; 才会生效</span><br><br><span class="hljs-comment">#实际应用一下，编写一个简单的yml文件测试</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/vartest.yml</span><br>---<br>- hosts: srvs<br>  tasks:<br>    - name: playbook var <span class="hljs-built_in">test</span><br>      shell: /bin/echo <span class="hljs-string">&quot;laowang is pig &#123;&#123; ansible_distribution_major_version &#125;&#125;&quot;</span> &gt; /data/vartest.txt<br><br><span class="hljs-comment">#日常测试干跑</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/vartest.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [playbook var <span class="hljs-built_in">test</span>] ***********************************************************************************************************<br>skipping: [192.168.124.13]<br>skipping: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.14             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#测试无误，进行执行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/vartest.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [playbook var <span class="hljs-built_in">test</span>] ***********************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#查看远程被控主机文件内容</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;cat /data/vartest.txt&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>laowang is pig 7<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>laowang is pig 7<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#除了使用setup 模块提供的远程主机变量还可以在ansible 的hosts 文件中自定义变量</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts </span><br>[srvs]    <span class="hljs-comment"># []中的英文尽量写的好记一点</span><br>192.168.124.13    name=zhangsan course=linux <span class="hljs-comment">#被控主机IP</span><br>192.168.124.14    name=lisi course=centos <span class="hljs-comment">#被控主机IP</span><br><br><span class="hljs-comment">#修改之前的yml文件</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/vartest.yml</span><br>---<br>- hosts: srvs<br>  tasks:<br>    - name: playbook var <span class="hljs-built_in">test</span><br>      shell: /bin/echo <span class="hljs-string">&quot;Hi,my name is &#123;&#123; name &#125;&#125;,and I like study &#123;&#123; course &#125;&#125;.&quot;</span> &gt; /data/vartest.txt<br><br><span class="hljs-comment">#日常测试干跑</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/vartest.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [playbook var <span class="hljs-built_in">test</span>] ***********************************************************************************************************<br>skipping: [192.168.124.14]<br>skipping: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.14             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br><br><span class="hljs-comment">#运行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/vartest.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [playbook var <span class="hljs-built_in">test</span>] ***********************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><span class="hljs-comment">#查看</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;cat /data/vartest.txt&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Hi,my name is lisi,and I like study centos.<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Hi,my name is zhangsan,and I like study linux.<br><br><br><span class="hljs-comment">#尝试在playbook文件中直接定义变量使用</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/useradd.yml </span><br>---<br>- hosts: srvs<br>  vars:<br>    - username: zhangsan<br>    - usergroup: studylinux<br>  tasks:<br>    - name: create group<br>      group: name=&#123;&#123; usergroup &#125;&#125; state=present<br>    - name: create user<br>      user: name=&#123;&#123; username &#125;&#125; group=&#123;&#123; usergroup &#125;&#125; state=present<br><br><span class="hljs-comment">#测试干跑</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/useradd.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [create group] ****************************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>TASK [create user] *****************************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#运行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/useradd.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [create group] ****************************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>TASK [create user] *****************************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><span class="hljs-comment">#查看远程被控主机中 zhangsan 的用户信息</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;id zhangsan&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>uid=1001(zhangsan) gid=1001(studylinux) <span class="hljs-built_in">groups</span>=1001(studylinux)<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>uid=1001(zhangsan) gid=1001(studylinux) <span class="hljs-built_in">groups</span>=1001(studylinux)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#当我们不断的定义变量，随着时间累积其数量将会变得愈来愈多，编辑和管理也随着变得繁琐</span><br><span class="hljs-comment">#因此，我们可以单独创建定义变量的yml文件，再在playbook中引用即可</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/vars.yml</span><br>usergroup: teachers<br>username: lisi<br><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/useradd.yml </span><br>---<br>- hosts: srvs<br>  vars_files:    <span class="hljs-comment">#新行</span><br>    - vars.yml   <span class="hljs-comment">#新行</span><br><span class="hljs-comment">#  vars:</span><br><span class="hljs-comment">#    - username: zhangsan</span><br><span class="hljs-comment">#    - usergroup: studylinux</span><br>  tasks:<br>    - name: create group<br>      group: name=&#123;&#123; usergroup &#125;&#125; state=present<br>    - name: create user<br>      user: name=&#123;&#123; username &#125;&#125; group=&#123;&#123; usergroup &#125;&#125; state=present<br><br><br><span class="hljs-comment">#测试干跑</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/useradd.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [create group] ****************************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>TASK [create user] *****************************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#运行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/useradd.yml </span><br><br>PLAY [srvs] *************************************************************************************************************************<br><br>TASK [Gathering Facts] *************************************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [create group] ****************************************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>TASK [create user] *****************************************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>PLAY RECAP *************************************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br>查看远程被控主机中 lisi 的用户信息<br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;id lisi&quot;</span><br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>uid=1002(lisi) gid=1002(teachers) <span class="hljs-built_in">groups</span>=1002(teachers)<br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>uid=1002(lisi) gid=1002(teachers) <span class="hljs-built_in">groups</span>=1002(teachers)<br></code></pre></td></tr></table></figure><hr><h1 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h1><h2 id="除此之外，我们还可以在ansible-playbook中使用条件判断when-为了展示实验效果，我们临时添加一台虚拟机主机版本-主-x2F-被-主机IP-主机名-——-——-——-——-CentOS-6-被控端-192-168-124-20-C6"><a href="#除此之外，我们还可以在ansible-playbook中使用条件判断when-为了展示实验效果，我们临时添加一台虚拟机主机版本-主-x2F-被-主机IP-主机名-——-——-——-——-CentOS-6-被控端-192-168-124-20-C6" class="headerlink" title="#除此之外，我们还可以在ansible-playbook中使用条件判断when#为了展示实验效果，我们临时添加一台虚拟机主机版本 | 主&#x2F;被  | 主机IP  |  主机名  |——- | ——  | ——- | ——- ||CentOS 6|被控端|192.168.124.20|C6|"></a>#除此之外，我们还可以在ansible-playbook中使用条件判断when<br>#为了展示实验效果，我们临时添加一台虚拟机<br>主机版本 | 主&#x2F;被  | 主机IP  |  主机名  |<br>——- | ——  | ——- | ——- |<br>|CentOS 6|被控端|192.168.124.20|C6|<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#将免密验证执行完成</span><br>[root@C7 ~]<span class="hljs-comment"># scp /root/.ssh/authorized_keys 192.168.124.20:/root/.ssh/</span><br>root@192.168.124.20‘s password: <br>authorized_keys                                           100%  395   229.9KB/s   00:00    <br>[root@C7 ~]<span class="hljs-comment"># ssh 192.168.124.20</span><br>Last login: Mon Mar 30 08:49:10 2020 from 192.168.124.1<br>[root@C6 ~]<span class="hljs-comment"># exit</span><br><span class="hljs-built_in">logout</span><br>Connection to 192.168.124.20 closed.<br><br><span class="hljs-comment">#添加hosts被控主机清单</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts</span><br>[srvs]<br>192.168.124.13    <br>192.168.124.14    <br>192.168.124.20    <span class="hljs-comment">#新行</span><br><br><span class="hljs-comment">#查看一下，确实已被添加进去</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all --list</span><br>  hosts (3):<br>    192.168.124.13<br>    192.168.124.14<br>    192.168.124.20<br><br><span class="hljs-comment">#编写yml文件</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/dbserver.yml</span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  tasks:<br>    - name: Install DBserver software <span class="hljs-keyword">in</span> CentOS6<br>      yum: name=mysql-server<br>      when: ansible_distribution_major_version==<span class="hljs-string">&quot;6&quot;</span><br>    - name: Install DBserver software <span class="hljs-keyword">in</span> CentOS7<br>      yum: name=mariadb-server<br>      when: ansible_distribution_major_version==<span class="hljs-string">&quot;7&quot;</span><br><br><span class="hljs-comment">#测试</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/dbserver.yml </span><br><br>PLAY [srvs] ********************************************************************************<br><br>TASK [Gathering Facts] *********************************************************************<br>ok: [192.168.124.20]<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [Install DBserver software <span class="hljs-keyword">in</span> CentOS6] ************************************************<br>skipping: [192.168.124.14]<br>skipping: [192.168.124.13]<br>changed: [192.168.124.20]<br><br>TASK [Install DBserver software <span class="hljs-keyword">in</span> CentOS7] ************************************************<br>skipping: [192.168.124.20]<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP *********************************************************************************<br>192.168.124.13             : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.14             : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.20             : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br><br><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/dbserver.yml </span><br><br>PLAY [srvs] ********************************************************************************<br><br>TASK [Gathering Facts] *********************************************************************<br>ok: [192.168.124.20]<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [Install DBserver software <span class="hljs-keyword">in</span> CentOS6] ************************************************<br>skipping: [192.168.124.13]<br>skipping: [192.168.124.14]<br>fatal: [192.168.124.20]: FAILED! =&gt; &#123;<span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;changes&quot;</span>: &#123;<span class="hljs-string">&quot;installed&quot;</span>: [<span class="hljs-string">&quot;mysql-server&quot;</span>]&#125;, <br>……………………..<span class="hljs-comment">#报错</span><br>\nInstall       4 Package(s)\n\nTotal download size: 10 M\nInstalled size: 29 M\nDownloading Packages:\n<span class="hljs-string">&quot;]&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">TASK [Install DBserver software in CentOS7] ************************************************</span><br><span class="hljs-string">changed: [192.168.124.13]</span><br><span class="hljs-string">changed: [192.168.124.14]</span><br><span class="hljs-string"></span><br><span class="hljs-string">PLAY RECAP *********************************************************************************</span><br><span class="hljs-string">192.168.124.13             : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   </span><br><span class="hljs-string">192.168.124.14             : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   </span><br><span class="hljs-string">192.168.124.20             : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   </span><br></code></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#CentOS6主机出现报错，经过我检查排错确认是由于该主机网关不通导致无法进行软件包安装</span><br><span class="hljs-comment">#解决方法：在CentOS6主机上添加网管并ping测试</span><br>[root@C6 ~]<span class="hljs-comment"># vim /etc/resolv.conf </span><br><span class="hljs-comment">#添加一条或多条</span><br>nameserver 192.168.124.10    <span class="hljs-comment">#此IP是我个人虚拟机的网关</span><br>nameserver 114.114.114.114    <span class="hljs-comment">#通用网关</span><br><br>[root@C6 ~]<span class="hljs-comment"># ping www.baidu.com</span><br>PING www.a.shifen.com (61.135.169.125) 56(84) bytes of data.<br>64 bytes from 61.135.169.125: icmp_seq=1 ttl=128 time=7.43 ms<br>64 bytes from 61.135.169.125: icmp_seq=2 ttl=128 time=6.12 ms<br>^C<br>--- www.a.shifen.com ping statistics ---<br>3 packets transmitted, 3 received, 0% packet loss, time 2715ms<br>rtt min/avg/max/mdev = 6.129/7.320/8.395/0.934 ms<br><br><br><span class="hljs-comment">#在主控端重新执行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/dbserver.yml </span><br><br>PLAY [srvs] ********************************************************************************<br><br>TASK [Gathering Facts] *********************************************************************<br>ok: [192.168.124.20]<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [Install DBserver software <span class="hljs-keyword">in</span> CentOS6] ************************************************<br>skipping: [192.168.124.13]<br>skipping: [192.168.124.14]<br>changed: [192.168.124.20]<br><br>TASK [Install DBserver software <span class="hljs-keyword">in</span> CentOS7] ************************************************<br>skipping: [192.168.124.20]<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>PLAY RECAP *********************************************************************************<br>192.168.124.13             : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.14             : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br>192.168.124.20             : ok=2    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#查看远程被控主机安装包信息，忽略WARNING警告信息</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;rpm -q mariadb&quot;</span><br>[WARNING]: Consider using the yum, dnf or zypper module rather than running <span class="hljs-string">&#x27;rpm&#x27;</span>.  If you<br>need to use <span class="hljs-built_in">command</span> because yum, dnf or zypper is insufficient you can add <span class="hljs-string">&#x27;warn: false&#x27;</span> to<br>this <span class="hljs-built_in">command</span> task or <span class="hljs-built_in">set</span> <span class="hljs-string">&#x27;command_warnings=False&#x27;</span> <span class="hljs-keyword">in</span> ansible.cfg to get rid of this<br>message.<br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>mariadb-5.5.65-1.el7.x86_64<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>mariadb-5.5.65-1.el7.x86_64<br>192.168.124.20 | FAILED | rc=1 &gt;&gt;<br>package mariadb is not installednon-zero <span class="hljs-built_in">return</span> code<br><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;rpm -q mysql&quot;</span><br>[WARNING]: Consider using the yum, dnf or zypper module rather than running <span class="hljs-string">&#x27;rpm&#x27;</span>.  If you<br>need to use <span class="hljs-built_in">command</span> because yum, dnf or zypper is insufficient you can add <span class="hljs-string">&#x27;warn: false&#x27;</span> to<br>this <span class="hljs-built_in">command</span> task or <span class="hljs-built_in">set</span> <span class="hljs-string">&#x27;command_warnings=False&#x27;</span> <span class="hljs-keyword">in</span> ansible.cfg to get rid of this<br>message.<br>192.168.124.20 | CHANGED | rc=0 &gt;&gt;<br>mysql-5.1.73-8.el6_8.x86_64<br>192.168.124.13 | FAILED | rc=1 &gt;&gt;<br>package mysql is not installednon-zero <span class="hljs-built_in">return</span> code<br>192.168.124.14 | FAILED | rc=1 &gt;&gt;<br>package mysql is not installednon-zero <span class="hljs-built_in">return</span> code<br><br><span class="hljs-comment">#CentOS6的使命暂时结束，从hosts文件中移除</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts</span><br>[srvs] <br>192.168.124.13<br>192.168.124.14 <br><span class="hljs-comment">#192.168.124.20    #注释</span><br></code></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#ansible-playbook 使用循环 with_items</span><br><span class="hljs-comment">#使用循环结构多次执行同一个task任务</span><br><br><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/addusers.yml</span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  tasks:<br>    - name: add more group<br>      group: name=&#123;&#123; item &#125;&#125; state=present<br>      with_items:<br>      - group1<br>      - group2<br>      - group3<br>    - name: add more user<br>      user: name=&#123;&#123; item.username &#125;&#125; group=&#123;&#123; item.usergroup &#125;&#125; state=present<br>      with_items:<br>        - &#123; username: <span class="hljs-string">&#x27;user1&#x27;</span>, usergroup: <span class="hljs-string">&#x27;group1&#x27;</span> &#125;<br>        - &#123; username: <span class="hljs-string">&#x27;user2&#x27;</span>, usergroup: <span class="hljs-string">&#x27;group2&#x27;</span> &#125;<br>        - &#123; username: <span class="hljs-string">&#x27;user3&#x27;</span>, usergroup: <span class="hljs-string">&#x27;group3&#x27;</span> &#125;<br><br><br><span class="hljs-comment">#测试</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/addusers.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [add more group] *********************************************************************************************<br>changed: [192.168.124.14] =&gt; (item=group1)<br>changed: [192.168.124.13] =&gt; (item=group1)<br>changed: [192.168.124.14] =&gt; (item=group2)<br>changed: [192.168.124.13] =&gt; (item=group2)<br>changed: [192.168.124.14] =&gt; (item=group3)<br>changed: [192.168.124.13] =&gt; (item=group3)<br><br>TASK [add more user] **********************************************************************************************<br>changed: [192.168.124.14] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user1&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group1&#x27;</span>&#125;)<br>changed: [192.168.124.13] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user1&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group1&#x27;</span>&#125;)<br>changed: [192.168.124.14] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user2&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group2&#x27;</span>&#125;)<br>changed: [192.168.124.13] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user2&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group2&#x27;</span>&#125;)<br>changed: [192.168.124.14] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user3&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group3&#x27;</span>&#125;)<br>changed: [192.168.124.13] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user3&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group3&#x27;</span>&#125;)<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#运行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/addusers.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [add more group] *********************************************************************************************<br>changed: [192.168.124.14] =&gt; (item=group1)<br>changed: [192.168.124.13] =&gt; (item=group1)<br>changed: [192.168.124.14] =&gt; (item=group2)<br>changed: [192.168.124.13] =&gt; (item=group2)<br>changed: [192.168.124.14] =&gt; (item=group3)<br>changed: [192.168.124.13] =&gt; (item=group3)<br><br>TASK [add more user] **********************************************************************************************<br>changed: [192.168.124.14] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user1&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group1&#x27;</span>&#125;)<br>changed: [192.168.124.13] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user1&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group1&#x27;</span>&#125;)<br>changed: [192.168.124.14] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user2&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group2&#x27;</span>&#125;)<br>changed: [192.168.124.13] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user2&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group2&#x27;</span>&#125;)<br>changed: [192.168.124.14] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user3&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group3&#x27;</span>&#125;)<br>changed: [192.168.124.13] =&gt; (item=&#123;u<span class="hljs-string">&#x27;username&#x27;</span>: u<span class="hljs-string">&#x27;user3&#x27;</span>, u<span class="hljs-string">&#x27;usergroup&#x27;</span>: u<span class="hljs-string">&#x27;group3&#x27;</span>&#125;)<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><span class="hljs-comment">#查看用户信息</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -m shell -a &quot;cat /etc/passwd|grep user&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>user1:x:1003:1003::/home/user1:/bin/bash<br>user2:x:1004:1004::/home/user2:/bin/bash<br>user3:x:1005:1005::/home/user3:/bin/bash<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>user1:x:1003:1003::/home/user1:/bin/bash<br>user2:x:1004:1004::/home/user2:/bin/bash<br>user3:x:1005:1005::/home/user3:/bin/bash<br></code></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#ansible-playbook 使用模板</span><br><span class="hljs-comment">#templates 可以使用ansible-playbook 中定义的变量用以生成指定的文件</span><br><span class="hljs-comment">#下面我以httpd_install.yml 文件进行演示</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd_install.yml </span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  tasks:<br>    - name: install httpd<br>      yum: name=httpd<br>    - name: config httpd service<br><span class="hljs-comment">#      copy: src=/etc/ansible/roles/playbook/httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br>      template: src=httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf  <span class="hljs-comment">#新行</span><br>      notify: restart httpd service<br>      tags: config<br>    - name: copy default index.html<br>      copy: src=/etc/ansible/roles/playbook/index.html dest=/usr/share/httpd/noindex/index.html<br>    - name: manage httpd service<br>      service: name=httpd state=started enabled=<span class="hljs-built_in">yes</span><br>  handlers:<br>    - name: restart httpd service<br>      service: name=httpd state=restarted<br><br>[root@C7 ~]<span class="hljs-comment"># mkdir /etc/ansible/roles/playbook/templates</span><br>[root@C7 ~]<span class="hljs-comment"># cp /etc/ansible/roles/playbook/httpd.conf /etc/ansible/roles/playbook/templates/httpd.conf.j2</span><br><br>[root@C7 ~]<span class="hljs-comment"># vim !$</span><br><span class="hljs-comment">#Listen 8888</span><br>Listen &#123;&#123;httpd_port&#125;&#125;<br><br><span class="hljs-comment">#也许有人看不明白 vim !$ 是什么意思，!$表示的是调用上一次执行的命令行中最后一个参数</span><br><span class="hljs-comment">#对于这里而言，执行 vim !$ 等同于 vim /etc/ansible/roles/playbook/templates/httpd.conf.j2</span><br><span class="hljs-comment">#掌握技巧能够使我们工作效率大大增加</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -e httpd_port=10086 /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [install httpd] **********************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [config httpd service] ***************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>TASK [copy default index.html] ************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [manage httpd service] ***************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>RUNNING HANDLER [restart httpd service] ***************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><span class="hljs-comment">#查看端口</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;ss -ntul&quot;</span><br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:10086              [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:10086              [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br><br><br>[root@C7 ~]<span class="hljs-comment"># ansible all -m shell -a &quot;cat /etc/httpd/conf/httpd.conf|grep ^Listen&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Listen 10086<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Listen 10086<br></code></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#变量除了可以直接引用之外，还可以进行变量运算</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts </span><br>[srvs] <br>192.168.124.13 httpd_port=110 <br>192.168.124.14 httpd_port=150 <br><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/templates/httpd.conf.j2</span><br><span class="hljs-comment">#Listen &#123;&#123;httpd_port&#125;&#125;</span><br>Listen &#123;&#123;httpd_port*2&#125;&#125;<br><br><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [install httpd] **********************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [config httpd service] ***************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>TASK [copy default index.html] ************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [manage httpd service] ***************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>RUNNING HANDLER [restart httpd service] ***************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;ss -ntul&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:300                [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:220                [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br><br><br>[root@C7 ~]<span class="hljs-comment"># ansible all -m shell -a &quot;cat /etc/httpd/conf/httpd.conf|grep ^Listen&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Listen 300<br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Listen 220<br><br><br><span class="hljs-comment">#模板中还可以使用循环结构动态生成内容</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts </span><br>[srvs] <br>192.168.124.13<br>192.168.124.14<br><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd_install.yml</span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  vars:<br>    httpd_vhosts:<br>      - web01:<br>        listen: 8001<br>        documentroot: <span class="hljs-string">&#x27;/data/web01&#x27;</span><br><br>      - web02:<br>        listen: 8002<br>        documentroot: <span class="hljs-string">&#x27;/data/web02&#x27;</span><br><br>  tasks:<br>    - name: install httpd<br>      yum: name=httpd<br><br>    - name: config httpd service<br><span class="hljs-comment">#      copy: src=/etc/ansible/roles/playbook/httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br>      template: src=vhostport.conf.j2 dest=/etc/httpd/conf.d/vhostport.conf<br>      notify: restart httpd service<br>      tags: config<br><br>    - name: copy default index.html<br>      copy: src=/etc/ansible/roles/playbook/index.html dest=/usr/share/httpd/noindex/index.html<br><br>    - name: manage httpd service<br>      service: name=httpd state=started enabled=<span class="hljs-built_in">yes</span><br><br>  handlers:<br>    - name: restart httpd service<br>      service: name=httpd state=restarted<br><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/vhostport.conf.j2</span><br>&#123;% <span class="hljs-keyword">for</span> vhost <span class="hljs-keyword">in</span> httpd_vhosts %&#125;<br>listen &#123;&#123;vhost.listen&#125;&#125;<br>&#123;% endfor %&#125;<br><br>&#123;% <span class="hljs-keyword">for</span> vhost <span class="hljs-keyword">in</span> httpd_vhosts %&#125;<br>&lt;virtualhost *.&#123;&#123;vhost.listen&#125;&#125;&gt;<br>        documentroot &#123;&#123;vhost.documentroot&#125;&#125;<br>        &lt;directory &#123;vhost.documentroot&#125;&gt;<br>                require all granted<br>        &lt;/directory&gt;<br>&lt;/virtualhost&gt;<br>&#123;% endfor %&#125;<br><br><span class="hljs-comment">#测试干跑</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [install httpd] **********************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [config httpd service] ***************************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>TASK [copy default index.html] ************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [manage httpd service] ***************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>RUNNING HANDLER [restart httpd service] ***************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#运行</span><br>[root@C7 ~]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/httpd_install.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>TASK [install httpd] **********************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [config httpd service] ***************************************************************************************<br>changed: [192.168.124.13]<br>changed: [192.168.124.14]<br><br>TASK [copy default index.html] ************************************************************************************<br>ok: [192.168.124.13]<br>ok: [192.168.124.14]<br><br>TASK [manage httpd service] ***************************************************************************************<br>ok: [192.168.124.14]<br>ok: [192.168.124.13]<br><br>RUNNING HANDLER [restart httpd service] ***************************************************************************<br>changed: [192.168.124.14]<br>changed: [192.168.124.13]<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>192.168.124.14             : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br>[root@C7 ~]<span class="hljs-comment"># ansible all -a &quot;ss -ntul&quot;</span><br>192.168.124.14 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:8001               [::]:*                  <br>tcp    LISTEN     0      128    [::]:8002               [::]:*                  <br>tcp    LISTEN     0      128    [::]:300                [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:220                [::]:*                  <br>tcp    LISTEN     0      128    [::]:8001               [::]:*                  <br>tcp    LISTEN     0      128    [::]:8002               [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br><br><br>[root@C7 ~]<span class="hljs-comment"># curl C7-3:8001</span><br>If you can see,that<span class="hljs-string">&#x27;s good!</span><br><span class="hljs-string">[root@C7 ~]# curl C7-3:8002</span><br><span class="hljs-string">If you can see,that&#x27;</span>s good!<br>[root@C7 ~]<span class="hljs-comment"># curl C7-4:8002</span><br>If you can see,that<span class="hljs-string">&#x27;s good!</span><br><span class="hljs-string">[root@C7 ~]# curl C7-4:8001</span><br><span class="hljs-string">If you can see,that&#x27;</span>s good!<br></code></pre></td></tr></table></figure></h2><h1 id="模块化安装httpd"><a href="#模块化安装httpd" class="headerlink" title="模块化安装httpd"></a>模块化安装httpd</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#让我们稍微升级一下，以模块化的方式安装httpd服务</span><br><span class="hljs-comment">#将所有主机还原到刚刚配置完成免密钥登录远程被控主机的状态，并且只保留C7 与C7-3 两台虚拟机</span><br><span class="hljs-comment">#使用时间管理技能：时光回溯……….完成</span><br><br><span class="hljs-comment">#配置远程被控主机清单</span><br>[root@C7 ~]<span class="hljs-comment"># vim /etc/ansible/hosts</span><br>[srvs]<br>192.168.124.13<br><br><span class="hljs-comment">#测试能否ping通</span><br>[root@C7 ~]<span class="hljs-comment"># ansible all -m ping</span><br>192.168.124.13 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>    &#125;, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br><br><br>[root@C7 ~]<span class="hljs-comment"># mkdir -p /etc/ansible/roles/playbook/httpd/&#123;tasks,handlers,files,templates,vars&#125;</span><br>[root@C7 ~]<span class="hljs-comment"># tree /etc/ansible/ -d</span><br>/etc/ansible/<br>└── roles<br>    └── playbook<br>        └── httpd<br>            ├── files<br>            ├── handlers<br>            ├── tasks<br>            ├── templates<br>            └── vars<br><br>[root@C7 ~]<span class="hljs-comment"># cd /etc/ansible/roles/playbook/httpd/tasks/</span><br>[root@C7 tasks]<span class="hljs-comment"># vim main.yml</span><br>- include: install.yml<br>- include: config.yml<br>- include: index.yml<br>- include: service.yml<br><br><br>[root@C7 tasks]<span class="hljs-comment"># vim install.yml</span><br>- name: Install httpd package<br>  yum: name=httpd<br><br><br>[root@C7 tasks]<span class="hljs-comment"># vim index.yml</span><br>- name: index.html<br>  copy: src=index.html dest=/var/www/html/<br><br><br>[root@C7 tasks]<span class="hljs-comment"># vim config.yml</span><br>- name: config file<br>  copy: src=httpd.conf dest=/etc/httpd/conf/ backup=<span class="hljs-built_in">yes</span><br>  notify: restart<br><br><br>[root@C7 tasks]<span class="hljs-comment"># vim service.yml</span><br>- name: start service<br>  service: name=httpd state=started enabled=<span class="hljs-built_in">yes</span><br><br><br>[root@C7 tasks]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd/handlers/main.yml</span><br>- name: restart<br>  service: name=httpd state=restarted<br><br>[root@C7 tasks]<span class="hljs-comment"># yum install httpd -y</span><br><br>[root@C7 tasks]<span class="hljs-comment"># cp /etc/httpd/conf/httpd.conf /etc/ansible/roles/playbook/httpd/files/</span><br>[root@C7 tasks]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/httpd/files/index.html</span><br>&lt;html&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>&lt;meta http-equiv=Content-Type content=<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>&gt;<br>&lt;title&gt;HTML语言&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;a href=https://blog.csdn.net/dushansao&gt;<br>&lt;img src=<span class="hljs-string">&quot;https://profile.csdnimg.cn/7/0/B/1_dushansao&quot;</span> /img&gt;&lt;/a&gt;<br>&lt;a href=https://blog.csdn.net/dushansao&gt;<br>&lt;h1 style=<span class="hljs-string">&quot;color:red&quot;</span>&gt;欢迎来到我的博客&lt;/h1&gt;&lt;/a&gt;<br>&lt;p&gt;&lt;a href=https://blog.csdn.net/dushansao&gt;点我，让你好看！&lt;/a&gt; 不点必将后悔！&lt;/p&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@C7 tasks]<span class="hljs-comment"># vim /etc/ansible/roles/playbook/role_httpd.yml</span><br>---<br>- hosts: srvs<br>  remote_user: root<br>  roles:<br>    - role: /etc/ansible/roles/playbook/httpd<br><br><br>[root@C7 tasks]<span class="hljs-comment"># tree /etc/ansible/</span><br>/etc/ansible/<br>├── ansible.cfg<br>├── hosts<br>└── roles<br>    └── playbook<br>        ├── httpd<br>        │   ├── files<br>        │   │   ├── httpd.conf<br>        │   │   └── index.html<br>        │   ├── handlers<br>        │   │   └── main.yml<br>        │   ├── tasks<br>        │   │   ├── config.yml<br>        │   │   ├── index.yml<br>        │   │   ├── install.yml<br>        │   │   ├── main.yml<br>        │   │   └── service.yml<br>        │   ├── templates<br>        │   └── vars<br>        └── role_httpd.yml<br><br><br><span class="hljs-comment">#测试</span><br>[root@C7 tasks]<span class="hljs-comment"># ansible-playbook -C /etc/ansible/roles/playbook/role_httpd.yml</span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : Install httpd package] **************************************************<br>ok: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : config file] ************************************************************<br>ok: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : index.html] *************************************************************<br>changed: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : start service] **********************************************************<br>changed: [192.168.124.13]<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=5    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#运行</span><br>[root@C7 tasks]<span class="hljs-comment"># ansible-playbook /etc/ansible/roles/playbook/role_httpd.yml </span><br><br>PLAY [srvs] *******************************************************************************************************<br><br>TASK [Gathering Facts] ********************************************************************************************<br>ok: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : Install httpd package] **************************************************<br>ok: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : config file] ************************************************************<br>ok: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : index.html] *************************************************************<br>changed: [192.168.124.13]<br><br>TASK [/etc/ansible/roles/playbook/httpd : start service] **********************************************************<br>changed: [192.168.124.13]<br><br>PLAY RECAP ********************************************************************************************************<br>192.168.124.13             : ok=5    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br><br><br><span class="hljs-comment">#查看远程被控主机端口</span><br>[root@C7 tasks]<span class="hljs-comment"># ansible all -a &quot;ss -ntul&quot;</span><br>192.168.124.13 | CHANGED | rc=0 &gt;&gt;<br>Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              <br>udp    UNCONN     0      0      127.0.0.1:323                   *:*                  <br>udp    UNCONN     0      0         [::1]:323                [::]:*                  <br>tcp    LISTEN     0      100    127.0.0.1:25                    *:*                  <br>tcp    LISTEN     0      128       *:22                    *:*                  <br>tcp    LISTEN     0      100       [::1]:25                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:80                 [::]:*                  <br>tcp    LISTEN     0      128    [::]:22                 [::]:*                  <br><br><br><span class="hljs-comment">#网页打开</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200603205440604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><h1 id="点击跳至文章末尾"><a href="#点击跳至文章末尾" class="headerlink" title="点击跳至文章末尾"></a>点击跳至文章末尾</h1><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>ansible</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ansible</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础命令</title>
    <link href="/2022/10/28/command/"/>
    <url>/2022/10/28/command/</url>
    
    <content type="html"><![CDATA[<h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p><strong>grep : 分析一行信息，如果其中有我们需要的信息，就将该行拿出来.</strong></p><p><strong>常用参数:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-i : 忽略大小写的不同<br>-n : 输出行号<br>-v : 反向选择，显示没有查找内容的行<br>-o : 与-v相反，只输出文件中匹配到的部分。<br>-A : &lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。<br>-B : 在显示符合范本样式的那一行之外，并显示该行之前的内容。<br>-C : &lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。<br>-E : 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。<br></code></pre></td></tr></table></figure><hr><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><p><strong>sed是一种流编辑器，它是文本处理中非常中的工具，能够配合正则表达式使用.处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</strong></p><p><strong>常用選項</strong> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-n <span class="hljs-comment">#不輸出模式空間内容到屏幕，即不自動打印(但sed自帶默認打印)</span><br>-e <span class="hljs-comment">#多點編輯</span><br>-f /PATH/SCRIPT_FILE <span class="hljs-comment">#從指定文件中讀取編輯脚本</span><br>-r <span class="hljs-comment">#支持使用擴展正則表達式</span><br>-i <span class="hljs-comment">#備份文件並原處編輯</span><br></code></pre></td></tr></table></figure><p><strong>地址定界</strong> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">1&gt; 不給地址:對全文進行處理<br>    <br>2&gt; 單地址:<br>  <span class="hljs-comment">#:指定的行，$:最後一行</span><br>  /pattern/:被此處模式所能夠匹配到的每一行<br><br>3&gt; 地址範圍:<br>  <span class="hljs-comment">#,#</span><br>  <span class="hljs-comment">#,+#</span><br>  /part1/,/part2/<br>  <span class="hljs-comment">#,/part1/</span><br><br>4&gt; ~:步進<br>  1~2奇數行<br>  2~2偶數行<br></code></pre></td></tr></table></figure><p><strong>編輯命令</strong> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">a [\]text <span class="hljs-comment">#在指定行後面追加文本，支持使用\n實現多行追加。</span><br>i [\]text <span class="hljs-comment">#在当前行上面插入文本。</span><br>c\ <span class="hljs-comment">#把选定的行改为新的文本。</span><br>d <span class="hljs-comment">#删除，删除选择的行。</span><br>D <span class="hljs-comment">#删除模板块的第一行。</span><br>s <span class="hljs-comment">#替换指定字符</span><br>h <span class="hljs-comment">#拷贝模板块的内容到内存中的缓冲区。</span><br>H <span class="hljs-comment">#追加模板块的内容到内存中的缓冲区。</span><br>g <span class="hljs-comment">#获得内存缓冲区的内容，并替代当前模板块中的文本。</span><br>G <span class="hljs-comment">#获得内存缓冲区的内容，并追加到当前模板块文本的后面。</span><br>l <span class="hljs-comment">#列表不能打印字符的清单。</span><br>n <span class="hljs-comment">#读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</span><br>N <span class="hljs-comment">#追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</span><br>p <span class="hljs-comment">#打印當前模式空間内容，追加到默認輸出之後。</span><br>P(大写) <span class="hljs-comment">#打印模板块的第一行。</span><br>q <span class="hljs-comment">#退出Sed。</span><br>b lable <span class="hljs-comment">#分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</span><br>r file <span class="hljs-comment">#从file中读行。</span><br>t label <span class="hljs-comment">#if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span><br>T label <span class="hljs-comment">#错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span><br>w /path/file <span class="hljs-comment">#保存模式匹配的行至指定文件。  </span><br>W /path/file <span class="hljs-comment">#保存模式匹配的第一行至指定文件。    </span><br>! <span class="hljs-comment">#模式空間中匹配行取反處理。  </span><br>= <span class="hljs-comment">#為模式空間中的行打印行號。  </span><br>    <span class="hljs-comment"># #把注释扩展到下一个换行符以前。</span><br></code></pre></td></tr></table></figure><p><strong>sed替換標記</strong> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">s/// 查找替換，支持使用其他分割符，s@@@,s%%%,s<span class="hljs-comment">###等</span><br></code></pre></td></tr></table></figure><p><strong>替換標記</strong> :</p><table><thead><tr><th>字  符</th><th>表 达 含 义</th></tr></thead><tbody><tr><td>g</td><td>行内全局替换</td></tr><tr><td>p</td><td>顯示替換成功的行</td></tr><tr><td>w &#x2F;PATH&#x2F;FILE</td><td>將替換成功的行保存至文件中</td></tr><tr><td>x</td><td>互换模式空間中的文本和缓冲区中的文本</td></tr><tr><td>y</td><td>把一个字符翻译为另外的字符（但是不用于正则表达式）</td></tr><tr><td>\1</td><td>子串匹配标记</td></tr><tr><td>&amp;</td><td>已匹配字符串标记</td></tr></tbody></table><p><strong>示例 :</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed ‘2p’  /etc/passwd <br>sed  -n ‘2p’ /etc/passwd <br>sed  -n ‘1,4p’ /etc/passwd <br>sed  -n ‘/root/p’  /etc/passwd <br>sed  -n ‘2,/root/p’  /etc/passwd 从2行开始 <br>sed  -n ‘/^$/=’  file 显示空行行号 <br>sed  -n  -e ‘/^$/p’ -e ‘/^$/=’  file <br>sed ‘/root/a\superman’  /etc/passwd行后 <br>sed ‘/root/i\superman’ /etc/passwd 行前 <br>sed ‘/root/c\superman’ /etc/passwd 代替行<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed ‘/^$/d’ file <br>sed ‘1,10d’   file <br><span class="hljs-built_in">nl</span>   /etc/passwd | sed ‘2,5d’ <br><span class="hljs-built_in">nl</span>   /etc/passwd | sed ‘2a tea’ <br>sed <span class="hljs-string">&#x27;s/test/mytest/g&#x27;</span> example <br>sed –n ‘s/root/&amp;superman/p’ /etc/passwd 单词后 <br>sed –n ‘s/root/superman&amp;/p’ /etc/passwd 单词前 <br>sed -e ‘s/dog/cat/’ -e ‘s/hi/lo/’ pets   <br>sed –i.bak  ‘s/dog/cat/g’ pets<br></code></pre></td></tr></table></figure><p><strong>sed元字符集</strong> :</p><table><thead><tr><th>字  符</th><th>表 达 含 义</th><th>示 例</th></tr></thead><tbody><tr><td>^</td><td>匹配行开始</td><td>如：&#x2F;^sed&#x2F;匹配所有以sed开头的行</td></tr><tr><td>$</td><td>匹配行结束</td><td>如：&#x2F;sed$&#x2F;匹配所有以sed结尾的行</td></tr><tr><td>.</td><td>匹配一个非换行符的任意字符</td><td>如：&#x2F;s.d&#x2F;匹配s后接一个任意字符，最后是d</td></tr><tr><td>*</td><td>匹配0个或多个字符</td><td>如：&#x2F;*sed&#x2F;匹配所有模板是一个或多个空格后紧跟sed的行</td></tr><tr><td>[]</td><td>匹配一个指定范围内的字符</td><td>如&#x2F;[ss]ed&#x2F;匹配sed和Sed</td></tr><tr><td>[^]</td><td>匹配一个不在指定范围内的字符</td><td>如：&#x2F;[^A-RT-Z]ed&#x2F;匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行</td></tr><tr><td>\(..\)</td><td>匹配子串，保存匹配的字符</td><td>如s&#x2F;(love)able&#x2F;\1rs，loveable被替换成lovers</td></tr><tr><td>&amp;</td><td>保存搜索字符用来替换其他字符</td><td>如s&#x2F;love&#x2F;<strong>&amp;</strong>&#x2F;，love这成<strong>love</strong></td></tr><tr><td>\&lt;</td><td>匹配单词的开始</td><td>如:&#x2F;&lt;love&#x2F;匹配包含以love开头的单词的行</td></tr><tr><td>\&gt;</td><td>配单词的结束</td><td>如&#x2F;love&gt;&#x2F;匹配包含以love结尾的单词的行</td></tr><tr><td>x\{m\}</td><td>重复字符x，m次</td><td>如：&#x2F;0{5}&#x2F;匹配包含5个0的行</td></tr><tr><td>x\{m,\}</td><td>重复字符x，至少m次</td><td>如：&#x2F;0{5,}&#x2F;匹配至少有5个0的行</td></tr><tr><td>x\{m,n\}</td><td>重复字符x，至少m次，不多于n次</td><td>如：&#x2F;0{5,10}&#x2F;匹配5~10个0的行</td></tr></tbody></table><p><strong>高级编辑命令</strong> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">P： <span class="hljs-comment">#打印模式空间开端至\n内容，并追加到默认输出之前 </span><br>h:  <span class="hljs-comment">#把模式空间中的内容覆盖至保持空间中 </span><br>H：<span class="hljs-comment">#把模式空间中的内容追加至保持空间中 </span><br>g:  <span class="hljs-comment">#从保持空间取出数据覆盖至模式空间</span><br>G：<span class="hljs-comment">#从保持空间取出内容追加至模式空间</span><br>x:  <span class="hljs-comment">#把模式空间中的内容与保持空间中的内容进行互换</span><br>n:  <span class="hljs-comment">#读取匹配到的行的下一行覆盖至模式空间 </span><br>N：<span class="hljs-comment">#读取匹配到的行的下一行追加至模式空间</span><br>d:  <span class="hljs-comment">#删除模式空间中的行 </span><br>D：<span class="hljs-comment">#如果模式空间包含换行符，则删除直到第一个换行符的模式空间中的文本， 并不会读取新的输入行，而使用合成的模式空间重新启动循环。如果模式空间 不包含换行符，则会像发出d命令那样启动正常的新循环</span><br></code></pre></td></tr></table></figure><p><strong>示例</strong> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -n <span class="hljs-string">&#x27;n;p&#x27;</span> FILE <br>sed <span class="hljs-string">&#x27;1!G;h;$!d&#x27;</span> FILE <br>sed‘N;D’FILE <br>sed <span class="hljs-string">&#x27;$!N;$!D&#x27;</span> FILE <br>sed <span class="hljs-string">&#x27;$!d&#x27;</span> FILE <br>sed ‘G’ FILE <br>sed ‘g’ FILE <br>sed ‘/^$/d;G’ FILE <br>sed <span class="hljs-string">&#x27;n;d&#x27;</span> FILE  <br>sed -n <span class="hljs-string">&#x27;1!G;h;$p&#x27;</span> FILE<br></code></pre></td></tr></table></figure><hr><h3 id="tr"><a href="#tr" class="headerlink" title="tr :"></a>tr :</h3><p><strong>tr</strong> <code>命令可以对来自标准输入的字符进行替换、压缩和删除。它可以将一组字符变成另一组字符，经常用来编写优美的单行命令，作用很强大。</code></p><p><strong>主要参数</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">-c 或——complerment：取代所有不属于第一字符集的字符；<br>-d 或——delete：删除所有属于第一字符集的字符；<br>-s 或--squeeze-repeats：把连续重复的字符以单独一个字符表示；<br>-t 或--truncate-set1：先删除第一字符集较第二字符集多出的字符。<br></code></pre></td></tr></table></figure><p><strong>示例</strong> ：<br><strong>将输入字符由大写转换为小写</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;HELLO WORLD&quot;</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;A-Z&#x27;</span> <span class="hljs-string">&#x27;a-z&#x27;</span><br>hello world<br></code></pre></td></tr></table></figure><p><strong>用tr压缩字符，可以压缩输入中重复的字符</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;thissss is      a text linnnnnnne.&quot;</span> | <span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27; sn&#x27;</span><br>this is a text line.<br></code></pre></td></tr></table></figure><p><strong>tr可以使用的字符类</strong> ：</p><table><thead><tr><th>字符</th><th>表达含义</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>字母和数字</td></tr><tr><td>[:alpha:]</td><td>字母</td></tr><tr><td>[:cntrl:]</td><td>控制（非打印）字符</td></tr><tr><td>[:digit:]</td><td>数字</td></tr><tr><td>[:graph:]</td><td>图形字符</td></tr><tr><td>[:lower:]</td><td>小写字母</td></tr><tr><td>[:print:]</td><td>可打印字符</td></tr><tr><td>[:punct:]</td><td>标点符号</td></tr><tr><td>[:space:]</td><td>空白字符</td></tr><tr><td>[:upper:]</td><td>大写字母</td></tr><tr><td>[:xdigit:]</td><td>十六进制字符</td></tr></tbody></table><hr><p><strong>使用tr打印1加至100</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS8 data]<span class="hljs-comment"># echo &#123;1..100&#125; &gt; filethree.txt</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># cat filethree.txt </span><br>1 2 3 4 5 6 7 8 9 10<br>[root@CentOS8 data]<span class="hljs-comment"># tr &#x27; &#x27; &#x27;+&#x27; &lt; filethree.txt &gt; filefour.txt</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># cat filefour.txt </span><br>1+2+3+4+5+6+7+8+9+10<br></code></pre></td></tr></table></figure><p><strong>打印1至100的奇偶数集</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS8 data]<span class="hljs-comment"># echo &#123;0..50..2&#125; （打印1到50的偶数集）</span><br>0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50<br><br>[root@CentOS8 data]<span class="hljs-comment"># echo &#123;1..50..2&#125;  （打印1到50的奇数集）               </span><br>1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49<br></code></pre></td></tr></table></figure><hr><h3 id="tail："><a href="#tail：" class="headerlink" title="tail："></a>tail：</h3><p><strong>tail</strong> <code>命令用于输入文件中的尾部内容。tail命令默认在屏幕上显示指定文件的末尾10行。</code></p><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">-f ： <span class="hljs-comment">#显示文件最新追加的内容。</span><br>-s&lt;秒数&gt;或——sleep-interal=&lt;秒数&gt; ： <span class="hljs-comment">#与“-f”选项连用，指定监视文件变化时间隔的秒数；</span><br>-v ： <span class="hljs-comment">#当有多个文件参数时，总是输出各个文件名；</span><br></code></pre></td></tr></table></figure><p><strong>示例</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tail</span> file <span class="hljs-comment">#（显示文件file的最后10行）</span><br><span class="hljs-built_in">tail</span> +20 file <span class="hljs-comment">#（显示文件file的内容，从第20行至文件末尾）</span><br><span class="hljs-built_in">tail</span> -f file <span class="hljs-comment">#（时时监听文件file内容）</span><br></code></pre></td></tr></table></figure><hr><h3 id="head"><a href="#head" class="headerlink" title="head"></a>head</h3><ul><li>head命令用于显示文件的开头的内容。在默认情况下，head命令显示文件的头10行内容。</li></ul><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">-n&lt;数字&gt;：指定显示头部内容的行数；<br>-c&lt;字符数&gt;：指定显示头部内容的字符数；<br>-v：总是显示文件名的头信息；<br>-q：不显示文件名的头信息。<br><br>示例：<br>[root@CentOS1908 ~]<span class="hljs-comment"># cat /etc/passwd |head -n1</span><br>root:x:0:0:root:/root:/bin/bash<br>[root@CentOS1908 ~]<span class="hljs-comment"># cat /etc/passwd |head -c10</span><br>root:x:0:0<br>[root@CentOS1908 ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><strong>利用 head 和 tail 命令组合我们可以将文件的指定前x行 和后x行打印出来</strong></p><hr><h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3><p><strong>cut : 从某一行信息中取出某部分我们想要的信息</strong><br><code>常用：cut -d &#39;分隔字符&#39; -f field // 用于分隔字符</code><br><code>cut -c 字符范围</code></p><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-d : 后面接分隔字符,通常与 -f 一起使用<br>-f : 根据-d 将信息分隔成数段，-f 后接数字 表示取出第几段<br>-c : 以字符为单位取出固定字符区间的信息<br>-n：与“-b”选项连用，不分割多字节字符；<br>-b：仅显示行中指定直接范围的内容；<br></code></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 打印/etc/passwd文件中以 : 为分隔符的第1个字段和第6个字段分别表示用户名和家目录</span><br>[root@izuf6i29flb2df231kt91hz /]<span class="hljs-comment"># cat etc/passwd | cut -d &#x27;:&#x27; -f 1,6</span><br><br><span class="hljs-comment"># 打印/etc/passwd文件中每一行的前10个字符：</span><br>[root@izuf6i29flb2df231kt91hz /]<span class="hljs-comment"># cat /etc/passwd | cut -c 1-10</span><br></code></pre></td></tr></table></figure><p><strong>实际使用中，比cut更加方便的命令有awk和sed，但这并不妨碍我们学习多一种命令</strong></p><hr><h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h3><p><strong>文件进行排序，并将排序结果标准输出。sort命令既可以从特定的文件，也可以从stdin中获取输入。</strong></p><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-f ：忽略大小写的差异，例如A 与a 视为编码相同<br>-b ：忽略最前面的空格部分<br>-M ：以月份的名字来排序，例如JAN, DEC 等等的排序方法<br>-n ：使用『纯数字』进行排序默认是以文字型态来排序的)<br>-r ：反向排序<br>-u ：就是<span class="hljs-built_in">uniq</span> ，相同的资料中，仅出现一行代表<br>-t ：分隔符号，预设是用[tab] 键来分隔<br>-k ：以那个区间(field) 来进行排序的意思<br></code></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 对/etc/passwd的账号进行排序</span><br><span class="hljs-built_in">cat</span> /etc/passwd | <span class="hljs-built_in">sort</span><br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>chrony:x:998:996::/var/lib/chrony:/sbin/nologin<br>        <br><span class="hljs-comment">#取出/etc/passwd中用户及UID并输出指定分隔符，再以数字区间排序</span><br>awk -F:   <span class="hljs-string">&#x27;&#123;printf &quot;Username: %-24sUID:%d\n&quot;,$1,$3&#125;&#x27;</span>  /etc/passwd |<span class="hljs-built_in">sort</span> -t<span class="hljs-string">&quot;:&quot;</span> -k 3 -n<br>Username: root                    UID:0<br>Username: bin                     UID:1<br>Username: daemon                  UID:2<br>Username: adm                     UID:3<br>Username: lp                      UID:4<br>Username: <span class="hljs-built_in">sync</span>                    UID:5<br><br><span class="hljs-comment">#以行长度从小到大排序</span><br>awk <span class="hljs-string">&#x27;&#123;print length(), $0 | &quot;sort -n&quot; &#125;&#x27;</span> filename.txt<br><br><br><span class="hljs-comment">#打印文件中的最长行和最短行</span><br>最短行：awk <span class="hljs-string">&#x27;(NR==1||length(min)&gt;length())&#123;min=$0&#125;END&#123;print min&#125;&#x27;</span>  filename.txt<br><br>最长行：awk <span class="hljs-string">&#x27;&#123;if (length(max)&lt;length()) max=$0&#125;END&#123;print max&#125;&#x27;</span>  filename.txt<br><br><span class="hljs-comment">#处理文件，按照第二列数字倒序排列打印</span><br>Filename.csv内容：<br>ky100-074,35%,ky100-087,7%<br>ky100-073,35%,ky100-085,7%<br>ky100-025,35%,ky100-084,7%<br>ky100-024,35%,ky100-083,7%<br>ky100-022,35%,ky100-082,7%<br>ky100-021,35%,ky100-081,7%<br><br>awk -F, -v OFS=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&#x27;&#123;print $1,&quot;,&quot;,$2|&quot;sort -rt\&quot;,\&quot; -k2&quot;&#125;&#x27;</span> filename.csv<br></code></pre></td></tr></table></figure><hr><h3 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h3><p><strong>统计文件行内容</strong></p><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">-c或——count：在每列旁边显示该行重复出现的次数；<br>-d或--repeated：仅显示重复出现的行列；<br>-f&lt;栏位&gt;或--skip-fields=&lt;栏位&gt;：忽略比较指定的栏位；<br>-s&lt;字符位置&gt;或--skip-chars=&lt;字符位置&gt;：忽略比较指定的字符；<br>-u或——unique：仅显示出一次的行列；<br>-w&lt;字符位置&gt;或--check-chars=&lt;字符位置&gt;：指定要比较的字符。<br></code></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 统计各行在文件中出现的次数：</span><br><span class="hljs-built_in">sort</span> file.txt | <span class="hljs-built_in">uniq</span> -c<br><br><span class="hljs-comment">#在文件中找出重复的行：</span><br><span class="hljs-built_in">sort</span> file.txt | <span class="hljs-built_in">uniq</span> -d<br></code></pre></td></tr></table></figure><hr><h3 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h3><p><strong>wc：用来计算数字。</strong></p><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">-l或——lines：只显示列数；<br>-w或——words：只显示字数。<br></code></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看etc/passwd中有多少账号</span><br><span class="hljs-built_in">cat</span> /etc/passwd | <span class="hljs-built_in">wc</span> -l<br></code></pre></td></tr></table></figure><hr><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><p><strong>split：顾名思义，讲一个大文件依据文件大小或行数切割成为小文件</strong></p><p><strong>常用选项</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">-b : 后面可接欲切割文件的大小，可加单位，例如b,k,m等<br>-l : 以行数来进行切割<br>-C：每一输出档中，单行的最大 byte 数。<br>-d：使用数字作为后缀。<br></code></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#生成一个大小为100KB的测试文件：</span><br>[root@localhost <span class="hljs-built_in">split</span>]<span class="hljs-comment"># dd if=/dev/zero bs=100k count=1 of=date.file</span><br>1+0 records <span class="hljs-keyword">in</span><br>1+0 records out<br>102400 bytes (102 kB) copied, 0.00043 seconds, 238 MB/s<br><br><span class="hljs-comment">#使用split命令将上面创建的date.file文件分割成大小为10KB的小文件：</span><br>[root@localhost <span class="hljs-built_in">split</span>]<span class="hljs-comment"># split -b 10k date.file </span><br>[root@localhost <span class="hljs-built_in">split</span>]<span class="hljs-comment"># ls</span><br>date.file  xaa  xab  xac  xad  xae  xaf  xag  xah  xai  xaj<br><br><span class="hljs-comment">#分割大的tar文件為多份小文件</span><br><span class="hljs-built_in">split</span> -b Size -d tar-file-name prefix-name<br><span class="hljs-built_in">split</span> -b 1M -d mybackup.tgz mybackup-parts<br><span class="hljs-built_in">split</span> -b 1M mybackup.tgz mybackup-parts<br><span class="hljs-comment">#合并切割的文件:</span><br><span class="hljs-built_in">cat</span> mybackup-parts* &gt; mybackup-tar.gz<br><br><span class="hljs-comment"># 若你有一个超大的压缩包在服务器中，无法通过常规操作导出</span><br><span class="hljs-comment"># 你可以将其切割，导出后无需合并直接进行解压</span><br><span class="hljs-built_in">split</span> -b 2G -d tomcat.tar.gz tomcat.tar.gz.<br><span class="hljs-built_in">cat</span> tomcat.tar.gz.* | tar xzvf -<br></code></pre></td></tr></table></figure><hr><h3 id="I-x2F-O重定向："><a href="#I-x2F-O重定向：" class="headerlink" title="I&#x2F;O重定向："></a>I&#x2F;O重定向：</h3><p><strong>将输出和错误重新定向到文件</strong><br><img src="https://img-blog.csdnimg.cn/20190928132109982.png"><br><strong>STDOUT和STDERR可以被重定向到文件</strong></p><p><strong>支持的操作符号包括</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1&gt; 把STDOUT重新定向到文件<br>2&gt; 把STDERR重新定向到文件<br>&amp;&gt; 把所有输出重新定向到文件<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;  <span class="hljs-comment">#文件内容将会被覆盖</span><br><span class="hljs-built_in">set</span> -C  <span class="hljs-comment">#禁止将内容覆盖已有文件，但可以追加</span><br>1&gt; | file  <span class="hljs-comment">#强制覆盖</span><br><span class="hljs-built_in">set</span> +C  <span class="hljs-comment">#允许覆盖</span><br>&gt;&gt;  <span class="hljs-comment">#在原有内容基础上，追加内容</span><br>2&gt;  <span class="hljs-comment">#覆盖重定向错误输出数据流</span><br>2&gt;&gt;  <span class="hljs-comment">#追加重定向错误输出数据流</span><br></code></pre></td></tr></table></figure><p><strong>标准输出和标准错误输出各自定向至不同位置：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">COMMAND &gt; /path/to/file.out 2&gt; /path/to/error.out<br></code></pre></td></tr></table></figure><p><strong>合并标准输出和错误输出为同一个数据流进行重定向</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">     &amp;&gt;  <span class="hljs-comment">#覆盖重定向</span><br><br>    &amp;&gt;&gt;  <span class="hljs-comment">#追加重定向</span><br><br>COMMAND &gt; /path/to/file.out 2&gt;&amp;1<br><br>        (顺序很重要)<br><br>COMMAND &gt;&gt; /path/to/file.out 2&gt;&amp;1<br><br> <span class="hljs-comment">#合并多个程序的STDOUT</span><br><br>  （cal 2007；cal 2008） &gt; all.txt<br></code></pre></td></tr></table></figure><h3 id="命令执行过程视图："><a href="#命令执行过程视图：" class="headerlink" title="命令执行过程视图："></a>命令执行过程视图：</h3><p><img src="https://img-blog.csdnimg.cn/2019092813215113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"></p><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@Redhat7 data]<span class="hljs-comment"># ls /home/ &gt; file </span><br>[root@Redhat7 data]<span class="hljs-comment"># cat file </span><br>td<br>[root@Redhat7 data]<span class="hljs-comment"># ls /home/xsifuew 2&gt; file </span><br>[root@Redhat7 data]<span class="hljs-comment"># cat file </span><br><span class="hljs-built_in">ls</span>: cannot access /home/xsifuew: No such file or directory<br>[root@Redhat7 data]<span class="hljs-comment"># ls /home/xsifuew 1&gt; file 2&gt;&amp;1</span><br>[root@Redhat7 data]<span class="hljs-comment"># cat file </span><br><span class="hljs-built_in">ls</span>: cannot access /home/xsifuew: No such file or directory<br></code></pre></td></tr></table></figure><p><strong>单行重定向：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS8 data]<span class="hljs-comment"># cat &gt; ./file.txt</span><br>       abc<br>       def<br>       xyz<br></code></pre></td></tr></table></figure><p><strong>多行重定向：</strong></p><ul><li>开始符与结束符为相同字符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS8 data]<span class="hljs-comment"># cat &gt; ./filetwo.txt &lt;&lt;开始符</span><br>      &gt; abc<br>      &gt; def<br>      &gt; 结束符<br></code></pre></td></tr></table></figure><hr><h3 id="管道命令："><a href="#管道命令：" class="headerlink" title="管道命令："></a>管道命令：</h3><p><strong>命令执行顺序控制</strong></p><ul><li>通常情况下，我们在终端只能执行一条命令，然后按下回车执行，那么如何执行多条命令呢？</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">顺序执行多条命令：<br>command1;command2;command3;<br>简单的顺序指令可以通过 ;来实现<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">有条件的执行多条命令：<br><span class="hljs-built_in">which</span> command1 &amp;&amp; command2 || command3<br><br>&amp;&amp; :  <span class="hljs-comment">#如果前一条命令执行成功则执行下一条命令，如果command1执行成功（返回0）,则执行command2</span><br>|| :  <span class="hljs-comment">#与&amp;&amp;命令相反，执行不成功时执行这个命令</span><br>$? :  <span class="hljs-comment">#存储上一次命令的返回结果</span><br></code></pre></td></tr></table></figure><hr><h3 id="标准错误导入管道-："><a href="#标准错误导入管道-：" class="headerlink" title="标准错误导入管道 ："></a>标准错误导入管道 ：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS8 data]<span class="hljs-comment"># xxx | tr &#x27;a-z&#x27; &#x27;A-Z&#x27;   #这样输入是无法将其导入的！     </span><br>bash: xxx: <span class="hljs-built_in">command</span> not found...<br>Failed to search <span class="hljs-keyword">for</span> file: Cannot update read-only repo<br><br><span class="hljs-comment">#正确做法：</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># xxx |&amp; tr &#x27;a-z&#x27; &#x27;A-Z&#x27;</span><br>BASH: XXX: COMMAND NOT FOUND...<br>FAILED TO SEARCH FOR FILE: CANNOT UPDATE READ-ONLY REPO<br><br><span class="hljs-comment">#使用tr将其替换成大写并输出至文件中：</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># xxx |&amp; tr &#x27;a-z&#x27; &#x27;A-Z&#x27; &gt; filefive.txt</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># cat filefive.txt </span><br>BASH: XXX: COMMAND NOT FOUND...<br>FAILED TO SEARCH FOR FILE: CANNOT UPDATE READ-ONLY REPO<br></code></pre></td></tr></table></figure><hr><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>K8S单机部署</title>
    <link href="/2022/10/27/k8s/"/>
    <url>/2022/10/27/k8s/</url>
    
    <content type="html"><![CDATA[<p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><h1 id="K8S单机部署"><a href="#K8S单机部署" class="headerlink" title="K8S单机部署"></a>K8S单机部署</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">准备工作：创建一/三台CentOS7虚拟机，无需进行任何额外操作<br>确保虚拟机能够ping通外部网络，将k8s镜像文件上传到虚拟机中<br></code></pre></td></tr></table></figure><h2 id="k8s镜像文件下载地址：点击下载-提取码-pe8a"><a href="#k8s镜像文件下载地址：点击下载-提取码-pe8a" class="headerlink" title="k8s镜像文件下载地址：点击下载 [提取码: pe8a]"></a><strong>k8s镜像文件下载地址：</strong><br><a class="btn" href="https://pan.baidu.com/s/1ax56iA3h4uSmydzZz-BjCA?pwd=pe8a" title="https://pan.baidu.com/s/1ax56iA3h4uSmydzZz-BjCA?pwd=pe8a">点击下载 [提取码: pe8a]</a></h2><h2 id="vim-master-install-sh"><a href="#vim-master-install-sh" class="headerlink" title="vim master_install.sh"></a><strong><code>vim master_install.sh</code></strong><br><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 提示信息</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;脚本仅适用于X86_64 CentOS7.6&quot;</span><br><br>IP=`ip a | egrep <span class="hljs-string">&quot;ens33&quot;</span> | grep <span class="hljs-string">&quot;inet&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br><br><span class="hljs-comment"># 关闭SELINUX</span><br>setenforce 0 &amp;&amp; sed -i <span class="hljs-string">&quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config<br><br><span class="hljs-comment"># 关闭防火墙</span><br>systemctl stop firewalld<br>systemctl <span class="hljs-built_in">disable</span> firewalld<br><br><span class="hljs-comment"># 设置hostname</span><br>hostnamectl --static set-hostname master1<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;IP&#125;</span> master1&quot;</span> &gt;&gt; /etc/hosts<br><br><span class="hljs-comment"># 修改内核参数和模块</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-comment"># 使内核参数配置生效</span><br>sysctl --system<br>modprobe br_netfilter<br>lsmod | grep br_netfilter<br><br><span class="hljs-comment"># 关闭交换内存，如果不关闭，kubelet服务将无法启动</span><br>swapoff -a &amp;&amp; sed -i <span class="hljs-string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab<br><br><span class="hljs-comment"># 基础命令检测</span><br>rpm -qa|grep unzip &amp;&gt; /dev/null<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br>yum install unzip -y<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 安装Docker</span><br>yum -y install yum-utils device-mapper-persistent-data lvm2<br><span class="hljs-built_in">sleep</span> 2<br><span class="hljs-comment">#yum-config-manager -y --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br>yum-config-manager --add-repo  http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;docker repo 导入失败，请重新执行&quot;</span><br><span class="hljs-built_in">exit</span> 233;<br><span class="hljs-keyword">fi</span><br><br>yum install docker-ce -y &amp;&amp; systemctl restart docker &amp;&amp; systemctl <span class="hljs-built_in">enable</span> docker<br><br><span class="hljs-comment"># 设置国内docker仓库</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/docker/daemon.json</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  &quot;registry-mirrors&quot;: [</span><br><span class="hljs-string">    &quot;https://3laho3y3.mirror.aliyuncs.com&quot;</span><br><span class="hljs-string">  ],</span><br><span class="hljs-string">  &quot;exec-opts&quot;: [</span><br><span class="hljs-string">    &quot;native.cgroupdriver=systemd&quot;</span><br><span class="hljs-string">  ]</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br>systemctl restart docker<br><span class="hljs-built_in">sleep</span> 2<br><br><span class="hljs-comment"># 配置kubernetes yum源，用以安装Kubernetes基础服务及工具，此处使用阿里云镜像仓库源</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="hljs-string">[kubernetes]</span><br><span class="hljs-string">name=Kubernetes</span><br><span class="hljs-string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">repo_gpgcheck=0</span><br><span class="hljs-string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">sleep</span> 2<br><br><span class="hljs-comment"># 安装Kubernetes基础服务及工具</span><br>yum -y install kubelet-1.23.6 kubeadm-1.23.6 kubectl-1.23.6<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;k8s下载失败，请重新执行&quot;</span><br><span class="hljs-built_in">exit</span> 244;<br><span class="hljs-keyword">fi</span><br><br>sed -i <span class="hljs-string">&#x27;s@kubeconfig=/etc/kubernetes/kubelet.conf@kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=systemd@&#x27;</span> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf<br><span class="hljs-comment">#systemctl daemon-reload &amp;&amp; systemctl restart kubelet &amp;&amp; systemctl enable kubelet.service</span><br><br><span class="hljs-comment"># 查看k8s相关镜像</span><br><span class="hljs-comment"># kubeadm config images list</span><br><br><span class="hljs-comment"># 镜像下载脚本</span><br><span class="hljs-comment">#images=(</span><br><span class="hljs-comment">#k8s.gcr.io/kube-apiserver:v1.23.6</span><br><span class="hljs-comment">#k8s.gcr.io/kube-controller-manager:v1.23.6</span><br><span class="hljs-comment">#k8s.gcr.io/kube-scheduler:v1.23.6</span><br><span class="hljs-comment">#k8s.gcr.io/kube-proxy:v1.23.6</span><br><span class="hljs-comment">#k8s.gcr.io/pause:3.6</span><br><span class="hljs-comment">#k8s.gcr.io/etcd:3.5.1</span><br><span class="hljs-comment">#)</span><br><span class="hljs-comment">#for i in $&#123;images[@]&#125;; do </span><br><span class="hljs-comment">#  imageName=$&#123;i#k8s.gcr.io/&#125;</span><br><span class="hljs-comment">#  docker pull registry.aliyuncs.com/google_containers/$imageName</span><br><span class="hljs-comment">#  docker tag registry.aliyuncs.com/google_containers/$imageName k8s.gcr.io/$imageName</span><br><span class="hljs-comment">#  docker rmi registry.aliyuncs.com/google_containers/$imageName</span><br><span class="hljs-comment">#done;</span><br><br><span class="hljs-comment"># 导入离线k8s镜像,若使用离线镜像，需将下列注释取消</span><br><br>unzip k8s_1.23.6.zip <br>docker load -i k8s_1.23.6/coredns_v1.8.6.tar<br>docker load -i k8s_1.23.6/etcd_3.5.3-0.tar<br>docker load -i k8s_1.23.6/kube-apiserver_v1.23.6.tar<br>docker load -i k8s_1.23.6/kube-controller-manager_v1.23.6.tar<br>docker load -i k8s_1.23.6/kube-proxy_v1.23.6.tar<br>docker load -i k8s_1.23.6/kube-scheduler_v1.23.6.tar<br>docker load -i k8s_1.23.6/pause_3.6.tar<br>docker load -i k8s_1.23.6/calico_cni.tar<br>docker load -i k8s_1.23.6/calico_kube.tar<br>docker load -i k8s_1.23.6/calico_node.tar<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;未成功解压压缩包，请重新执行&quot;</span><br><span class="hljs-built_in">exit</span> 255;<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 初始化k8s和网络</span><br><span class="hljs-comment"># kubeadm init --kubernetes-version=v1.23.6 --pod-network-cidr=192.168.0.0/16</span><br>kubeadm init --kubernetes-version=v1.23.6 \<br>--pod-network-cidr=192.168.0.0/16 \<br>--apiserver-advertise-address=<span class="hljs-variable">$&#123;IP&#125;</span> \<br>--service-cidr=172.20.0.0/20 \<br>--ignore-preflight-errors=<span class="hljs-string">&#x27;swap&#x27;</span> \<br>--image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;k8s初始化异常退出！&quot;</span><br><span class="hljs-built_in">exit</span> 266;<br><span class="hljs-keyword">else</span><br>systemctl daemon-reload &amp;&amp; systemctl restart kubelet &amp;&amp; systemctl <span class="hljs-built_in">enable</span> kubelet.service<br><br><span class="hljs-comment"># 初始化kubectl配置</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br><span class="hljs-comment">#kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d &#x27;\n&#x27;)</span><br>kubectl apply -f k8s_1.23.6/calico.yaml<br><span class="hljs-comment"># kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml</span><br><br><span class="hljs-comment"># 默认k8s的master节点是不能跑pod的业务，需要执行以下命令解除限制</span><br><span class="hljs-comment"># kubectl taint nodes --all node-role.kubernetes.io/master-</span><br><br><span class="hljs-comment"># 查看主节点运行 Pod 的状态</span><br>kubectl get pods --all-namespaces -o wide<br><span class="hljs-keyword">fi</span><br><br></code></pre></td></tr></table></figure>    </div></div></h2><p><strong><code>vim worker_install.sh</code></strong></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 提示信息</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;脚本仅适用于X86_64 CentOS7.6&quot;</span><br><br>IP=`ip a | egrep <span class="hljs-string">&quot;ens33&quot;</span> | grep <span class="hljs-string">&quot;inet&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br><br><span class="hljs-comment"># 关闭SELINUX</span><br>setenforce 0 &amp;&amp; sed -i <span class="hljs-string">&quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config<br><br><span class="hljs-comment"># 关闭防火墙</span><br>systemctl stop firewalld<br>systemctl <span class="hljs-built_in">disable</span> firewalld<br><br><span class="hljs-comment"># 设置hostname</span><br>hostnamectl --static set-hostname worker1<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;IP&#125;</span> worker1&quot;</span> &gt;&gt; /etc/hosts<br><br><span class="hljs-comment"># 修改内核参数和模块</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-comment"># 使内核参数配置生效</span><br>sysctl --system<br>modprobe br_netfilter<br>lsmod | grep br_netfilter<br><br><span class="hljs-comment"># 关闭交换内存，如果不关闭，kubelet服务将无法启动</span><br>swapoff -a &amp;&amp; sed -i <span class="hljs-string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab<br><br><span class="hljs-comment"># 基础命令检测</span><br>rpm -qa|grep unzip &amp;&gt; /dev/null<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br>yum install unzip -y<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 安装Docker</span><br>yum -y install yum-utils device-mapper-persistent-data lvm2<br><span class="hljs-built_in">sleep</span> 2<br><span class="hljs-comment">#yum-config-manager -y --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br>yum-config-manager --add-repo  http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;docker repo 导入失败，请重新执行&quot;</span><br><span class="hljs-built_in">exit</span> 233;<br><span class="hljs-keyword">fi</span><br><br>yum install docker-ce -y &amp;&amp; systemctl restart docker &amp;&amp; systemctl <span class="hljs-built_in">enable</span> docker<br><br><span class="hljs-comment"># 设置国内docker仓库</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/docker/daemon.json</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  &quot;registry-mirrors&quot;: [</span><br><span class="hljs-string">    &quot;https://3laho3y3.mirror.aliyuncs.com&quot;</span><br><span class="hljs-string">  ],</span><br><span class="hljs-string">  &quot;exec-opts&quot;: [</span><br><span class="hljs-string">    &quot;native.cgroupdriver=systemd&quot;</span><br><span class="hljs-string">  ]</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br>systemctl restart docker<br><span class="hljs-built_in">sleep</span> 2<br><br><span class="hljs-comment"># 配置kubernetes yum源，用以安装Kubernetes基础服务及工具，此处使用阿里云镜像仓库源</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="hljs-string">[kubernetes]</span><br><span class="hljs-string">name=Kubernetes</span><br><span class="hljs-string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">repo_gpgcheck=0</span><br><span class="hljs-string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">sleep</span> 2<br><br><span class="hljs-comment"># 安装Kubernetes基础服务及工具</span><br>yum -y install kubelet-1.23.6 kubeadm-1.23.6 kubectl-1.23.6<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;k8s下载失败，请重新执行&quot;</span><br><span class="hljs-built_in">exit</span> 244;<br><span class="hljs-keyword">fi</span><br><br>sed -i <span class="hljs-string">&#x27;s@kubeconfig=/etc/kubernetes/kubelet.conf@kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=systemd@&#x27;</span> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf<br><br><span class="hljs-comment"># 导入离线k8s镜像,若master使用了离线镜像部署，则此处下方需要注释</span><br>unzip k8s_1.23.6.zip <br>docker load -i k8s_1.23.6/coredns_v1.8.6.tar<br>docker load -i k8s_1.23.6/etcd_3.5.3-0.tar<br>docker load -i k8s_1.23.6/kube-apiserver_v1.23.6.tar<br>docker load -i k8s_1.23.6/kube-controller-manager_v1.23.6.tar<br>docker load -i k8s_1.23.6/kube-proxy_v1.23.6.tar<br>docker load -i k8s_1.23.6/kube-scheduler_v1.23.6.tar<br>docker load -i k8s_1.23.6/pause_3.6.tar<br>docker load -i k8s_1.23.6/calico_cni.tar<br>docker load -i k8s_1.23.6/calico_kube.tar<br>docker load -i k8s_1.23.6/calico_node.tar<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$?&quot;</span> -ne <span class="hljs-string">&quot;0&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;未成功解压压缩包，请重新执行&quot;</span><br><span class="hljs-built_in">exit</span> 255;<br><span class="hljs-keyword">fi</span><br><br>systemctl daemon-reload &amp;&amp; systemctl restart kubelet &amp;&amp; systemctl <span class="hljs-built_in">enable</span> kubelet.service<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;请手动输入master token添加节点命令&quot;</span><br></code></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gitlab容器部署</title>
    <link href="/2022/10/26/docker-Gitlab/"/>
    <url>/2022/10/26/docker-Gitlab/</url>
    
    <content type="html"><![CDATA[<h1 id="容器部署Gitlab"><a href="#容器部署Gitlab" class="headerlink" title="容器部署Gitlab"></a>容器部署Gitlab</h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">准备一台CentOS7虚拟机，可ping通外网，基础环境自配，默认已安装 Docker 服务<br></code></pre></td></tr></table></figure><p><a href="https://mtdia.github.io/2022/10/20/CentOS7.4-Docker1903/">Docker服务部署步骤</a></p><hr><h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置docker国内阿里加速</span><br>[root@gitlab gitlab]<span class="hljs-comment"># cat /etc/docker/daemon.json</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://dl0ygawi.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br><br><span class="hljs-comment"># 不要忘记将docker服务加入开机自启</span><br>[root@gitlab gitlab]<span class="hljs-comment"># systemctl daemon-reload &amp;&amp; sudo systemctl restart docker</span><br>[root@gitlab gitlab]<span class="hljs-comment"># systemctl --now enable docker</span><br><br><span class="hljs-comment"># 查看docker 版本</span><br>[root@gitlab gitlab]<span class="hljs-comment"># docker -v</span><br>Docker version 20.10.18, build b40c2f6<br><br><span class="hljs-comment"># 当前所在目录</span><br>[root@gitlab gitlab]<span class="hljs-comment"># pwd</span><br>/data/gitlab<br><br><span class="hljs-comment"># 有关gitlab的其他镜像可以前往docker.hub官网进行下载</span><br><span class="hljs-comment"># gitlab容器运行脚本</span><br>[root@gitlab gitlab]<span class="hljs-comment"># cat gitlab-run.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>docker run -d \<br>-p 10008:80 -p 10009:443 -p 10010:22 \<br>--restart always \<br>--name gitlab \<br>-v /data/gitlab/etc/gitlab:/etc/gitlab \<br>-v /data/gitlab/log/gitlab:/var/log/gitlab \<br>-v /data/gitlab/opt/gitlab:/var/opt/gitlab \<br>--privileged=<span class="hljs-literal">true</span> drud/gitlab-ce:v0.29.1<br><br><span class="hljs-comment"># 运行脚本，拉取镜像耗时较长</span><br>[root@gitlab gitlab]<span class="hljs-comment"># bash gitlab-run.sh </span><br>······过程省略<br><br><span class="hljs-comment"># 查看gitlab镜像</span><br>[root@gitlab gitlab]<span class="hljs-comment"># docker images</span><br>REPOSITORY       TAG       IMAGE ID       CREATED       SIZE<br>drud/gitlab-ce   v0.29.1   3e5f92380a64   3 years ago   1.44GB<br><br><span class="hljs-comment"># 查看正在运行的容器</span><br>[root@gitlab gitlab]<span class="hljs-comment"># docker ps -a</span><br>CONTAINER ID   IMAGE                    COMMAND             CREATED        STATUS                  PORTS                                                                                                                         NAMES<br>394451ec2c94   drud/gitlab-ce:v0.29.1   <span class="hljs-string">&quot;/assets/wrapper&quot;</span>   41 hours ago   Up 41 hours (healthy)   0.0.0.0:10010-&gt;22/tcp, :::10010-&gt;22/tcp, 0.0.0.0:10008-&gt;80/tcp, :::10008-&gt;80/tcp, 0.0.0.0:10009-&gt;443/tcp, :::10009-&gt;443/tcp   gitlab<br></code></pre></td></tr></table></figure>    </div></div><p><img src="/img/gitlab_config.png" alt="gitlab_config"></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改gitlab配置文件，参考上图追加以下内容</span><br>[root@gitlab gitlab]<span class="hljs-comment"># vim etc/gitlab/gitlab.rb</span><br><span class="hljs-comment"># 如果没有域名，则直接使用宿主机的ip; 但若服务使用了 nginx 转发 则此处必须写nginx所在的虚拟机IP</span><br>external_url <span class="hljs-string">&#x27;http://113.x.x.184&#x27;</span><br><span class="hljs-comment"># 如果没有域名，则直接使用宿主机的ip; 但若服务使用了 nginx 转发 则此处必须写nginx所在的虚拟机IP</span><br>gitlab_rails[<span class="hljs-string">&#x27;gitlab_ssh_host&#x27;</span>] = <span class="hljs-string">&#x27;113.x.x.184&#x27;</span><br><span class="hljs-comment"># 端口为启动docker时映射的ssh端口</span><br>gitlab_rails[<span class="hljs-string">&#x27;gitlab_shell_ssh_port&#x27;</span>] =10010<br><span class="hljs-comment"># 设置时区为东八区，即北京时间</span><br>gitlab_rails[<span class="hljs-string">&#x27;time_zone&#x27;</span>] = <span class="hljs-string">&#x27;Asia/Shanghai&#x27;</span><br><br><span class="hljs-comment"># 邮件配置</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_enable&#x27;</span>] = <span class="hljs-literal">true</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_address&#x27;</span>] = <span class="hljs-string">&quot;smtp.qq.com&quot;</span>   <span class="hljs-comment"># 邮箱服务器</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_port&#x27;</span>] = 465    <span class="hljs-comment"># 邮箱服务对应的端口号</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_user_name&#x27;</span>] = <span class="hljs-string">&quot;16xxxxxxxx9@qq.com&quot;</span>   <span class="hljs-comment"># 发件箱的邮箱地址</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_password&#x27;</span>] = <span class="hljs-string">&quot;ymxxxxxxxxxxxxce&quot;</span>      <span class="hljs-comment"># 发件箱对应的授权码，注意不是登录密码，是授权码</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_domain&#x27;</span>] = <span class="hljs-string">&quot;qq.com&quot;</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_authentication&#x27;</span>] = <span class="hljs-string">&quot;login&quot;</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_enable_starttls_auto&#x27;</span>] = <span class="hljs-literal">true</span><br>gitlab_rails[<span class="hljs-string">&#x27;smtp_tls&#x27;</span>] = <span class="hljs-literal">true</span><br>gitlab_rails[<span class="hljs-string">&#x27;gitlab_email_enabled&#x27;</span>] = <span class="hljs-literal">true</span><br>gitlab_rails[<span class="hljs-string">&#x27;gitlab_email_from&#x27;</span>] = <span class="hljs-string">&#x27;16xxxxxxxxx9@qq.com&#x27;</span>     <span class="hljs-comment"># 发件箱地址</span><br>gitlab_rails[<span class="hljs-string">&#x27;gitlab_email_display_name&#x27;</span>] = <span class="hljs-string">&#x27;fxxxxxy&#x27;</span>    <span class="hljs-comment"># 显示名称</span><br>gitlab_rails[<span class="hljs-string">&#x27;gitlab_email_reply_to&#x27;</span>] = <span class="hljs-string">&#x27;16xxxxxxxx9@qq.com&#x27;</span>     <span class="hljs-comment"># 给指定邮箱发送邮件提示不要回复</span><br></code></pre></td></tr></table></figure>    </div></div><h3 id="配置邮件"><a href="#配置邮件" class="headerlink" title="配置邮件"></a>配置邮件</h3><ul><li>登录QQ邮箱网页端-设置-账户-开启POP3&#x2F;SMTP服务</li></ul><p><img src="/img/mail-1.png" alt="mail-2"></p><p><img src="/img/mail-2.png" alt="mail-1"></p><p><img src="/img/gitlab_config-2.png" alt="gitlab_config-2"></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 将gitlab容器删了，重新运行</span><br>[root@gitlab gitlab]<span class="hljs-comment"># docker stop gitlab &amp;&amp; docker rm gitlab</span><br>[root@gitlab gitlab]<span class="hljs-comment"># bash gitlab-run.sh</span><br><br><span class="hljs-comment"># 进入 gitlab容器，参考上图修改配置文件</span><br>[root@gitlab gitlab]<span class="hljs-comment"># docker exec -it gitlab bash</span><br>root@394451ec2c94:/<span class="hljs-comment"># vi /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml</span><br><span class="hljs-comment"># 如果没有域名，则直接使用宿主机的ip; 但若服务使用了 nginx 转发 则此处必须写nginx所在的虚拟机IP</span><br>    host: 113.x.x.184<br><span class="hljs-comment"># 若服务使用了 nginx 转发 则此处必须写nginx转发的端口，若未配置 nginx 转发 则写容器外部映射端口 10008</span><br>    port: 10880<br>    https: <span class="hljs-literal">false</span><br><span class="hljs-comment"># 如果没有域名，则直接使用宿主机的ip; 但若服务使用了 nginx 转发 则此处必须写nginx所在的虚拟机IP</span><br>    ssh_host: 113.x.x.184<br><br><span class="hljs-comment"># 在容器中重启gitlab</span><br>root@394451ec2c94:/<span class="hljs-comment"># gitlab-ctl restart</span><br>········过程省略<br></code></pre></td></tr></table></figure>    </div></div><h3 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h3><ul><li>若服务使用了 nginx 转发 则访问nginx转发的IP:端口，若未配置 nginx 转发 则访问虚拟机本机IP:10008</li><li>首次登录需要重置密码</li></ul><p><img src="/img/gitlab_wab-1.png" alt="gitlab_wab-1"></p><ul><li>默认账户：root</li></ul><p><img src="/img/gitlab_wab-2.png" alt="gitlab_wab-2"></p><ul><li><p>关闭gitlab的注册功能</p><p><img src="/img/gitlab_wab-3.png" alt="gitlab_wab-3"></p></li><li><p>取消勾选</p><p><img src="/img/gitlab_wab-4.png" alt="gitlab_wab-4"></p></li><li><p>退出重新登录，注册选项已去除</p><p><img src="/img/gitlab_wab-5.png" alt="gitlab_wab-5"></p></li><li><p>用户创建及组创建便不再进行操作</p></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
      <category>gitlab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gitlab</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker Images</title>
    <link href="/2022/10/25/docker-Images/"/>
    <url>/2022/10/25/docker-Images/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker-images"><a href="#Docker-images" class="headerlink" title="Docker images"></a>Docker images</h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#基于现有的容器制作镜像</span><br>docker commit -a <span class="hljs-string">&quot;提交的镜像作者&quot;</span> -m <span class="hljs-string">&quot;提交时的说明文字&quot;</span> 容器<span class="hljs-built_in">id</span> 镜像名称:自定义版本号<br>示例：<br>docker commit -a <span class="hljs-string">&#x27;Mtdia&#x27;</span> -m <span class="hljs-string">&#x27;web-01&#x27;</span> 0895cb579748 tomcat:v1.0<br><br><br><span class="hljs-comment">#将docker镜像导出</span><br>docker save 镜像ID &gt; 导出后的tar包名称<br>示例：<br>docker save ae513a47849c &gt; nginx-save.tar<br><br><span class="hljs-comment">#另一种写法</span><br>docker save -o 导出后的tar包名称 镜像ID<br>示例：<br>docker save -o nginx-save.tar ae513a47849c<br><br><br><span class="hljs-comment">#导出时保留原镜像ID和tag</span><br>docker save -o test.tar 原镜像ID:tag<br><br><br><span class="hljs-comment">#将docker镜像导入</span><br>docker save -o nginx-save.tar <br><br><br><span class="hljs-comment">#修改现存镜像tag</span><br>docker tag  镜像ID  新镜像名称:tag<br><br><br><span class="hljs-comment">#容器的导出与导入</span><br><span class="hljs-comment">#导出</span><br>docker <span class="hljs-built_in">export</span> -o mysql-`<span class="hljs-built_in">date</span> +%Y%m%d`.tar 220aee82cfea<br><br><br><span class="hljs-comment">#导入</span><br>docker import  my_ubuntu_v3.tar runoob/ubuntu:v4<br></code></pre></td></tr></table></figure>    </div></div><hr><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">#解释<br>镜像和容器 导出和导入的区别:<br>1.镜像导入 是复制的过程<br>2.容器导入 是将当前容器 变成一个新的镜像<br>save 和 export区别：<br>1）save 保存镜像所有的信息-包含历史<br>2）export 只导出当前的信息<br></code></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker部署</title>
    <link href="/2022/10/24/docker-Install/"/>
    <url>/2022/10/24/docker-Install/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-4-Docker-19-03"><a href="#CentOS-7-4-Docker-19-03" class="headerlink" title="CentOS 7.4 - Docker 19.03"></a><strong>CentOS 7.4 - Docker 19.03</strong></h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><p>[TOC]</p><p><img src="/img/docker.png"></p><h4 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#卸载原虚拟机中旧版本Docker</span><br>sudo yum remove docker \<br>                  docker-client \<br>                  docker-client-latest \<br>                  docker-common \<br>                  docker-latest \<br>                  docker-latest-logrotate \<br>                  docker-logrotate \<br>                  docker-engine<br>           <br><span class="hljs-comment">#安装yum-utils包（提供yum-config-manager 实用程序）并设置国内稳定存储库。（官网配置为国外地址，速度慢）</span><br>sudo yum install -y yum-utils<br>sudo yum-config-manager \<br>    --add-repo \<br>    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br>    <br><span class="hljs-comment">#安装指定版本Docker</span><br>sudo yum install docker-ce-19.03.5 docker-ce-cli-19.03.5 containerd.io<br><br><span class="hljs-comment">#列出并排序您的存储库中可用的Docker版本</span><br>yum list docker-ce --showduplicates | <span class="hljs-built_in">sort</span> -r<br><br><span class="hljs-comment">#镜像加速</span><br><span class="hljs-comment">#先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址</span><br>systemctl <span class="hljs-built_in">cat</span> docker | grep <span class="hljs-string">&#x27;\-\-registry\-mirror&#x27;</span><br><br><span class="hljs-comment">#如果该命令有输出，那么执行 systemctl cat docker 查看 ExecStart= 出现的位置，修改对应的文件内容去掉 --registry-mirror 参数及其值，并按接下来的步骤进行配置</span><br><br><span class="hljs-comment">#如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容</span><br>vim /etc/docker/daemon.json<br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>    <span class="hljs-string">&quot;https://hub-mirror.c.163.com&quot;</span>,<br>    <span class="hljs-string">&quot;https://mirror.baidubce.com&quot;</span><br>  ]<br>&#125;<br><br><span class="hljs-comment">#重新启动服务</span><br>sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker<br><br><span class="hljs-comment">#启动Docker,并开机自启</span><br>sudo systemctl start docker<br>sudo systemctl <span class="hljs-built_in">enable</span> docker<br><br><span class="hljs-comment">#查看Docker版本</span><br>docker -v<br><br><span class="hljs-comment">#通过运行hello-world 映像验证 Docker Engine 是否已正确安装</span><br>sudo docker run hello-world<br><span class="hljs-comment">#内容输出信息：</span><br>Unable to find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling from library/hello-world<br>b8dfde127a29: Pull complete <br>Digest: sha256:0fe98d7debd9049c50b597ef1f85b7c1e8cc81f59c8d623fcb2250e8bec85b38<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><br>Hello from Docker!<span class="hljs-comment">#输出此信息表示Docker已正常运行</span><br>This message shows that your installation appears to be working correctly.<br><br>To generate this message, Docker took the following steps:<br> 1. The Docker client contacted the Docker daemon.<br> 2. The Docker daemon pulled the <span class="hljs-string">&quot;hello-world&quot;</span> image from the Docker Hub.<br>    (amd64)<br> 3. The Docker daemon created a new container from that image <span class="hljs-built_in">which</span> runs the<br>    executable that produces the output you are currently reading.<br> 4. The Docker daemon streamed that output to the Docker client, <span class="hljs-built_in">which</span> sent it<br>    to your terminal.<br><br>To try something more ambitious, you can run an Ubuntu container with:<br> $ docker run -it ubuntu bash<br><br>Share images, automate workflows, and more with a free Docker ID:<br> https://hub.docker.com/<br><br>For more examples and ideas, visit:<br> https://docs.docker.com/get-started/<br> <br> <span class="hljs-comment">#查看已有镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        5 months ago        13.3kB<br><br></code></pre></td></tr></table></figure>    </div></div><hr><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Docker启动镜像</span><br><span class="hljs-comment">#查看可下载的nginx镜像有哪些</span><br>[root@docker ~]<span class="hljs-comment"># docker search nginx</span><br><br><span class="hljs-comment">#下载nginx-1.16版本镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker pull nginx:1.16</span><br><br><span class="hljs-comment">#查看刚下载的nginx镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        5 months ago        13.3kB<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br><br><span class="hljs-comment">#运行nginx镜像，运行分为两种方式：</span><br><span class="hljs-comment">#-d ：后台运行   </span><br><span class="hljs-comment">#-it : 交互式运行</span><br><span class="hljs-comment">#--name : 给启动的镜像命名</span><br>[root@docker ~]<span class="hljs-comment"># docker run -d --name nginx-test01 dfcfd8e9a5d3</span><br>891162d04f1244cd618fccdf24d1382dd1e794834ec9ee22f682a2d6aebbe58e<br><br><span class="hljs-comment">#查看正在运行的容器</span><br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES<br>891162d04f12        dfcfd8e9a5d3        <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   About a minute ago   Up About a minute   80/tcp              nginx-test01<br><br><span class="hljs-comment">#进入后台运行的容器</span><br>[root@docker ~]<span class="hljs-comment"># docker exec -it 891162d04f12 /bin/bash</span><br>root@891162d04f12:/<span class="hljs-comment"># ls</span><br>bin  boot  devetc  home  liblib64  media  mnt  optproc  root  run  sbin  srv  sys  tmp  usr  var<br><br><span class="hljs-comment">#停止容器</span><br>[root@docker ~]<span class="hljs-comment"># docker stop 891162d04f12</span><br>891162d04f12<br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<br><br><span class="hljs-comment">#运行容器</span><br>[root@docker ~]<span class="hljs-comment"># docker start 891162d04f12</span><br>891162d04f12<br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES<br>891162d04f12        dfcfd8e9a5d3        <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   5 minutes ago       Up 3 seconds        80/tcp              nginx-test01<br><br><span class="hljs-comment">#删除容器</span><br><span class="hljs-comment">#删除运行中的容器/已停止的容器</span><br>[root@docker ~]<span class="hljs-comment"># docker run -d --name nginx-test02 dfcfd8e9a5d3</span><br>15e778a5bb491aa18e6aa2e29783f591489a59be927e4da99cd9809df4871ac3<br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES<br>15e778a5bb49        dfcfd8e9a5d3        <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   7 seconds ago       Up 6 seconds        80/tcp              nginx-test02<br>891162d04f12        dfcfd8e9a5d3        <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   8 minutes ago       Up 4 minutes        80/tcp              nginx-test01<br>[root@docker ~]<span class="hljs-comment"># docker stop 891162d04f12</span><br>891162d04f12<br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES<br>15e778a5bb49        dfcfd8e9a5d3        <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   25 seconds ago      Up 24 seconds       80/tcp              nginx-test02<br><br><span class="hljs-comment">#以下信息可知：已停止的容器可以直接删除，而正在运行中的容器不能直接删除</span><br>[root@docker ~]<span class="hljs-comment"># docker rm 891162d04f12</span><br>891162d04f12<br>[root@docker ~]<span class="hljs-comment"># docker rm 15e778a5bb49</span><br>Error response from daemon: You cannot remove a running container 15e778a5bb491aa18e6aa2e29783f591489a59be927e4da99cd9809df4871ac3. Stop the container before attempting removal or force remove<br><br><br><span class="hljs-comment">#强制删除正在运行中的容器</span><br>[root@docker ~]<span class="hljs-comment"># docker rm -f 15e778a5bb49</span><br>15e778a5bb49<br><br><span class="hljs-comment">#列出所有容器ID</span><br><span class="hljs-comment">#-a ：查询本机所有的容器，不管容器是否在运行</span><br><span class="hljs-comment">#-qa ：列出所有的容器ID</span><br>[root@docker ~]<span class="hljs-comment"># docker ps -qa</span><br>0142d564b60a<br>8416fc8c0973<br><br><span class="hljs-comment">#强制删除所有容器</span><br>[root@docker ~]<span class="hljs-comment"># docker rm -f $(docker ps -qa)</span><br>0142d564b60a<br>8416fc8c0973<br>[root@docker ~]<span class="hljs-comment"># docker ps -qa</span><br>[root@docker ~]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#删除镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        5 months ago        13.3kB<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br>[root@docker ~]<span class="hljs-comment"># docker rmi d1165f221234</span><br>Untagged: hello-world:latest<br>Untagged: hello-world@sha256:0fe98d7debd9049c50b597ef1f85b7c1e8cc81f59c8d623fcb2250e8bec85b38<br>Deleted: sha256:d1165f2212346b2bab48cb01c1e39ee8ad1be46b87873d9ca7a4e434980a7726<br>Deleted: sha256:f22b99068db93900abe17f7f5e09ec775c2826ecfe9db961fea68293744144bd<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br><br><span class="hljs-comment">#批量删除镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        5 months ago        13.3kB<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br>[root@docker ~]<span class="hljs-comment"># docker images -qa</span><br>d1165f221234<br>dfcfd8e9a5d3<br>[root@docker ~]<span class="hljs-comment"># docker rmi $(docker images -qa)</span><br>Untagged: nginx:1.16<br>Untagged: nginx@sha256:d20aa6d1cae56fd17cd458f4807e0de462caf2336f0b70b5eeb69fcaaf30dd9c<br>Deleted: sha256:dfcfd8e9a5d38fb82bc8f9c299beba2df2232b7712b62875d5238cead7a5831c<br>Deleted: sha256:d02bd10c7ab368ff7c09eae1c0ac63b139cdd909d035c2acf15dbdfec2324c26<br>Deleted: sha256:444aa1698480236e67460ed344a57863965a03bb389d2478a137c97147b50765<br>Deleted: sha256:c2adabaecedbda0af72b153c6499a0555f3a769d52370469d8f6bd6328af9b13<br>Error response from daemon: conflict: unable to delete d1165f221234 (must be forced) - image is being used by stopped container 0ffef7c89201<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        5 months ago        13.3kB<br><br><span class="hljs-comment">#由此可知，正在被使用的镜像是不能直接删除的，必须先删除以该镜像运行的容器，再删除镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker ps -qa</span><br>0ffef7c89201<br>[root@docker ~]<span class="hljs-comment"># docker rm -f $(docker ps -qa)</span><br>0ffef7c89201<br>[root@docker ~]<span class="hljs-comment"># docker ps -qa</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        5 months ago        13.3kB<br>[root@docker ~]<span class="hljs-comment"># docker rmi $(docker images -qa)</span><br>Untagged: hello-world:latest<br>Untagged: hello-world@sha256:0fe98d7debd9049c50b597ef1f85b7c1e8cc81f59c8d623fcb2250e8bec85b38<br>Deleted: sha256:d1165f2212346b2bab48cb01c1e39ee8ad1be46b87873d9ca7a4e434980a7726<br>Deleted: sha256:f22b99068db93900abe17f7f5e09ec775c2826ecfe9db961fea68293744144bd<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br><br></code></pre></td></tr></table></figure>    </div></div><hr><h4 id="容器部署nginx"><a href="#容器部署nginx" class="headerlink" title="容器部署nginx"></a>容器部署nginx</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Docker启动nginx镜像并测试访问</span><br>[root@docker ~]<span class="hljs-comment"># docker pull nginx:1.16</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br><br><span class="hljs-comment">#后台运行nginx，并配置端口映射</span><br><span class="hljs-comment">#-p ：端口映射主机端口:容器端口</span><br>[root@docker ~]<span class="hljs-comment"># docker run -d --name nginx-test03 -p 8888:80 dfcfd8e9a5d3</span><br>[root@docker ~]<span class="hljs-comment"># curl localhost:8888</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>&lt;title&gt;Welcome to nginx!&lt;/title&gt;<br>...........<br><br><span class="hljs-comment">#停止nginx容器，重新测试访问</span><br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES<br>802cf357ac21        dfcfd8e9a5d3        <span class="hljs-string">&quot;nginx -g &#x27;daemon of…&quot;</span>   10 minutes ago      Up 10 minutes       0.0.0.0:8888-&gt;80/tcp   nginx-test03<br>[root@docker ~]<span class="hljs-comment"># docker stop 802cf357ac21</span><br>802cf357ac21<br>[root@docker ~]<span class="hljs-comment"># curl localhost:8888</span><br>curl: (7) Failed connect to localhost:8888; Connection refused<br><br>             1.16                dfcfd8e9a5d3        15 months ago       127MB<br><br></code></pre></td></tr></table></figure>    </div></div><hr><h4 id="镜像导入导出"><a href="#镜像导入导出" class="headerlink" title="镜像导入导出"></a>镜像导入导出</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#镜像导出与导入</span><br><span class="hljs-comment">#镜像导出</span><br>[root@docker ~]<span class="hljs-comment"># docker images </span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br>[root@docker ~]<span class="hljs-comment"># docker save -o /data/nginx.tar nginx:1.16</span><br>[root@docker ~]<span class="hljs-comment"># ll -h /data/</span><br>total 125M<br>-rw------- 1 root root 125M Aug 14 16:25 nginx.tar<br><br><span class="hljs-comment">#镜像导入</span><br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br>[root@docker ~]<span class="hljs-comment"># docker ps -qa</span><br>[root@docker ~]<span class="hljs-comment"># docker rmi dfcfd8e9a5d3</span><br>Untagged: nginx:1.16<br>Untagged: nginx@sha256:d20aa6d1cae56fd17cd458f4807e0de462caf2336f0b70b5eeb69fcaaf30dd9c<br>Deleted: sha256:dfcfd8e9a5d38fb82bc8f9c299beba2df2232b7712b62875d5238cead7a5831c<br>Deleted: sha256:d02bd10c7ab368ff7c09eae1c0ac63b139cdd909d035c2acf15dbdfec2324c26<br>Deleted: sha256:444aa1698480236e67460ed344a57863965a03bb389d2478a137c97147b50765<br>Deleted: sha256:c2adabaecedbda0af72b153c6499a0555f3a769d52370469d8f6bd6328af9b13<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE <br>[root@docker ~]<span class="hljs-comment"># docker load -i /data/nginx.tar </span><br>c2adabaecedb: Loading layer [==================================================&gt;]  72.49MB/72.49MB<br>82068c842707: Loading layer [==================================================&gt;]  58.02MB/58.02MB<br>c23548ea0b99: Loading layer [==================================================&gt;]  3.584kB/3.584kB<br>Loaded image: nginx:1.16<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.16                dfcfd8e9a5d3        15 months ago       127MB<br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<br>[root@docker ~]<span class="hljs-comment"># docker run -it --name nginx-test04 dfcfd8e9a5d3 /bin/bash </span><br>root@6eb86872540d:/<span class="hljs-comment"># ls</span><br>bin  boot  devetc  home  liblib64  media  mnt  optproc  root  run  sbin  srv  sys  tmp  usr  var<br><br><span class="hljs-comment">#交互状态下进入容器，exit退出后容器将随之释放，若想退出容器且容器仍继续运行，可使用 Ctrl + q + p 组合键退出</span><br><span class="hljs-comment">#退出后使用 exec 可重新进入容器</span><br>[root@docker ~]<span class="hljs-comment"># docker exec -it 4669926e89e9 /bin/bash</span><br>root@4669926e89e9:/<span class="hljs-comment"># exit</span><br><span class="hljs-built_in">exit</span><br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<br>4669926e89e9        dfcfd8e9a5d3        <span class="hljs-string">&quot;/bin/bash&quot;</span>         3 minutes ago       Up 3 minutes        80/tcp              nginx-test05<br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="Docker-compose安装"><a href="#Docker-compose安装" class="headerlink" title="Docker-compose安装"></a>Docker-compose安装</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#终端命令下载可能会很慢，因此也可以在网页中下载好上传</span><br>[root@docker ~]<span class="hljs-comment"># sudo curl -L https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-linux-x86_64 &gt;/usr/local/bin/docker-compose</span><br><br><span class="hljs-comment">#添加执行权限</span><br>[root@docker ~]<span class="hljs-comment"># sudo chmod +x /usr/local/bin/docker-compose</span><br><br><span class="hljs-comment">#查看版本</span><br>[root@docker ~]<span class="hljs-comment"># docker-compose -v</span><br>Docker Compose version v2.2.2<br><br><span class="hljs-comment">#事先下载好一个tomcat镜像</span><br>[root@docker ~]<span class="hljs-comment"># docker pull tomcat:8.0</span><br>8.0: Pulling from library/tomcat<br>1aea3d9a32e6: Pull complete <br>Digest: sha256:8ecb10948deb32c34aeadf7bf95d12a93fbd3527911fa629c1a3e7823b89ce6f<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> tomcat:8.0<br>docker.io/library/tomcat:8.0<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>tomcat              8.0                 ef6a7c98d192        3 years ago         356MB<br><br>[root@docker ~]<span class="hljs-comment"># mkdir -p /data/docker/</span><br>[root@docker ~]<span class="hljs-comment"># cd /data/docker/</span><br><br><span class="hljs-comment">#编辑第一个docker compose文件</span><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose.yml</span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<span class="hljs-comment">#名称保持唯一</span><br>                image: tomcat:8.0<span class="hljs-comment">#镜像名称:tag</span><br>                ports:<br>                        - <span class="hljs-string">&quot;8080:8080&quot;</span><span class="hljs-comment">#映射 主机端口:容器端口</span><br>                        <br><span class="hljs-comment">#运行docker compose时要确保当前路径下有docker-compose.yml文件</span><br><span class="hljs-comment">#使用docker-compose up 可启动所有</span><br><span class="hljs-comment">#而使用 -f 选项可选择只运行指定的docker-compose.yml文件</span><br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose.yml up</span><br>[+] Running 2/2<br> ⠿ Network docker_default     Created                                                                                 0.1s<br> ⠿ Container docker-tomcat-1  Created                                                                                 0.0s<br>Attaching to docker-tomcat-1<br><br><span class="hljs-comment">#另开一个终端，访问页面正常</span><br>[root@docker docker]<span class="hljs-comment"># curl http://192.168.40.30:8080</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>    &lt;<span class="hljs-built_in">head</span>&gt;<br>        &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;<br>        &lt;title&gt;Apache Tomcat/8.0.53&lt;/title&gt;<br>        &lt;<span class="hljs-built_in">link</span> href=<span class="hljs-string">&quot;favicon.ico&quot;</span> rel=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;image/x-icon&quot;</span> /&gt;<br>        &lt;<span class="hljs-built_in">link</span> href=<span class="hljs-string">&quot;favicon.ico&quot;</span> rel=<span class="hljs-string">&quot;shortcut icon&quot;</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;image/x-icon&quot;</span> /&gt;<br>        &lt;<span class="hljs-built_in">link</span> href=<span class="hljs-string">&quot;tomcat.css&quot;</span> rel=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> /&gt;<br>    &lt;/head&gt;<br>.......................................<br><br><span class="hljs-comment">#当之前运行docker compose文件的终端被ctrl +c后，访问便会立刻失败</span><br>..............................<br>docker-tomcat-1  | 29-Dec-2021 00:31:55.585 INFO [main] org.apache.catalina.startup.Catalina.start Server startup <span class="hljs-keyword">in</span> 1470 ms<br>^CGracefully stopping... (press Ctrl+C again to force)<br>[+] Running 1/1<br> ⠿ Container docker-tomcat-1  Stopped                                                                                                                                                     0.8s<br>canceled<br><br>[root@docker docker]<span class="hljs-comment"># curl http://192.168.40.30:8080</span><br>curl: (7) Failed connect to 192.168.40.30:8080; Connection refused<br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="Docker-compose运行多个服务"><a href="#Docker-compose运行多个服务" class="headerlink" title="Docker-compose运行多个服务"></a>Docker-compose运行多个服务</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#运行多个服务</span><br>[root@docker docker]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>tomcat              8.0                 ef6a7c98d192        3 years ago         356MB<br>[root@docker docker]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<br>[root@docker docker]<span class="hljs-comment"># docker pull nginx:1.18</span><br>1.18: Pulling from library/nginx<br>f7ec5a41d630: Pull complete  <br>Digest: sha256:e90ac5331fe095cea01b121a3627174b2e33e06e83720e9a934c7b8ccc9c55a0<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> nginx:1.18<br>docker.io/library/nginx:1.18<br><br>[root@docker docker]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.18                c2c45d506085        8 months ago        133MB<br>tomcat              8.0                 ef6a7c98d192        3 years ago         356MB<br><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose.yml</span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;8080:8080&quot;</span><br>        nginx:<br>                image: nginx:1.18<br>                ports:<br>                        - <span class="hljs-string">&quot;80:80&quot;</span><br>                        <br>[root@docker docker]<span class="hljs-comment"># docker-compose up</span><br>[+] Running 2/0<br> ⠿ Container docker-nginx-1   Created                                                                                                                                                     0.0s<br> ⠿ Container docker-tomcat-1  Created                                                                                                                                                     0.0s<br>Attaching to docker-nginx-1, docker-tomcat-1<br>...............................<br><br><br><span class="hljs-comment">#在另外一个终端查看正在运行的容器信息</span><br>[root@docker docker]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES<br>e37bba3b9afb        nginx:1.18          <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   28 seconds ago      Up 25 seconds       0.0.0.0:80-&gt;80/tcp       docker-nginx-1<br>2baa4522c182        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>        18 minutes ago      Up 25 seconds       0.0.0.0:8080-&gt;8080/tcp   docker-tomcat-1<br><br><span class="hljs-comment">#访问测试正常</span><br>[root@docker docker]<span class="hljs-comment"># curl http://192.168.40.30:8080</span><br>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br>                                 Dload  Upload   Total   Spent    Left  Speed<br>100 11266    0 11266    0     0  76423      0 --:--:-- --:--:-- --:--:-- 76121<br>.................................<br>[root@docker docker]<span class="hljs-comment"># curl http://192.168.40.30:80</span><br>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br>                                 Dload  Upload   Total   Spent    Left  Speed<br>100   612  100   612    0     0   492k      0 --:--:-- --:--:-- --:--:--  597k<br>........................................<br><br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="compose映射路径启动服务"><a href="#compose映射路径启动服务" class="headerlink" title="compose映射路径启动服务"></a>compose映射路径启动服务</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#绝对路径映射</span><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose02.yml</span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;8080:8080&quot;</span><br>                volumes:<br>                        - /data/docker/file:/data<br>                        <br><span class="hljs-comment">#运行</span><br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose02.yml up</span><br>WARN[0000] Found orphan containers ([docker-nginx-1]) <span class="hljs-keyword">for</span> this project. If you removed or renamed this service <span class="hljs-keyword">in</span> your compose file, you can run this <span class="hljs-built_in">command</span> with the --remove-orphans flag to clean it up. <br>[+] Running 1/1<br> ⠿ Container docker-tomcat-1  Recreated                                                                                                                                                   0.1s<br>Attaching to docker-tomcat-1<br><br><span class="hljs-comment">#在另一个终端查看</span><br>[root@docker docker]<span class="hljs-comment"># echo &quot;123&quot; &gt;&gt; /data/docker/file/1.txt</span><br>[root@docker docker]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES<br>4c4424faccc6        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>   2 minutes ago       Up 2 minutes        0.0.0.0:8080-&gt;8080/tcp   docker-tomcat-1<br>[root@docker docker]<span class="hljs-comment"># docker exec -it 4c bash</span><br>root@4c4424faccc6:/usr/local/tomcat<span class="hljs-comment"># cat /data/1.txt </span><br>123<br><br><span class="hljs-comment">#自定义路径映射</span><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose02.yml</span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;8080:8080&quot;</span><br>                volumes:<br>                        - testfile:/data<span class="hljs-comment">#自定义路径映射</span><br>volumes:<span class="hljs-comment">#声明上面服务使用的自定义卷名</span><br>        testfile:<span class="hljs-comment">#所声明的卷名名称，compose在创建此卷名时会在其名称前加上项目名(compose文件父目录名称)</span><br>        <br><span class="hljs-comment">#运行</span><br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose02.yml up</span><br>WARN[0000] Found orphan containers ([docker-nginx-1]) <span class="hljs-keyword">for</span> this project. If you removed or renamed this service <span class="hljs-keyword">in</span> your compose file, you can run this <span class="hljs-built_in">command</span> with the --remove-orphans flag to clean it up. <br>[+] Running 2/2<br> ⠿ Volume <span class="hljs-string">&quot;docker_testfile&quot;</span>   Created                                                                                                                                                     0.0s<br> ⠿ Container docker-tomcat-1  Recreated                                                                                                                                                   0.1s<br>Attaching to docker-tomcat-1<br><br><span class="hljs-comment">#在另外一个终端查看正在运行的容器信息</span><br>[root@docker docker]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES<br>5d8a5e39d85a        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>   4 minutes ago       Up 4 minutes        0.0.0.0:8080-&gt;8080/tcp   docker-tomcat-1<br>[root@docker docker]<span class="hljs-comment"># docker exec -it 5d bash</span><br>root@5d8a5e39d85a:/usr/local/tomcat<span class="hljs-comment"># cd /data/</span><br>root@5d8a5e39d85a:/data<span class="hljs-comment"># ls</span><br>root@5d8a5e39d85a:/data<span class="hljs-comment"># echo &quot;123&quot; &gt;&gt; 2.txt</span><br>root@5d8a5e39d85a:/data<span class="hljs-comment"># exit</span><br><span class="hljs-built_in">exit</span><br>[root@docker docker]<span class="hljs-comment"># find / -name &quot;2.txt&quot;</span><br>/var/lib/docker/volumes/docker_testfile/_data/2.txt<br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@docker docker]<span class="hljs-comment"># vim docker-compose02.yml</span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;8080:8080&quot;</span><br>                volumes:<br>                        - tomcatfile:/data<br>                container_name: tomcat1229<br>        nginx:<br>                image: nginx:1.18<br>                ports:<br>                        - <span class="hljs-string">&quot;80:80&quot;</span><br>                volumes:<br>                        - nginxfile:/data<br>                container_name: nginx1229<br>volumes:<br>        tomcatfile:<br>        nginxfile:<br>       <br><span class="hljs-comment">#启动</span><br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose02.yml up</span><br>[+] Running 4/4<br> ⠿ Volume <span class="hljs-string">&quot;docker_tomcatfile&quot;</span>  Created                                                                                0.0s<br> ⠿ Volume <span class="hljs-string">&quot;docker_nginxfile&quot;</span>   Created                                                                                0.0s<br> ⠿ Container docker-nginx-1    Recreated                                                                              0.1s<br> ⠿ Container docker-tomcat-1   Recreated                                                                              0.1s<br>Attaching to nginx1229, tomcat1229<br><br><span class="hljs-comment">#在另外一个终端查看正在运行的容器信息</span><br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES<br>033ebdb662a1        nginx:1.18          <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   17 seconds ago      Up 15 seconds       0.0.0.0:80-&gt;80/tcp       nginx1229<br>20152b550379        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>        17 seconds ago      Up 15 seconds       0.0.0.0:8080-&gt;8080/tcp   tomcat1229<br><br>[root@docker ~]<span class="hljs-comment"># docker exec -it 033ebdb662a1 bash</span><br>root@033ebdb662a1:/<span class="hljs-comment"># curl http://tomcat1229:8080</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>    &lt;<span class="hljs-built_in">head</span>&gt;<br>        &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;<br>...................<br><br><span class="hljs-comment">#网络</span><br>[root@docker docker]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>nginx               1.18                c2c45d506085        8 months ago        133MB<br>tomcat              8.0                 ef6a7c98d192        3 years ago         356MB<br><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose02.yml </span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;28080:8080&quot;</span><br>                volumes:<br>                        - tomcatfile:/usr/local/tomcat<br>                container_name: tomcat1229<br>                networks:<br>                        - docker_test<br>        nginx:<br>                image: nginx:1.18<br>                ports:<br>                        - <span class="hljs-string">&quot;280:80&quot;</span><br>                volumes:<br>                        - nginxfile:/usr/local/nginx<br>                container_name: nginx1229<br>                networks:<br>                        - docker_test<br>        mysql:<br>                image: mysql:5.7<br>                ports:<br>                        - <span class="hljs-string">&quot;23306:3306&quot;</span><br>                volumes:<br>                        - mysqlfile:/usr/local/mysql<br>                container_name: mysql1229<br>                networks:<br>                        - docker_test<br>volumes:<br>        tomcatfile:<br>        nginxfile:<br>        mysqlfile:<br>networks:<br>        docker_test:<br>        <br><span class="hljs-comment">#启动，mysql的镜像会在启动compose时自动帮我们下载        </span><br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose02.yml up</span><br>[+] Running 12/12<br> ⠿ mysql Pulled                                                                       115.3s<br>   ⠿ 72a69066d2fe Pull complete                                                        19.1s<br>   ⠿ 70deed891d42 Pull complete                                                       110.9s<br>[+] Running 5/5<br> ⠿ Network docker_docker_test  Created                                                  0.1s<br> ⠿ Volume <span class="hljs-string">&quot;docker_mysqlfile&quot;</span>   Created                                                  0.0s<br> ⠿ Container mysql1229         Created                                                  0.4s<br> ⠿ Container tomcat1229        Recreated                                                0.6s<br> ⠿ Container nginx1229         Recreated                                                0.4s<br>Attaching to mysql1229, nginx1229, tomcat1229<br><span class="hljs-comment">#数据库并未成功启动，因为未设置密码</span><br>mysql1229   | 2021-12-29 02:26:38+00:00 [ERROR] [Entrypoint]: Database is uninitialized and password option is not specified<br>mysql1229   |     You need to specify one of the following:<br>mysql1229   |     - MYSQL_ROOT_PASSWORD<br>mysql1229   |     - MYSQL_ALLOW_EMPTY_PASSWORD<br>mysql1229   |     - MYSQL_RANDOM_ROOT_PASSWORD<br>mysql1229 exited with code 1<br><br><span class="hljs-comment">#在另外一个终端查看正在运行的容器信息</span><br>[root@docker docker]<span class="hljs-comment"># docker images</span><br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>mysql               5.7                 c20987f18b13        8 days ago          448MB<br>nginx               1.18                c2c45d506085        8 months ago        133MB<br>tomcat              8.0                 ef6a7c98d192        3 years ago         356MB<br>[root@docker docker]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                     NAMES<br>5f2f958be986        nginx:1.18          <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   5 minutes ago       Up 5 minutes        0.0.0.0:280-&gt;80/tcp       nginx1229<br>3122d3ed7bce        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>        5 minutes ago       Up 5 minutes        0.0.0.0:28080-&gt;8080/tcp   tomcat1229<br><br><span class="hljs-comment">#根据报错提示，修改mysql的配置</span><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose02.yml </span><br><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;28080:8080&quot;</span><br>                volumes:<br>                        - tomcatfile:/usr/local/tomcat<br>                container_name: tomcat1229<br>                networks:<br>                        - docker_test<br>        nginx:<br>                image: nginx:1.18<br>                ports:<br>                        - <span class="hljs-string">&quot;280:80&quot;</span><br>                volumes:<br>                        - nginxfile:/usr/local/nginx<br>                container_name: nginx1229<br>                networks:<br>                        - docker_test<br>        mysql:<br>                image: mysql:5.7<br>                ports:<br>                        - <span class="hljs-string">&quot;23306:3306&quot;</span><br>                volumes:<br>                        - mysqlfile:/usr/local/mysql<br>                container_name: mysql1229<br>                networks:<br>                        - docker_test<br>                environment:<span class="hljs-comment">#添加两行</span><br>                        - MYSQL_ROOT_PASSWORD=123456<br>volumes:<br>        tomcatfile:<br>        nginxfile:<br>        mysqlfile:<br>networks:<br>        docker_test:<br>        <br>        <br><span class="hljs-comment">#重新启动</span><br>[root@docker docker]<span class="hljs-comment">#  docker-compose -f docker-compose02.yml up</span><br>[+] Running 3/3<br> ⠿ Container nginx1229   Running                                                                                                                                                          0.0s<br> ⠿ Container mysql1229   Recreated                                                                                                                                                        0.2s<br> ⠿ Container tomcat1229  Running                                                                                                                                                          0.0s<br>Attaching to mysql1229, nginx1229, tomcat1229<br><br><span class="hljs-comment">#在另外一个终端查看正在运行的容器信息</span><br>[root@docker docker]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                                NAMES<br>1d67e25b7c2d        mysql:5.7           <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   About a minute ago   Up 11 seconds       33060/tcp, 0.0.0.0:23306-&gt;3306/tcp   mysql1229<br>5f2f958be986        nginx:1.18          <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   13 minutes ago       Up 11 seconds       0.0.0.0:280-&gt;80/tcp                  nginx1229<br>3122d3ed7bce        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>        13 minutes ago       Up 11 seconds       0.0.0.0:28080-&gt;8080/tcp              tomcat1229<br><br>[root@docker docker]<span class="hljs-comment"># docker exec -it 1d bash</span><br>root@1d67e25b7c2d:/<span class="hljs-comment"># mysql -uroot -p123456</span><br>mysql: [Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure.<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection <span class="hljs-built_in">id</span> is 2<br>mysql&gt; <span class="hljs-built_in">exit</span><br><br><br>[root@docker docker]<span class="hljs-comment"># docker volume ls</span><br>DRIVER              VOLUME NAME<br><span class="hljs-built_in">local</span>               7d8a5c7ba17941d823509bb5485d300a751926847da6ecf48c18e8e47929901f<br><span class="hljs-built_in">local</span>               docker_mysqlfile<br><span class="hljs-built_in">local</span>               docker_nginxfile<br><span class="hljs-built_in">local</span>               docker_tomcatfile<br><br>[root@docker docker]<span class="hljs-comment"># docker inspect docker_mysqlfile</span><br>[<br>    &#123;<br>        <span class="hljs-string">&quot;CreatedAt&quot;</span>: <span class="hljs-string">&quot;2021-12-29T10:26:36+08:00&quot;</span>,<br>        <span class="hljs-string">&quot;Driver&quot;</span>: <span class="hljs-string">&quot;local&quot;</span>,<br>        <span class="hljs-string">&quot;Labels&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;com.docker.compose.project&quot;</span>: <span class="hljs-string">&quot;docker&quot;</span>,<br>            <span class="hljs-string">&quot;com.docker.compose.version&quot;</span>: <span class="hljs-string">&quot;2.2.2&quot;</span>,<br>            <span class="hljs-string">&quot;com.docker.compose.volume&quot;</span>: <span class="hljs-string">&quot;mysqlfile&quot;</span><br>        &#125;,<br>        <span class="hljs-string">&quot;Mountpoint&quot;</span>: <span class="hljs-string">&quot;/var/lib/docker/volumes/docker_mysqlfile/_data&quot;</span>,<br>        <span class="hljs-string">&quot;Name&quot;</span>: <span class="hljs-string">&quot;docker_mysqlfile&quot;</span>,<br>        <span class="hljs-string">&quot;Options&quot;</span>: null,<br>        <span class="hljs-string">&quot;Scope&quot;</span>: <span class="hljs-string">&quot;local&quot;</span><br>    &#125;<br>]<br><br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="env-file"><a href="#env-file" class="headerlink" title="env_file"></a>env_file</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#之前配置mysql虽然成功启动服务，但存在一个安全隐患（配置文件中的内容暴露了mysql的登录密码）</span><br><span class="hljs-comment">#因此可将 environment 改为另一种写法，使其将密码隐藏在文件中</span><br>[root@docker docker]<span class="hljs-comment"># cat docker-compose02.yml </span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>.........<span class="hljs-comment">#其他服务配置省略不写，以下为原mysql配置内容</span><br>        mysql:<br>                image: mysql:5.7<br>                ports:<br>                        - <span class="hljs-string">&quot;23306:3306&quot;</span><br>                volumes:<br>                        - mysqlfile:/usr/local/mysql<br>                container_name: mysql1229<br>                networks:<br>                        - docker_test<br>                environment:<br>                        - MYSQL_ROOT_PASSWORD=123456<br>volumes:<br>        tomcatfile:<br>        nginxfile:<br>        mysqlfile:<br>networks:<br>        docker_test:<br>        <br>        <br>[root@docker docker]<span class="hljs-comment"># vim mysql.env</span><br>MYSQL_ROOT_PASSWORD=123456<br><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose02.yml </span><br><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>.........<span class="hljs-comment">#其他服务配置省略不写，以下为mysql修改后的配置内容</span><br>        mysql:<br>                image: mysql:5.7<br>                ports:<br>                        - <span class="hljs-string">&quot;23306:3306&quot;</span><br>                volumes:<br>                        - mysqlfile:/usr/local/mysql<br>                container_name: mysql1229<br>                networks:<br>                        - docker_test<br>                <span class="hljs-comment">#environment:</span><br>                <span class="hljs-comment">#        - MYSQL_ROOT_PASSWORD=123456</span><br>                env_file:<br>                        - mysql.env<br>volumes:<br>        tomcatfile:<br>        nginxfile:<br>        mysqlfile:<br>networks:<br>        docker_test:<br>        <br>        <br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose02.yml up</span><br>[+] Running 3/3<br> ⠿ Container tomcat1229  Created                                                                                      0.0s<br> ⠿ Container nginx1229   Created                                                                                      0.0s<br> ⠿ Container mysql1229   Recreated                                                                                    0.2s<br>Attaching to mysql1229, nginx1229, tomcat1229<br><br><br><span class="hljs-comment">#在另外一个终端查看正在运行的容器信息</span><br>[root@docker ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                NAMES<br>acb4983f2d6c        mysql:5.7           <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   2 minutes ago       Up 2 minutes        33060/tcp, 0.0.0.0:23306-&gt;3306/tcp   mysql1229<br>86d379e203f6        tomcat:8.0          <span class="hljs-string">&quot;catalina.sh run&quot;</span>        5 days ago          Up 2 minutes        0.0.0.0:28080-&gt;8080/tcp              tomcat1229<br>5f2f958be986        nginx:1.18          <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   5 days ago          Up 2 minutes        0.0.0.0:280-&gt;80/tcp                  nginx1229<br>[root@docker ~]<span class="hljs-comment"># docker exec -it acb bash</span><br>root@acb4983f2d6c:/<span class="hljs-comment"># mysql -uroot -p123456</span><br>mysql&gt; <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="容器编排"><a href="#容器编排" class="headerlink" title="容器编排"></a>容器编排</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#编排容器启动顺序</span><br>[root@docker docker]<span class="hljs-comment"># docker rm -f $(docker ps -qa)</span><br><br>[root@docker docker]<span class="hljs-comment"># vim docker-compose03.yml </span><br>version: <span class="hljs-string">&quot;3.6&quot;</span><br>services:<br>        tomcat1:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;28080:8080&quot;</span><br>                volumes:<br>                        - tomcatfile1:/usr/local/tomcat<br>                container_name: tomcat1229<br>                networks:<br>                        - docker_test<br>                depends_on:<span class="hljs-comment">#下面写服务名称而非容器名称,意思是让2和3先启动</span><br>                        - tomcat2<br>                        - tomcat3<br>        tomcat2:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;38080:8080&quot;</span><br>                volumes:<br>                        - tomcatfile2:/usr/local/tomcat<br>                container_name: tomcat1230<br>                networks:<br>                        - docker_test<br>        tomcat3:<br>                image: tomcat:8.0<br>                ports:<br>                        - <span class="hljs-string">&quot;48080:8080&quot;</span><br>                volumes:<br>                        - tomcatfile3:/usr/local/tomcat<br>                container_name: tomcat1231<br>                networks:<br>                        - docker_test<br>volumes:<br>        tomcatfile1:<br>        tomcatfile2:<br>        tomcatfile3:<br>networks:<br>        docker_test:<br>        <br> <br><span class="hljs-comment">#启动容器，并从其输出的日志信息中可以观察到，tomcat1 会让 tomcat2 和 tomcat3 先启动，2和3启动一段时间但还未完全启动服务时，tomcat1才开始启动</span><br>[root@docker docker]<span class="hljs-comment"># docker-compose -f docker-compose03.yml up</span><br>[+] Running 3/3<br> ⠿ Container tomcat1231  Created                                                                                      0.1s<br> ⠿ Container tomcat1230  Created                                                                                      0.1s<br> ⠿ Container tomcat1229  Created                                                                                      0.1s<br>Attaching to tomcat1229, tomcat1230, tomcat1231<br>..................................<br></code></pre></td></tr></table></figure>    </div></div><hr><h3 id="docker-离线依赖包下载"><a href="#docker-离线依赖包下载" class="headerlink" title="docker 离线依赖包下载"></a>docker 离线依赖包下载</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker 离线依赖包下载方法（全）附Docker的依赖包<br>yum -y install --downloadonly --downloaddir=/root/docker docker-ce<br><br>--downloadonly 只下载不安装   --downloaddir 下载后路径  docker-ce  服务名<br></code></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Awk 示例</title>
    <link href="/2022/10/23/awk-Example/"/>
    <url>/2022/10/23/awk-Example/</url>
    
    <content type="html"><![CDATA[<h1 id="awk-范例"><a href="#awk-范例" class="headerlink" title="awk 范例"></a><strong>awk 范例</strong></h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#原文件内容：</span><br>[root@CentOS8 data]<span class="hljs-comment"># cat emp.txt </span><br>Beth:4.00:0<br>Dan:3.75:0<br>kathy:4.00:10<br>Mark:5.00:20<br>Mary:5.50:22<br>Susie:4.25:18<br><br><span class="hljs-comment">#以 ：为分隔符搜索 emp.txt 文件中每行的 1,3字段，且打印至终端时在其中间以 tab键为字段分隔符来显示</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -F&quot;:&quot; &#x27;&#123;print $1&quot;\t&quot;$3&#125;&#x27; emp.txt </span><br>Beth0<br>Dan0<br>kathy10<br>Mark20<br>Mary22<br>Susie18<br><br><span class="hljs-comment">#与-F作用相同的写法 -v FS=</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v FS=&quot;:&quot; &#x27;&#123;print $1&quot;\t&quot;$3&#125;&#x27; emp.txt </span><br>Beth0<br>Dan0<br>kathy10<br>Mark20<br>Mary22<br>Susie18<br><br><span class="hljs-comment">#指定 tab键 为字段分隔符显示 emp.txt 文件的1,3字段 OFS</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v OFS=&quot;\t&quot; -F&quot;:&quot; &#x27;&#123;print $1,$3&#125;&#x27; emp.txt </span><br>Beth0<br>Dan0<br>kathy10<br>Mark20<br>Mary22<br>Susie18<br><br><span class="hljs-comment">#同样也可以这样写：应注意有两个 -v</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v FS=&#x27;:&#x27; -v OFS=&#x27;\t&#x27; &#x27;&#123;print $1,$3&#125;&#x27; emp.txt </span><br>Beth0<br>Dan0<br>kathy10<br>Mark20<br>Mary22<br>Susie18<br><br><span class="hljs-comment">#另外，还可以输入记录分隔符，指定输入时的换行符</span><br><br><span class="hljs-comment">#例如：以 ；为记录分隔符，只要遇到 ；就将 ；换成\n换行</span><br><br><span class="hljs-comment">#应注意原文件每行结尾都有一个隐藏的\n换行符,输出结果仍将\n换行符视为某行的一部分</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># cat file.txt</span><br>student;liming<br>tech;wang;ma<br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v RS=&#x27;;&#x27; &#x27;&#123;print&#125;&#x27; file.txt </span><br>student<br>liming<br>tech<br>wang<br>ma<br><br><span class="hljs-comment">#那么如何证明这一点呢？</span><br><br><span class="hljs-comment">#输出行号一共为4行</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v RS=&#x27;;&#x27; &#x27;&#123;print NR&#125;&#x27; file.txt </span><br>1<br>2<br>3<br>4<br><br><span class="hljs-comment">#而之前的输出字符似乎是五行 ：</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v RS=&#x27;;&#x27; &#x27;&#123;print&#125;&#x27; file.txt </span><br>student<br>liming<br>tech<br>wang<br>ma<br><br><span class="hljs-comment">#结论证明：NR为显示行号，$0是显示每一行；意思是输出每一行并为其添加行号</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v RS=&#x27;;&#x27; &#x27;&#123;print $0,NR&#125;&#x27;le.txt </span><br>student 1<br>liming<br>tech 2<br>wang 3<br>ma<br> 4<br><br><span class="hljs-comment">#所以第一行的liming \n tech三者被视为同一新行，此外，ma后面依旧有一个隐藏的\n换行符</span><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用ORS输出记录分隔符，输出时用指定符号代替换行符  只要遇到 ；就将其替换成@@@输出</span><br><br><span class="hljs-comment">#若RS不指定，默认将行尾隐藏的\n换行符替换</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v RS=&#x27;;&#x27; -v ORS=&#x27;@@@&#x27;  &#x27;&#123;print $0&#125;&#x27; file.txt</span><br>student@@@liming<br>tech@@@wang@@@ma<br>@@@<br><br><br><span class="hljs-comment">#还可以使用NF来显示每一行的字段个数</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk -v RS=&#x27;;&#x27; &#x27;&#123;print NF&#125;&#x27; file.txt </span><br>1<br>2<br>1<br>1<br><br><span class="hljs-comment">#当然，如果不添加额外的选项，仅显示原文件的话，此时只有两行，如果该行中没有空格分隔字段，那么该行会被视为一个整体 即：一个字段</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># awk &#x27;&#123;print NF&#125;&#x27; file.txt </span><br>1<br>1<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#取出磁盘最大使用率</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># df -h|grep &#x27;dev/sd&#x27;|awk -F% &#x27;&#123;print $1&#125;&#x27;|awk &#x27;&#123;print $5&#125;&#x27;|sort -n|tail -1</span><br>13<br><br><span class="hljs-comment">#另一种写法</span><br><br>[root@CentOS8 data]<span class="hljs-comment"># df -h|awk -F&quot; +|%&quot; &#x27;$0 ~ /^\/dev\/sd/&#123;print $5&#125;&#x27;|sort -n|tail -1</span><br>13<br><br></code></pre></td></tr></table></figure><ul><li><p><strong>awk常用参数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-F<span class="hljs-comment">#指明输入时选定的字段分隔符</span><br>-v Var=v <span class="hljs-comment">#变量赋值</span><br>FS<span class="hljs-comment">#输入字段分隔符，默认为空格</span><br>OFS<span class="hljs-comment">#输出字段分隔符，默认为空格</span><br>RS<span class="hljs-comment">#输入记录分隔符，指定输入时的换行符</span><br>ORS<span class="hljs-comment">#输出记录分隔符，输出时用指定符号代替换行符 </span><br>NF<span class="hljs-comment">#显示字段数量</span><br>NR<span class="hljs-comment">#记录每行行号</span><br></code></pre></td></tr></table></figure></li><li><pre><code class="hljs">  awk除了处理一个文件，是不是可以处理多个文件呢？  同时分别显示两个文件的行号  [root@CentOS8 data]# cat file.txt   student;liming  tech;wang;ma    [root@CentOS8 data]# cat emp.txt   Beth:90:one  Dan:110:two  [root@CentOS8 data]# awk &#39;&#123;print FNR&#125;&#39; file.txt emp.txt   1  2  1  2    [root@CentOS8 data]# awk &#39;&#123;print $0,FNR&#125;&#39; file.txt emp.txt   student;liming 1  tech;wang;ma 2  Beth:90:one 1  Dan:110:two 2</code></pre></li><li><pre><code class="hljs">  另外还有其他有意思的选项  有关NR、NF变量的使用  在以前我们曾尝试用各种基础命令来取出IP地址、磁盘利用率、软件版本类型等等如此之类的需求；而awk可以非常便捷的做到 ：  取出磁盘利用率最大的分区  [root@CentOS8 data]# df -h|awk -F&quot; +|%&quot; &#39;$0~&quot;/dev/sda&quot;&#123;print $5&#125;&#39;|sort -n|tail -1  13</code></pre></li><li><pre><code class="hljs">  取出用户的家目录  [root@CentOS8 data]# awk -F: &#39;&#123;print $(NF-1)&#125;&#39; /etc/passwd  /root  /bin  ………….  /home/td  /home/mage</code></pre></li><li><pre><code class="hljs">  取出主机ip  [root@CentOS8 data]# ifconfig ens33|awk NR==2&#39;&#123;print $NR&#125;&#39;  192.168.124.3</code></pre></li><li><pre><code class="hljs">  有关FILENAME的使用  文件内容全部替换成文件名，即输出文件个数=文件行数  [root@CentOS8 data]# awk &#39;&#123;print FILENAME&#125;&#39;  file.txt   file.txt   file.txt    [root@CentOS8 data]# awk &#39;&#123;print FILENAME&#125;&#39;  emp.txt   emp.txt  emp.txt  [root@CentOS8 data]# awk &#39;&#123;print FNR,FILENAME&#125;&#39;  emp.txt file.txt   1 emp.txt  2 emp.txt  1 file.txt  2 file.txt</code></pre></li><li><pre><code class="hljs">  ？awk还可以加减乘除？  [root@CentOS8 data]# awk &#39;BEGIN&#123;print 3*5&#125;&#39;  15    [root@CentOS8 data]# awk &#39;BEGIN&#123;print (2*5-6)/2^2&#125;&#39;  1</code></pre></li><li><pre><code class="hljs">  显示命令行参数的个数  [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGC&#125;&#39;   1    [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGC&#125;&#39; emp.txt   2    [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGC&#125;&#39; emp.txt file.txt   3    [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGC&#125;&#39; emp.txt file.txt pig.txt   4</code></pre></li><li><pre><code class="hljs">  ARGV：数组  [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGV[0]&#125;&#39; emp.txt file.txt pig.txt   awk    [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGV[1]&#125;&#39; emp.txt file.txt pig.txt   emp.txt    [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGV[2]&#125;&#39; emp.txt file.txt pig.txt   file.txt    [root@CentOS8 data]# awk &#39;BEGIN&#123;print ARGV[3]&#125;&#39; emp.txt file.txt pig.txt   pig.txt</code></pre></li><li><pre><code class="hljs">  FNR分别记录多个文件行号  FILENAME当前文件名  ARGC终端输入时命令行参数的个数         BEGIN加减乘除等运算  ARGV数组，命令行的各个参数</code></pre></li><li><pre><code class="hljs">  除了可以使用awk的内置变量，还可以自定义变量  [root@CentOS8 data]# awk -F: -v user=&quot;username : &quot; &#39;&#123;print user$1&#125;&#39; /etc/passwd  username : root  username : bin  username : daemon  username : adm  ……………………………</code></pre></li><li><pre><code class="hljs">  自定义多个变量  [root@CentOS8 data]# awk -F: -v user=&quot;username : &quot; -v usid=&quot;useruid : &quot; -v ugid= ：&quot; usergid  &quot; &#39;&#123;print user$1&quot;\t&quot;usid$3&quot;\t&quot;ugid$4&#125;&#39; /etc/passwd  username : rootuseruid : 0 usergid ：0  username : binuseruid : 1 usergid  ：1  username : daemonuseruid : 2 usergid  ：2  username : admuseruid : 3 usergid  ：4  ……………………………………</code></pre></li><li><pre><code class="hljs">  也可以将变量定义在program中  [root@CentOS8 data]# awk -F: &#39;&#123;user=&quot;username : &quot;;usid=&quot;useruid : &quot;;ugid=&quot; usergid ：&quot;;print user$1&quot;\t&quot;usid$3&quot;\t&quot;ugid$4&#125;&#39; /etc/passwd  username : rootuseruid : 0 usergid ：0  username : binuseruid : 1 usergid ：1  username : daemonuseruid : 2 usergid ：2  username : admuseruid : 3 usergid ：4  ………………………………………………</code></pre></li><li><pre><code class="hljs">  倘若你已经在shell中定义过要使用的变量，同样在awk中你也可以调用它  [root@CentOS8 data]# user=&quot;username:&quot; uuid=&quot;useruid:&quot; ugid=&quot;usergid:&quot;;awk -F: -v i=$user -v u=$uuid -v g=$ugid &#39;&#123;print i$1&quot;\t&quot;u$3&quot;\t&quot;g$4&#125;&#39; /etc/passwd  username:rootuseruid:0usergid:0  username:binuseruid:1usergid:1  username:daemonuseruid:2usergid:2  username:admuseruid:3usergid:4  …………………………………………</code></pre></li><li><pre><code class="hljs">  将执行的命令放在一个文件中，使用awk调用该文件一样OK  [root@CentOS8 data]# vim awk.txt    [root@CentOS8 data]# cat awk.txt   &#123;user=&quot;username : &quot;;usid=&quot;useruid : &quot;;ugid=&quot; usergid  &quot;;print user$1&quot;\t&quot;usid$3&quot;\t&quot;ugid$4&#125;  [root@CentOS8 data]# awk -F: -f awk.txt /etc/passwd  username : rootuseruid : 0 usergid  0  username : binuseruid : 1 usergid  1  username : daemonuseruid : 2 usergid  2  username : admuseruid : 3 usergid  4  ………………………………</code></pre></li><li><p>   printf命令</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mel">格式化输出：printf “FORMAT”，item1，item2，….<br>必须指定FORMAT<br>不主动换行，需手动给出\n换行符<br>FORMAT中需要分别为后面每个item指定格式符<br>格式符：与item相呼应<br>%c：显示字符的ASCII码（不常用）<br>%d，%i：显示十进制整数（常用）<br>%e，%E：显示科学计数法数值<br>%f：显示为浮点数（小数位）<br>%g，%G：以科学计数法或浮点形式显示数值（也许你需要将小数精确至<span class="hljs-number">0.001</span>什么的）%s：显示字符串%u：无符号整数%%：显示%自身<br>修饰符：<br>#[.#]第一个数字控制显示的宽度；第二个#表示小数点后精度 %3<span class="hljs-number">.1</span>f<br>    -左对齐（默认为右对齐）%-<span class="hljs-number">15</span>s<br>   +显示数值的正负号 %+d<br></code></pre></td></tr></table></figure></li><li><pre><code class="hljs">  默认向右对其显示  [root@CentOS8 data]# cat emp.txt   Beth:-90:233:-12:seur:out  Dan:110:-7:66:root    [root@CentOS8 data]# awk -F: &#39;&#123;printf &quot;%4s %10d %5d\n&quot;,$1,$3,$4&#125;&#39; emp.txt  Beth        233   -12   Dan        -7    66</code></pre></li><li><pre><code class="hljs">  加-左对齐  [root@CentOS8 data]# awk -F: &#39;&#123;printf &quot;%-4s     %-10d %d\n&quot;,$1,$3,$4&#125;&#39; emp.txt  Beth     233        -12  Dan     -7        66</code></pre></li><li><pre><code class="hljs">  显示’数值‘的正负  [root@CentOS8 data]# awk -F: &#39;&#123;printf &quot;%-5s  %5+d %5+d\n&quot;,$1,$3,$4&#125;&#39; emp.txt   Beth    +233   -12  Dan       -7   +66</code></pre></li><li><pre><code class="hljs">  之前操作的示例中有计算加减乘除的展示  那么，awk中的算术操作符以及其他的操作符有哪些：</code></pre></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">x+y加法<br>x-y减法<br>x*y乘法<br>x/y除法<br>x^y幂运算（指数）<br>x%y取模（除余）<br>-x转换成负数<br>+x将字符串转换为数值<br><br>赋值操作符：<br><br><span class="hljs-section">=右边赋值给左边</span><br>+=先加，再赋值<br>-=先减，再赋值<br>*=先乘，再赋值<br>/=先除，再赋值<br>%=先取模，再赋值<br>^=先幂运算，再赋值<br>++递增操作<br><span class="hljs-bullet">--</span>递减操作<br><br>比较操作符：<br><br><span class="hljs-section">==判断相等</span><br>！=判断不等<br>\&gt;判断大于<br>\&gt;=判断大于等于<br>&lt;判断小于<br>&lt;=判断小于等于<br><br>模式匹配符：<br><br>~左边是否和右边匹配包含<br>！~是否不匹配<br><br>逻辑操作符：<br><br>&amp;&amp;逻辑与<br>||逻辑或<br>！逻辑非<br></code></pre></td></tr></table></figure><ul><li><pre><code class="hljs">  比较下列两个命令语句有何区别  [root@CentOS8 data]# awk &#39;BEGIN&#123;i=0;print ++i,i&#125;&#39;  [root@CentOS8 data]# awk &#39;BEGIN&#123;i=0;print i++,i&#125;&#39;</code></pre></li><li><pre><code class="hljs">  第一个是先加，之后将加得的数和i打印  第二个是先打印i的值，再将i加得的数打印  [root@CentOS8 data]# awk &#39;BEGIN&#123;i=0;print ++i,i&#125;&#39;  1 1  [root@CentOS8 data]# awk &#39;BEGIN&#123;i=0;print i++,i&#125;&#39;  0 1</code></pre></li><li><pre><code class="hljs">  awk中的PATTERN模式</code></pre></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">PATTERN：根据pattern条件，过滤匹配的行；然后再做处理<br><span class="hljs-number">1</span>：若pattern未指定：视为空模式，匹配所有行<br><span class="hljs-number">2</span>：<span class="hljs-regexp">/relational expression/</span>：仅处理能够被模式匹配到的行，且需要用<span class="hljs-regexp">//</span>扩入<br><span class="hljs-number">3</span>：relational expression：关系表达式，仅结果为真，才会进行处理<br>真：结果为非<span class="hljs-number">0</span>值，非空字符串都为真<br>假：结果为空字符串或<span class="hljs-number">0</span>值都为<br><span class="hljs-number">4</span>：line ranges：行范围<br>startine，endline：<span class="hljs-regexp">/pat1/</span>，<span class="hljs-regexp">/pat2/</span>不支持直接给出数字格式。<br><span class="hljs-number">5</span>：<span class="hljs-keyword">BEGIN</span>/<span class="hljs-keyword">END</span>模式<br><span class="hljs-keyword">BEGIN</span>&#123;&#125;：仅在开始处理文件中的文本之前执行一次<br><span class="hljs-keyword">END</span>&#123;&#125;：仅在文本处理完成之后执行一次。<br></code></pre></td></tr></table></figure><ul><li><pre><code class="hljs">  匹配/etc/passwd 中所有行的第N个字段所在的那行包含root的  [root@CentOS8 data]# awk  -F: &#39;$0 ~ /root/&#123;print $1&#125;&#39;  /etc/passwd  root  operator</code></pre></li><li><pre><code class="hljs">  当然，如果匹配一个不存在的字符串是没有反应的  [root@CentOS8 data]# awk  -F: &#39;$0 ~ /kxxxla/&#123;print $1&#125;&#39;  /etc/passwd  [root@CentOS8 data]# awk  -F: &#39;$0 ~ /root/&#123;print $3&#125;&#39;  /etc/passwd  0  11    [root@CentOS8 data]# awk  -F: &#39;$0 ~ /root/&#123;print $5&#125;&#39;  /etc/passwd  root  operator</code></pre></li><li><pre><code class="hljs">  查看/etc/passwd文件便可清楚了解  [root@CentOS8 data]# cat /etc/passwd  root:x:0:0:root:/root:/bin/bash  ………………………………….  operator:x:11:0:operator:/root:/sbin/nologin</code></pre></li><li><pre><code class="hljs">  匹配/etc/passwd 中所有行的第N个字段所在的那行为0的  [root@CentOS8 data]# awk -F: &#39;$4==0&#39; /etc/passwd  root:x:0:0:root:/root:/bin/bash  sync:x:5:0:sync:/sbin:/bin/sync  shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown  halt:x:7:0:halt:/sbin:/sbin/halt  operator:x:11:0:operator:/root:/sbin/nologin  [root@CentOS8 data]# awk -F: &#39;$3==0&#39; /etc/passwd  root:x:0:0:root:/root:/bin/bash</code></pre></li><li><pre><code class="hljs">  于此之外，使用！~可以匹配相反的效果  [root@CentOS8 data]# awk -F: &#39;!$4==0&#39; /etc/passwd  bin:x:1:1:bin:/bin:/sbin/nologin  daemon:x:2:2:daemon:/sbin:/sbin/nologin  adm:x:3:4:adm:/var/adm:/sbin/nologin  lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</code></pre></li><li><pre><code class="hljs">  匹配/etc/passwd 中所有行的第N个字段所在的那行为非0的  [root@CentOS8 data]# awk -F: &#39;!$4==0&#39; /etc/passwd  bin:x:1:1:bin:/bin:/sbin/nologin  daemon:x:2:2:daemon:/sbin:/sbin/nologin  adm:x:3:4:adm:/var/adm:/sbin/nologin  lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin  …………………………………..过多不做演示</code></pre></li><li><pre><code class="hljs">  匹配/etc/passwd 中所有行的第N个字段所在的那行不包含root的  [root@CentOS8 data]# awkawk  -F: &#39;$0 !~ /root/&#123;print $5&#125;&#39; tc/passwd  bin  daemon  adm  ………..过多不做演示</code></pre></li><li><pre><code class="hljs">  有关逻辑与或非的示例：  匹配/etc/passwd中所有行的第三字段数值在0-5之间的，打印符合条件的行的第一字段  [root@CentOS8 data]# awk -F: &#39;$3&gt;=0 &amp;&amp; $3&lt;=5 &#123;print $1&#125;&#39; /etc/passwd|tr &#39;\n&#39; &#39; &#39;  root bin daemon adm lp sync </code></pre></li><li><pre><code class="hljs">  匹配/etc/passwd中所有行的第三字段的数值在小于等于0或大于等于1000之间的，打印符合条件的行的第一字段  [root@CentOS8 data]# awk -F: &#39;$3&lt;=0 || $3&gt;=1000 &#123;print $1&#125;&#39; /etc/passwd  root  nobody  td</code></pre></li><li><pre><code class="hljs">  匹配/etc/passwd中所有行的第三字段数值在小于1000的，取反变为大于等于1000的，打印符合条件的行的第一字段  [root@CentOS8 data]# awk -F: &#39;!($3&lt;1000) &#123;print $1&#125;&#39; /etc/passwd  nobody  td</code></pre></li><li><pre><code class="hljs">  有关PATTERN模式的示例：  原文件：</code></pre></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@CentOS8 data]</span><span class="hljs-comment"># cat /etc/fstab </span><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># /etc/fstab</span><br><span class="hljs-comment"># Created by anaconda on Wed Sep 25 20:03:53 2019</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk/&#x27;.</span><br><span class="hljs-comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># After editing this file, run &#x27;systemctl daemon-reload&#x27; to update systemd</span><br><span class="hljs-comment"># units generated from this file.</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">UUID</span>=e2e0f44d-<span class="hljs-number">0</span>ae9-<span class="hljs-number">4159</span>-a99f-<span class="hljs-number">6</span>a1c72dcccbe /                       xfs     defaults        <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attr">UUID</span>=deb9638d-<span class="hljs-number">76</span>ba-<span class="hljs-number">4370</span>-<span class="hljs-number">90</span>f1-<span class="hljs-number">962</span>cd4ab55b5 /boot                   ext4    defaults        <span class="hljs-number">1</span> <span class="hljs-number">2</span><br><span class="hljs-attr">UUID</span>=<span class="hljs-number">40</span>aac826-ee18-<span class="hljs-number">4927</span>-<span class="hljs-number">8574</span>-c8618c4ea1e7 /data                   xfs     defaults        <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attr">UUID</span>=d12cdea2-cb68-<span class="hljs-number">4</span>aa7-<span class="hljs-number">97</span>cd-<span class="hljs-number">9002297</span>faf05 swap                    swap    defaults        <span class="hljs-number">0</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ul><li><pre><code class="hljs">  仅匹显示以UUID开头的行  [root@CentOS8 data]# awk &#39;/^UUID/&#123;print $1&#125;&#39; /etc/fstab   UUID=e2e0f44d-0ae9-4159-a99f-6a1c72dcccbe  UUID=deb9638d-76ba-4370-90f1-962cd4ab55b5  UUID=40aac826-ee18-4927-8574-c8618c4ea1e7  UUID=d12cdea2-cb68-4aa7-97cd-9002297faf05</code></pre></li><li><pre><code class="hljs">  取反</code></pre></li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@CentOS8 data]<span class="hljs-comment"># awk &#x27;!/^UUID/&#123;print $0&#125;&#x27; /etc/fstab </span><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># /etc/fstab</span><br><span class="hljs-comment"># Created by anaconda on Wed Sep 25 20:03:53 2019</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk/&#x27;.</span><br><span class="hljs-comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># After editing this file, run &#x27;systemctl daemon-reload&#x27; to update systemd</span><br><span class="hljs-comment"># units generated from this file.</span><br><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><ul><li><pre><code class="hljs">  Relational expression:关系表达式  [root@CentOS8 data]# awk -F: &#39;$NF==&quot;/bin/bash&quot;&#123;print $1,$NF&#125;&#39; /etc/passwd  root /bin/bash  td /bin/bash  mage /bin/bash</code></pre></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>awk</category>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>awk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Awk 命令</title>
    <link href="/2022/10/22/awk/"/>
    <url>/2022/10/22/awk/</url>
    
    <content type="html"><![CDATA[<h1 id="awk介绍"><a href="#awk介绍" class="headerlink" title="awk介绍"></a><strong>awk介绍</strong></h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><ul><li><p>awk：Aho, Weinberger, Kernighan，报告生成器，格式化文本输出 </p></li><li><p>有多种版本：New awk（nawk），GNU awk（ gawk） </p></li><li><p>gawk：模式扫描和处理语言 基本用法：  </p><p>  awk [options]   ‘program’  var&#x3D;value   file…  </p><p>  awk [options]   -f programfile    var&#x3D;value  file…  </p><p>  awk [options]  ‘BEGIN{action;… }pattern{action;… }END{action;… }’  file …  </p><p>  awk 程序可由：BEGIN语句块、能够使用模式匹配的通用语句块、END语句 块，共3部分组成  </p><p>  program 通常是被放在单引号中 </p></li><li><p>选项：  </p><pre><code class="hljs">  -F “分隔符” 指明输入时用到的字段分隔符      -v  var=value 变量赋值</code></pre></li></ul><h1 id="awk语言"><a href="#awk语言" class="headerlink" title="awk语言"></a><strong>awk语言</strong></h1><ul><li><p>基本格式：awk [options] ‘program’ file… </p></li><li><p>Program：pattern{action statements;..} </p></li><li><p>pattern和action </p><ul><li><p>pattern部分决定动作语句何时触发及触发事件  </p><p>  BEGIN,END </p></li><li><p>action statements对数据进行处理，放在{}内指明  </p><p>  print, printf</p></li></ul></li><li><p>分割符、域和记录 </p><ul><li><p>awk执行时，由分隔符分隔的字段（域）标记$1,$2…$n称为域标识。$0 为所有域，注意：此时和shell中变量$符含义不同 </p></li><li><p>文件的每一行称为记录 </p><ul><li>省略action，则默认执行 print $0 的操作</li></ul></li></ul></li></ul><h1 id="awk工作原理"><a href="#awk工作原理" class="headerlink" title="awk工作原理"></a><strong>awk工作原理</strong></h1><ul><li><p>第一步：执行BEGIN{action;… }语句块中的语句 </p></li><li><p>第二步：从文件或标准输入(stdin)读取一行，然后执行pattern{ action;… }语句块， 它逐行扫描文件，从第一行到最后一行重复这个过程，直到文件全部被读取完毕。  </p></li><li><p>第三步：当读至输入流末尾时，执行END{action;…}语句块 </p></li><li><p>BEGIN语句块在awk开始从输入流中读取行之前被执行，这是一个可选的语句块， 比如变量初始化、打印输出表格的表头等语句通常可以写在BEGIN语句块中 </p></li><li><p>END语句块在awk从输入流中读取完所有的行之后即被执行，比如打印所有行的 分析结果这类信息汇总都是在END语句块中完成，它也是一个可选语句块  </p></li><li><p>pattern语句块中的通用命令是最重要的部分，也是可选的。如果没有提供 pattern语句块，则默认执行{ print }，即打印每一个读取到的行，awk读取的每 一行都会执行该语句块</p></li></ul><h1 id="awk要点"><a href="#awk要点" class="headerlink" title="awk要点"></a><strong>awk要点</strong></h1><ul><li><p>print格式：print item1, item2, … </p></li><li><p>要点： </p><p>  (1) 逗号分隔符 </p><p>  (2) 输出item可以字符串，也可是数值；当前记录的字段、变量或awk的表达式 </p><p>  (3) 如省略item，相当于print $0</p></li></ul><h1 id="awk变量"><a href="#awk变量" class="headerlink" title="awk变量"></a><strong>awk变量</strong></h1><ul><li><p>变量：内置和自定义变量 </p></li><li><p>FS：输入字段分隔符，默认为空白字符  </p><p>  awk -v FS&#x3D;’:’  ‘{print $1,FS,$3}’ &#x2F;etc&#x2F;passwd  </p><p>  awk  –F:   ‘{print $1,$3,$7}’   &#x2F;etc&#x2F;passwd </p></li><li><p>OFS：输出字段分隔符，默认为空白字符  </p><p>  awk  -v FS&#x3D;’:’  -v OFS&#x3D;’:’  ‘{print $1,$3,$7}’   &#x2F;etc&#x2F;passwd </p></li><li><p>RS：输入记录分隔符，指定输入时的换行符  </p><p>  awk -v RS&#x3D;’ ‘ ‘{print }’ &#x2F;etc&#x2F;passwd </p></li><li><p>ORS：输出记录分隔符，输出时用指定符号代替换行符  </p><p>  awk -v RS&#x3D;’ ‘ -v ORS&#x3D;’###’  ‘{print $0}’ &#x2F;etc&#x2F;passwd </p></li><li><p>NF：字段数量  </p><p>  awk  -F：’{print NF}’  &#x2F;etc&#x2F;fstab 引用变量时，变量前不需加$  </p><p>  awk  -F：’{print $(NF-1)}’  &#x2F;etc&#x2F;passwd </p></li><li><p>NR：记录号       </p><p>  awk ‘{print NR}’  &#x2F;etc&#x2F;fstab ; awk END ‘{print NR}’  &#x2F;etc&#x2F;fstab </p></li><li><p>FNR：各文件分别计数,记录号  </p><p>  awk ‘{print FNR}’  &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;inittab </p></li><li><p>FILENAME：当前文件名  </p><p>  awk ‘{print FILENAME}’  &#x2F;etc&#x2F;fstab </p></li><li><p>ARGC：命令行参数的个数  </p><p>  awk ‘{print ARGC}’  &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;inittab  </p><p>  awk ‘BEGIN {print ARGC}’  &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;inittab </p></li><li><p>ARGV：数组，保存的是命令行所给定的各参数  </p><p>  awk ‘BEGIN {print ARGV[0]}’  &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;inittab  </p><p>  awk ‘BEGIN {print ARGV[1]}’  &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;inittab </p></li><li><p>自定义变量(区分字符大小写)  </p><p>  (1) -v var&#x3D;value    </p><p>  (2) 在program中直接定义</p></li></ul><h1 id="printf命令"><a href="#printf命令" class="headerlink" title="printf命令"></a><strong>printf命令</strong></h1><ul><li><p>格式化输出：printf “FORMAT”, item1, item2, …  </p><p>  (1) 必须指定FORMAT  </p><p>  (2) 不会自动换行，需要显式给出换行控制符，\n  </p><p>  (3) FORMAT中需要分别为后面每个item指定格式符 </p></li><li><p>格式符：与item一一对应  </p><p>  %c：显示字符的ASCII码  </p><p>  %d, %i：显示十进制整数  </p><p>  %e, %E：显示科学计数法数值   </p><p>  %f：显示为浮点数  </p><p>  %g, %G：以科学计数法或浮点形式显示数值  </p><p>  %s：显示字符串  </p><p>  %u：无符号整数  </p><p>  %%：显示%自身 </p></li><li><p>修饰符  </p><p>  #[.#] 第一个数字控制显示的宽度；第二个#表示小数点后精度，%3.1f  </p><p>  - 左对齐（默认右对齐） %-15s </p><p>  + 显示数值的正负符号 %+d</p></li></ul><h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a><strong>操作符</strong></h1><ul><li><p>算术操作符：  </p><p>  x+y, x-y, x*y, x&#x2F;y, x^y, x%y  </p><p>  - x：转换为负数  </p><p>  + x：将字符串转换为数值 </p></li><li><p>字符串操作符：没有符号的操作符，字符串连接 </p></li><li><p>赋值操作符：  </p><p>  &#x3D;, +&#x3D;, -&#x3D;, *&#x3D;, &#x2F;&#x3D;, %&#x3D;, ^&#x3D;，++, – </p></li><li><p>比较操作符：   </p><p>  &#x3D;&#x3D;, !&#x3D;, &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D; </p></li><li><p>模式匹配符：        </p><p>  ~：左边是否和右边匹配，包含         </p><p>  !~：是否不匹配 </p></li><li><p>逻辑操作符：与&amp;&amp;，或||，非! </p></li><li><p>条件表达式（三目表达式）     </p><p>  selector?if-true-expression:if-false-expression </p><p>  • 示例：     </p><p>  awk -F: ‘{$3&gt;&#x3D;1000?usertype&#x3D;”Common User”:usertype&#x3D;”SysUser”;<br>  printf “%15s:%-s\n”,$1,usertype}’   &#x2F;etc&#x2F;passwd</p></li></ul><h1 id="awk-PATTERN"><a href="#awk-PATTERN" class="headerlink" title="awk PATTERN"></a><strong>awk PATTERN</strong></h1><ul><li><p>PATTERN:根据pattern条件，过滤匹配的行，再做处理     </p><p>  (1)如果未指定：空模式，匹配每一行     </p><p>  (2) &#x2F;regular expression&#x2F;：仅处理能够模式匹配到的行，需要用&#x2F;  &#x2F;括起来  </p><pre><code class="hljs">  awk   &#39;/^UUID/&#123;print $1&#125;&#39;     /etc/fstab      awk   &#39;!/^UUID/&#123;print $1&#125;&#39;   /etc/fstab       </code></pre><p>  (3) relational expression: 关系表达式，结果为“真”才会被处理  </p><pre><code class="hljs">  真：结果为非0值，非空字符串      假：结果为空字符串或0值  </code></pre><p>  (4) line ranges：行范围  </p><pre><code class="hljs">  startline,endline：/pat1/,/pat2/ 不支持直接给出数字格式      awk -F: ‘/^root\&gt;/,/^nobody\&gt;/&#123;print $1&#125;&#39; /etc/passwd      awk -F: ‘(NR&gt;=10&amp;&amp;NR&lt;=20)&#123;print NR,$1&#125;&#39; /etc/passwd     (5) BEGIN/END模式      BEGIN&#123;&#125;：仅在开始处理文件中的文本之前执行一次      END&#123;&#125;：仅在文本处理完成之后执行一次</code></pre></li></ul><h1 id="awk-action"><a href="#awk-action" class="headerlink" title="awk action"></a><strong>awk action</strong></h1><ul><li><p>常用的action分类 </p><p>   (1) Expressions：算术，比较表达式等 </p><p>   (2) Control statements：if, while等 </p><p>   (3) Compound statements：组合语句 </p><p>   (4) input statements </p><p>   (5) output statements：print等</p></li></ul><h1 id="awk控制语句示例"><a href="#awk控制语句示例" class="headerlink" title="awk控制语句示例"></a><strong>awk控制语句示例</strong></h1><p>{ statements;… } 组合语句 </p><p>if(condition) {statements;…}  </p><p>if(condition) {statements;…} else {statements;…} </p><p>while(conditon) {statments;…} </p><p>do {statements;…} while(condition) </p><p>for(expr1;expr2;expr3) {statements;…} </p><p>break </p><p>continue </p><p>delete array[index] </p><p>delete array </p><p>exit </p><h1 id="awk控制语句if-else"><a href="#awk控制语句if-else" class="headerlink" title="awk控制语句if-else"></a><strong>awk控制语句if-else</strong></h1><ul><li><p>语法：if(condition){statement;…}[else statement]    </p><p>  if(condition1){statement1}else if(condition2){statement2}else{statement3} </p></li><li><p>使用场景：对awk取得的整行或某个字段做条件判断 </p></li><li><p>示例： </p><p>  awk -F: ‘{if($3&gt;&#x3D;1000)print $1,$3}’ &#x2F;etc&#x2F;passwd </p><p>  awk -F: ‘{if($NF&#x3D;&#x3D;”&#x2F;bin&#x2F;bash”) print $1}’ &#x2F;etc&#x2F;passwd </p><p>  awk ‘{if(NF&gt;5) print $0}’ &#x2F;etc&#x2F;fstab </p><p>  awk -F: ‘{if($3&gt;&#x3D;1000) {printf “Common user: %s\n”,$1} else {printf “root or Sysuser: %s\n”,$1}}’ &#x2F;etc&#x2F;passwd </p><p>  awk -F: ‘{if($3&gt;&#x3D;1000) printf “Common user: %s\n”,$1; else printf “root or Sysuser: %s\n”,$1}’ &#x2F;etc&#x2F;passwd </p><p>  df -h|awk -F% ‘&#x2F;^/dev&#x2F;{print $1}’|awk ‘$NF&gt;&#x3D;80{print $1,$5}’ </p><p>  awk ‘BEGIN{ test&#x3D;100;if(test&gt;90){print “very good”}<br>  else if(test&gt;60){ print “good”}else{print “no pass”}}’</p></li></ul><h1 id="awk控制语句while"><a href="#awk控制语句while" class="headerlink" title="awk控制语句while"></a><strong>awk控制语句while</strong></h1><ul><li><p>while循环 </p></li><li><p>语法：while(condition){statement;…} </p></li><li><p>条件“真”，进入循环；条件“假”，退出循环 </p></li><li><p>使用场景：  </p><p>  对一行内的多个字段逐一类似处理时使用  </p><p>  对数组中的各元素逐一处理时使用 </p></li><li><p>示例：  </p><p>  awk ‘&#x2F;^[[:space:]]*linux16&#x2F;{i&#x3D;1;while(i&lt;&#x3D;NF)<br>  {print $i,length($i); i++}}’ &#x2F;etc&#x2F;grub2.cfg<br><br>  awk  ‘&#x2F;^[[:space:]]*linux16&#x2F;{i&#x3D;1;while(i&lt;&#x3D;NF)<br>  {if(length($i)&gt;&#x3D;10){print $i,length($i)}; i++}}’ &#x2F;etc&#x2F;grub2.cfg</p></li></ul><h1 id="awk控制语句do-while"><a href="#awk控制语句do-while" class="headerlink" title="awk控制语句do-while"></a><strong>awk控制语句do-while</strong></h1><ul><li><p>do-while循环 </p></li><li><p>语法：do {statement;…}while(condition) </p></li><li><p>意义：无论真假，至少执行一次循环体 </p></li><li><p>示例：      </p><p>  awk ‘BEGIN{ total&#x3D;0;i&#x3D;0;do{ total+&#x3D;i;i++;}while(i&lt;&#x3D;100);print total}’</p></li></ul><h1 id="awk控制语句for"><a href="#awk控制语句for" class="headerlink" title="awk控制语句for"></a><strong>awk控制语句for</strong></h1><ul><li><p>for循环 </p></li><li><p>语法：for(expr1;expr2;expr3) {statement;…} </p></li><li><p>常见用法：  </p><p>  for(variable assignment;condition;iteration process)    {for-body} </p></li><li><p>特殊用法：能够遍历数组中的元素  </p><p>  语法：for(var in array) {for-body} </p></li><li><p>示例：   </p><p>  awk ‘&#x2F;^[[:space:]]*linux16&#x2F;{for(i&#x3D;1;i&lt;&#x3D;NF;i++) {print $i,length($i)}}’ &#x2F;etc&#x2F;grub2.cfg</p></li></ul><h1 id="awk控制语句switch"><a href="#awk控制语句switch" class="headerlink" title="awk控制语句switch"></a><strong>awk控制语句switch</strong></h1><ul><li><p>switch语句 </p></li><li><p>语法：switch(expression) {case VALUE1 or &#x2F;REGEXP&#x2F;: statement1; case VALUE2 or &#x2F;REGEXP2&#x2F;: statement2; …; default: statementn} </p></li><li><p>break和continue     </p><p>  awk ‘BEGIN{sum&#x3D;0;for(i&#x3D;1;i&lt;&#x3D;100;i++)<br>  {if(i%2&#x3D;&#x3D;0)continue;sum+&#x3D;i}print sum}’<br><br>  awk ‘BEGIN{sum&#x3D;0;for(i&#x3D;1;i&lt;&#x3D;100;i++)<br>  {if(i&#x3D;&#x3D;66)break;sum+&#x3D;i}print sum}’</p></li></ul><h1 id="awk控制语句break-x2F-continue"><a href="#awk控制语句break-x2F-continue" class="headerlink" title="awk控制语句break&#x2F;continue"></a><strong>awk控制语句break&#x2F;continue</strong></h1><ul><li><p>break [n] </p></li><li><p>continue [n] </p></li><li><p>next:      </p><p>  提前结束对本行处理而直接进入下一行处理（awk自身循环）</p></li></ul><p>示例：  </p><pre><code class="hljs">    awk -F: &#39;&#123;if($3%2!=0) next; print $1,$3&#125;&#39; /etc/passwd </code></pre><h1 id="awk数组"><a href="#awk数组" class="headerlink" title="awk数组"></a><strong>awk数组</strong></h1><ul><li><p>关联数组：array[index-expression] </p></li><li><p>index-expression: </p><p>   (1) 可使用任意字符串；字符串要使用双引号括起来 </p><p>   (2) 如果某数组元素事先不存在，在引用时，awk会自动创建此元素，并将其值 初始化为“空串” </p><p>   (3) 若要判断数组中是否存在某元素，要使用“index in array”格式进行遍历 </p></li><li><p>示例： </p><p>  weekdays[“mon”]&#x3D;”Monday”  </p><p>  awk ‘BEGIN{weekdays[“mon”]&#x3D;”Monday”;weekdays[“tue”]&#x3D;”Tuesday”;  print weekdays[“mon”]}‘ </p><p>  awk ‘!line[$0]++’  dupfile </p><p>  awk ‘{!line[$0]++;print $0, line[$0]}’  dupfile </p></li><li><p>若要遍历数组中的每个元素，要使用for循环 \</p></li><li><p>for(var in array) {for-body} </p></li><li><p>注意：var会遍历array的每个索引 </p></li><li><p>示例：      </p><p>  awk ‘BEGIN{weekdays[“mon”]&#x3D;”Monday”;weekdays[“tue”]&#x3D;”Tuesday”;<br>  for(i in weekdays) {print weekdays[i]}}’<br><br>  netstat -tan | awk ‘&#x2F;^tcp&#x2F;{state[$NF]++}<br>      END{for(i in state) { print i,state[i]}}’<br><br>  awk  ‘{ip[$1]++}END{for(i in ip) {print i,ip[i]}}’   &#x2F;var&#x2F;log&#x2F;httpd&#x2F;access_log</p></li></ul><h1 id="awk函数"><a href="#awk函数" class="headerlink" title="awk函数"></a><strong>awk函数</strong></h1><ul><li><p>数值处理：  </p><p>  rand()：返回0和1之间一个随机数    </p><p>  awk  ‘BEGIN{srand(); for (i&#x3D;1;i&lt;&#x3D;10;i++)print int(rand()*100) }’  </p></li><li><p>字符串处理： </p><p>   length([s])：返回指定字符串的长度 </p><p>   sub(r,s,[t])：对t字符串搜索r表示模式匹配的内容，并将第一个匹配内容替换为s  </p><p>  echo “2008:08:08 08:08:08” | awk ‘sub(&#x2F;:&#x2F;,”-“,$1)’  </p><p>  echo “2008:08:08 08:08:08” | awk ‘{sub(&#x2F;:&#x2F;,”-“,$1);print $0}’ </p><p>   gsub(r,s,[t])：对t字符串进行搜索r表示的模式匹配的内容，并全部替换为s所表 示的内容  </p><p>  echo “2008:08:08 08:08:08” | awk ‘gsub(&#x2F;:&#x2F;,”-“,$0)’  </p><p>  echo “2008:08:08 08:08:08” | awk ‘{gsub(&#x2F;:&#x2F;,”-“,$0);print $0}’ </p><p>   split(s,array,[r])：以r为分隔符，切割字符串s，并将切割后的结果保存至array所 表示的数组中，第一个索引值为1,第二个索引值为2,…  </p><pre><code class="hljs">  netstat -tn | awk &#39;/^tcp\&gt;/&#123;split($5,ip,&quot;:&quot;);count[ip[1]]++&#125;         END&#123;for (i in count) &#123;print i,count[i]&#125;&#125;&#39; </code></pre></li><li><p>自定义函数格式：  </p><pre><code class="hljs">  function name ( parameter, parameter,  ... ) &#123;       statements                               return expression    &#125; </code></pre></li><li><p>示例：  </p><p>  cat fun.awk  </p><pre><code class="hljs">  function max(x,y) &#123;           x&gt;y?var=x:var=y               return var              &#125;              BEGIN&#123;a=3;b=2;print max(a,b)&#125;                         awk -f fun.awk</code></pre></li></ul><h1 id="awk中调用shell命令"><a href="#awk中调用shell命令" class="headerlink" title="awk中调用shell命令"></a><strong>awk中调用shell命令</strong></h1><ul><li><p>system命令 </p></li><li><p>空格是awk中的字符串连接符，如果system中需要使用awk中的变量可以使用 空格分隔，或者说除了awk的变量外其他一律用””引用起来</p><p>awk ‘BEGIN{system(“hostname”) }’   </p><p>awk ‘BEGIN{score&#x3D;100; system(“echo  your score is “ score) }’</p></li></ul><h1 id="awk脚本"><a href="#awk脚本" class="headerlink" title="awk脚本"></a><strong>awk脚本</strong></h1><ul><li><p>将awk程序写成脚本，直接调用或执行 </p></li><li><p>示例：       </p><p>  cat f1.awk  </p><pre><code class="hljs">  &#123;if($3&gt;=1000)print $1,$3&#125;            awk -F: -f f1.awk /etc/passwd</code></pre></li></ul><h1 id="向awk脚本传递参数"><a href="#向awk脚本传递参数" class="headerlink" title="向awk脚本传递参数"></a><strong>向awk脚本传递参数</strong></h1><ul><li><p>格式：  </p><p>  awkfile  var&#x3D;value var2&#x3D;value2… Inputfile </p></li><li><p>注意：在BEGIN过程中不可用。直到首行输入完成以后，变量才可用。可以通 过-v 参数，让awk在执行BEGIN之前得到变量的值。命令行中每一个指定的变 量都需要一个-v参数 </p></li><li><p>示例：  </p><p>  cat  test.awk       </p><p>  #!&#x2F;bin&#x2F;awk –f    </p><p>  {if($3 &gt;&#x3D;min &amp;&amp; $3&lt;&#x3D;max)print $1,$3}   </p><p>  chmod +x test.awk  </p><p>  test.awk -F: min&#x3D;100 max&#x3D;200  &#x2F;etc&#x2F;passwd</p></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>awk</category>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>awk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bash变量</title>
    <link href="/2022/10/21/bash/"/>
    <url>/2022/10/21/bash/</url>
    
    <content type="html"><![CDATA[<h1 id="bashrc-x2F-vimrc"><a href="#bashrc-x2F-vimrc" class="headerlink" title="bashrc&#x2F;vimrc"></a>bashrc&#x2F;vimrc</h1><p>*d&#x3D;”hitokoto”&gt;获取中…</p></p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><h2 id="vim-root-vimrc"><a href="#vim-root-vimrc" class="headerlink" title="vim /root/.vimrc*"></a><em><code>vim /root/.vimrc</code></em>*<br><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs `bash">set ignorecase<br>set cursorline<br>set autoindent<br>autocmd BufNewFile *.sh exec &quot;:call SetTitle()&quot;<br>func SetTitle()<br>if expand(&quot;%:e&quot;) == &#x27;sh&#x27;<br>call setline(1,&quot;#!/bin/bash&quot;)<br>call setline(2,&quot;###########################################&quot;)<br>call setline(3,&quot;#Author: Mxxxxxia                         ##&quot;)<br>call setline(4,&quot;#QQ： 1xxxxxxx59                          #####&quot;)<br>call setline(5,&quot;#Date： &quot;.strftime(&quot;%Y-%m-%d               &quot;))<br>call setline(6,&quot;#Mage Education:   Mxxxxxxxxx             ###############&quot;)<br>call setline(7,&quot;#FileName： &quot;.expand(&quot;%&quot;))<br>call setline(8,&quot;#URL： https://Mtdia.github.io            #####&quot;)<br>call setline(9,&quot;#Description： The test script            ##&quot;)<br>call setline(10,&quot;###########################################&quot;)<br>call setline(11,&quot;&quot;)<br>endif<br>endfunc<br>autocmd BufNewFile * normal G<br><br>set hlsearch                    &quot;文本文件中 vim 搜索关键词高亮显示<br>set clipboard=unnamed           &quot; 设置vim中默认使用选择缓冲区寄存器,y复制,p粘贴<br>set pastetoggle=&lt;F1&gt;        &quot; 斩杀复制粘贴时产生的恶心的缩进<br>set ai                          &quot; 自动缩进，新行与前面的行保持—致的自动空格<br>set cursorline                  &quot; 显示光标行<br>set aw                          &quot; 自动写，转入shell或使用：n编辑其他文件时，当前的缓冲区被写入<br>set flash                       &quot; 在出错处闪烁但不呜叫(缺省)<br>set ic                          &quot; 在查询及模式匹配时忽赂大小写<br>set number                      &quot; 屏幕左边显示行号<br>set showmatch                   &quot; 显示括号配对，当键入“]”“)”时，高亮度显示匹配的括号<br>set showmode                    &quot; 处于文本输入方式时加亮按钮条中的模式指示器<br>set warn                        &quot; 对文本进行了新的修改后，离开shell时系统给出显示(缺省)<br>set ws                          &quot; 在搜索时如到达文件尾则绕回文件头继续搜索<br>set wrap                        &quot; 长行显示自动折行<br>colorscheme evening             &quot; 设定背景为夜间模式<br>filetype plugin on              &quot; 自动识别文件类型，自动匹配对应的, “文件类型Plugin.vim”文件，使用缩进定义文件<br>set autoindent                  &quot; 设置自动缩进：即每行的缩进值与上一行相等；使用 noautoindent 取消设置<br>set cindent                     &quot; 以C/C++的模式缩进<br>set noignorecase                &quot; 默认区分大小写<br>set ruler                       &quot; 打开状态栏标尺<br>set scrolloff=5                 &quot; 设定光标离窗口上下边界 5 行时窗口自动滚动<br>set shiftwidth=4                &quot; 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4<br>set softtabstop=4               &quot; 使得按退格键时可以一次删掉 4 个空格,不足 4 个时删掉所有剩下的空格）<br>set tabstop=4                   &quot; 设定 tab 长度为 4<br>set wrap                        &quot; 自动换行显示<br>syntax enable<br>syntax on                       &quot; 自动语法高亮<br>set autoindent                  &quot;自动对齐<br>set smartindent                 &quot;智能对齐<br>set mouse=a                     &quot;使用鼠标<br>&quot;set mouse=v                    &quot;使用鼠标选定复制<br>&quot;inoremap ( ()&lt;ESC&gt;i            &quot;括号自动补齐&quot;&gt;<br>&quot;inoremap [ []&lt;ESC&gt;i<br>&quot;inoremap &#123; &#123;&#125;&lt;ESC&gt;i<br>&quot;inoremap &lt; &lt;&gt;&lt;ESC&gt;i<br></code></pre></td></tr></table></figure>    </div></div></h2><p><strong><code>vim /root/.bashrc</code></strong></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> lll=<span class="hljs-string">&#x27;ls -lAFhi&#x27;</span><br><span class="hljs-built_in">alias</span> ll=<span class="hljs-string">&#x27;ls -lAFh&#x27;</span><br><span class="hljs-built_in">alias</span> l=<span class="hljs-string">&#x27;ls -aF&#x27;</span><br><span class="hljs-built_in">alias</span> ld=<span class="hljs-string">&#x27;ls -ldh&#x27;</span><br><span class="hljs-built_in">alias</span> la=<span class="hljs-string">&#x27;ls -A&#x27;</span><br><span class="hljs-built_in">alias</span> cdd=<span class="hljs-string">&#x27;cd /data/&#x27;</span><br><span class="hljs-built_in">alias</span> cde=<span class="hljs-string">&#x27;cd /etc/&#x27;</span><br><span class="hljs-built_in">alias</span> cdh=<span class="hljs-string">&#x27;cd /home/&#x27;</span><br><br><span class="hljs-built_in">alias</span> c=clear<br><span class="hljs-built_in">alias</span> d=<span class="hljs-string">&#x27;date +%F/%X&#x27;</span><br>HISTTIMEFORMAT=<span class="hljs-string">&#x27;%F %T  &lt;====&gt;  &#x27;</span><br>HISTIGNORE=<span class="hljs-string">&#x27;ignoredups,ignorespace&#x27;</span><br><span class="hljs-comment"># PS1=&#x27;\[\e[36;40m\][\u@\h \W]\$\e[m &#x27;  </span><br><br><span class="hljs-comment"># PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;31;1m\]\u\[\033[00;33;1m\]@\[\033[01;34;1m\]\h\[\033[00;33;1m\]:\[\033[00;32;1m\]\w \[\033[01;36;1m\]\$ \[\033[0;35;1m\]&#x27; </span><br><br><span class="hljs-comment"># PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[0;35;1m\][\[\033[01;31;1m\]\u\[\033[00;33;1m\]@\[\033[01;34;1m\]\h\[\033[00;33;1m\]: \[\033[00;32;1m\]\w\[\033[0;35;1m\]]\033[01;36;1m\]\$ \[\033[0;35;3m\]&#x27;</span><br><br>PS1=<span class="hljs-string">&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[0;35;1m\]&#123;\[\033[01;31;1m\]\u\[\033[00;33;1m\]@\[\033[01;34;1m\]\h\[\033[00;33;1m\]: \[\    033[00;32;1m\]\w \[\033[01;39;1m\]\A \[\033[0;35;1m\]&#125;\[\033[01;36;1m\]\$ \[\033[01;36;1m\]==&gt; \[\033[0;35;0m\]&#x27;</span><br><span class="hljs-comment">#PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[0;35;1m\][\[\033[01;31;1m\]\u\[\033[00;33;1m\]@\[\033[01;34;1m\]\h\[\033[00;33;1m\]: \[\033[00;32;1m\]\w \[\033[01;39;1m\]\A \[\033[0;35;1m\]]\[\033[01;36;1m\]\$ \[\033[01;36;1m\]==&gt; \[\033[0;35;0m\]&#x27;</span><br></code></pre></td></tr></table></figure>    </div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">使文件生效<br>退出vim后，输入：<span class="hljs-built_in">source</span> ~/.bashrc 或者 . ~./bashrc<br></code></pre></td></tr></table></figure><hr><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs html">颜色代码:<br>字背景颜色: 40–49 字体颜色: 30—39<br>40: 黑 　　　　　　 30: 黑<br>41: 红 　　　　　　 31: 红<br>42: 绿 　　　　　　 32: 绿<br>43: 黄 　　　　　　 33: 黄<br>44: 蓝 　　　　　　 34: 蓝<br>45: 紫 　　　　　　 35: 紫<br>46: 深绿 　　　　　　 36: 深绿<br>47: 白色 　　　　　　 37: 白色<br><br>ANSI控制码:<br>\033[0m 关闭所有属性<br>\033[1m 设置高亮度<br>\033[3m 斜体字符<br>\033[4m 下划线<br>\033[5m 闪烁<br>\033[7m 反显<br>\033[8m 消隐<br>\033[30m – \033[37m 设置前景色<br>\033[40m – \033[47m 设置背景色<br>\033[nA 光标上移n行<br>\03[nB 光标下移n行<br>\033[nC 光标右移n行<br>\033[nD 光标左移n行<br><br>默认的特殊符号所代表的意义：<br>\d ：代表日期，格式为weekday month date，例如：“Mon Aug 1”<br>\H ：完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux<br>\h ：仅取主机的第一个名字，如上例，则为fc4，.linux则被省略<br>\t ：显示时间为24小时格式，如：HH：MM：SS<br>\T ：显示时间为12小时格式<br>\A ：显示时间为24小时格式：HH：MM<br>\u ：当前用户的账号名称<br>\v ：BASH的版本信息<br>\w ：完整的工作目录名称。家目录会以 ~代替<br>\W ：利用basename取得工作目录名称，所以只会列出最后一个目录<br># ：下达的第几个命令<br>$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$<br><br>echo -e &quot;\033[32m输出绿色字符串\033[0m&quot;<br>echo -e &quot;\033[43;35m输出黄色背景绿色字符串\033[0m&quot;<br>echo -e &quot;\033[1;43;35m输出高亮黄色背景绿色字符串\033[0m&quot;<br>echo -e &quot;\033[5;43;35m输出闪烁黄色背景绿色字符串\033[0m&quot;<br></code></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>bash</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>bash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 函数</title>
    <link href="/2022/10/21/function/"/>
    <url>/2022/10/21/function/</url>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a><strong>函数</strong></h1><p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><h2 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a><strong>函数</strong></h2><ul><li><p><code>函数由两部分组成 ：函数名和函数体</code></p></li><li><p><strong>格式</strong> ：</p><ul><li>语法一 ：</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-function"><span class="hljs-title">f_name</span></span> ()&#123;<br>...函数体...<br>&#125;<br></code></pre></td></tr></table></figure><pre><code class="hljs">* 语法二 ：</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> f_name &#123;<br>    ...函数体...<br>&#125;<br></code></pre></td></tr></table></figure><pre><code class="hljs">* 语法三 ：</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">f_name</span></span>()&#123;<br>    ...函数体...<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>函数function是由若干条shell命令组成的语句块，实现代码重用和模块化编程</p></li><li><p>函数function并不是一个单独的进程，不能独立运行；它是shell程序的一部分</p></li><li><p>函数与shell程序的区别 ：</p><ul><li>shell程序在子shell中运行</li><li>函数在当前shell中运行</li></ul></li><li><p>删除shell函数 ：unset function_name</p></li></ul><p><strong>示例</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#切换至etc目录</span><br>    [root@CentOS7 data]<span class="hljs-comment"># fk()&#123;</span><br>    &gt; <span class="hljs-built_in">cd</span> /etc<br>    &gt; &#125;<br>    [root@CentOS7 data]<span class="hljs-comment"># fk</span><br>    [root@CentOS7 etc]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#删除该函数</span><br><span class="hljs-comment">#或者用户退出系统后，自动删除</span><br>    [root@CentOS7 etc]<span class="hljs-comment"># unset fk</span><br>    [root@CentOS7 etc]<span class="hljs-comment"># fk</span><br>    bash: fk: <span class="hljs-built_in">command</span> not found...<br>    Similar <span class="hljs-built_in">command</span> is: <span class="hljs-string">&#x27;fc&#x27;</span><br>    [root@CentOS7 etc]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>在脚本中定义及使用函数</strong></p><ul><li>函数在使用前必须定义，因此应将函数定义放在脚本开始部分，直至shell首次发现它后才能使用</li><li>调用函数仅使用其函数名即可</li></ul><p><strong>使用函数检查磁盘最大使用率</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS7 etc]<span class="hljs-comment"># vim max_disk.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment"># Maximum disk occupancy </span><br><span class="hljs-function"><span class="hljs-title">maxdf</span></span>()<br>&#123;<br><span class="hljs-built_in">echo</span> `<span class="hljs-built_in">df</span> -h |grep <span class="hljs-string">&quot;^/dev/sd&quot;</span>|<span class="hljs-built_in">tr</span> -s <span class="hljs-string">&quot; &quot;</span> |<span class="hljs-built_in">cut</span> -d<span class="hljs-string">&quot; &quot;</span> -f5 |<span class="hljs-built_in">sort</span> -n |<span class="hljs-built_in">cut</span> -d<span class="hljs-string">&quot;%&quot;</span> -f1 |<span class="hljs-built_in">tail</span> -1`<br>&#125;<br>    <span class="hljs-built_in">echo</span> Maxdf=`maxdf`<br><br><span class="hljs-comment">#运行脚本</span><br>[root@CentOS7 etc]<span class="hljs-comment"># sh max_disk.sh </span><br>Maxdf=17<br></code></pre></td></tr></table></figure><ul><li>使子进程也可使用 ：<ul><li><code>声明</code>：export -f function_name</li><li><code>查看 </code>：export -f 或 declare -xf</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS7 ~]<span class="hljs-comment"># go()&#123;     #创建一个函数</span><br>&gt; <span class="hljs-built_in">cd</span> /data/scripts/<br>&gt; <span class="hljs-built_in">ls</span><br>&gt; \<span class="hljs-built_in">rm</span> *<br>&gt; <span class="hljs-built_in">touch</span> firstfun<br>&gt; <span class="hljs-built_in">echo</span> &#123;1..9&#125; &gt; firstfun<br>&gt; &#125;<br><br>[root@CentOS7 ~]<span class="hljs-comment"># export -f go  #声明该函数在其子进程依旧有效</span><br><br>[root@CentOS7 ~]<span class="hljs-comment"># export -f     #查看函数</span><br><span class="hljs-function"><span class="hljs-title">go</span></span> () <br>&#123; <br>    <span class="hljs-built_in">cd</span> /data/scripts/;<br>    <span class="hljs-built_in">ls</span> --color=auto;<br>    \<span class="hljs-built_in">rm</span> *;<br>    <span class="hljs-built_in">touch</span> firstfun;<br>    <span class="hljs-built_in">echo</span> &#123;1..9&#125; &gt; firstfun<br>&#125;<br><span class="hljs-built_in">declare</span> -fx go<br><br>[root@CentOS7 ~]<span class="hljs-comment"># go    #执行一次该函数</span><br>f1.apk  f2.apk  f3.apk  f4.apk  f5.apk  f6.apk  f7.apk  f8.apk  f9.apk<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># ls</span><br>firstfun<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># cat firstfun </span><br>1 2 3 4 5 6 7 8 9<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># unset go    #删除该函数</span><br><br>[root@CentOS7 scripts]<span class="hljs-comment"># export -f   #重新查看该函数</span><br><br>[root@CentOS7 scripts]<span class="hljs-comment"># go      #重新执行该函数</span><br>bash: go: <span class="hljs-built_in">command</span> not found...<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># export -f go    #重新声明该函数</span><br>-bash: <span class="hljs-built_in">export</span>: go: not a <span class="hljs-keyword">function</span><br></code></pre></td></tr></table></figure><ul><li><strong>或者</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS7 scripts]<span class="hljs-comment"># hello()&#123;</span><br>&gt; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello,are you ok?&quot;</span><br>&gt; &#125;<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># vim hello_fun.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-function"><span class="hljs-title">haha</span></span>()&#123;<br>hello<br>&#125;<br><span class="hljs-built_in">echo</span> `haha`<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># export -f hello</span><br><br><span class="hljs-comment">#运行脚本</span><br>[root@CentOS7 scripts]<span class="hljs-comment"># sh hello_fun.sh</span><br>hello,are you ok?<br></code></pre></td></tr></table></figure><ul><li><strong>又或者</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS7 scripts]<span class="hljs-comment"># vim one.sh </span><br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-function"><span class="hljs-title">one</span></span> ()<br>&#123;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;let&#x27;s go to play computer?&quot;</span><br>&#125;<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># vim two.sh </span><br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-function"><span class="hljs-title">two</span></span> ()<br>&#123;<br>one<br>three<br>&#125;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`two`&quot;</span>    <span class="hljs-comment">#添加&quot; &quot;可保留原有格式，而非打印在同一行</span><br><br>[root@CentOS7 scripts]<span class="hljs-comment"># vim three.sh</span><br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-function"><span class="hljs-title">three</span></span> ()<br>&#123;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;That&#x27;s good idea.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>若未执行 export -f function_name 则会出现 ：</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#运行脚本</span><br>[root@CentOS7 scripts]<span class="hljs-comment"># sh two.sh </span><br>two.sh: line 3: one: <span class="hljs-built_in">command</span> not found<br>two.sh: line 4: three: <span class="hljs-built_in">command</span> not found<br><br>[root@CentOS7 scripts]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><ul><li><strong>所以</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@CentOS7 scripts]<span class="hljs-comment"># . one.sh </span><br>[root@CentOS7 scripts]<span class="hljs-comment"># . three.sh</span><br>[root@CentOS7 scripts]<span class="hljs-comment"># export -f one</span><br>[root@CentOS7 scripts]<span class="hljs-comment"># export -f three</span><br><br><span class="hljs-comment">#运行脚本</span><br>[root@CentOS7 scripts]<span class="hljs-comment"># sh two.sh </span><br><span class="hljs-built_in">let</span><span class="hljs-string">&#x27;s go to play computer?</span><br><span class="hljs-string">That&#x27;</span>s good idea.<br></code></pre></td></tr></table></figure><ul><li><strong>批量创建用户</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#准备用户名单</span><br>[root@CentOS7 data]<span class="hljs-comment"># vim name.txt </span><br>lisuo<br>laowang<br><br>[root@CentOS7 data]<span class="hljs-comment"># vim batch_user2.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>. /etc/init.d/functions<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&#x27;-c&#x27;</span> ];<span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">for</span> USER <span class="hljs-keyword">in</span> `<span class="hljs-built_in">cat</span> /data/name.txt`;<span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">id</span> <span class="hljs-variable">$USER</span> &amp;&gt; /dev/null;<span class="hljs-keyword">then</span><br>action <span class="hljs-string">&quot;<span class="hljs-variable">$USER</span> is exist.&quot;</span> <span class="hljs-literal">false</span><br><span class="hljs-keyword">else</span><br>useradd <span class="hljs-variable">$USER</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-variable">$USER</span> | passwd --stdin <span class="hljs-variable">$USER</span> &amp;&gt; /dev/null<br>action <span class="hljs-string">&quot;<span class="hljs-variable">$USER</span> is created.&quot;</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br>        <span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&#x27;-r&#x27;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-keyword">for</span> USER <span class="hljs-keyword">in</span> `<span class="hljs-built_in">cat</span> /data/name.txt`;<span class="hljs-keyword">do</span><br>userdel -r <span class="hljs-variable">$USER</span> &amp;&gt; /dev/null<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$USER</span> is removed.&quot;</span><br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage: `basename <span class="hljs-variable">$0</span>` -c |-r &quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#运行脚本</span><br>[root@CentOS7 data]<span class="hljs-comment"># sh batch_user2.sh -r</span><br>lisuo is removed.<br>laowang is removed.<br><br><span class="hljs-comment">#运行脚本</span><br>[root@CentOS7 data]<span class="hljs-comment"># sh batch_user2.sh -c</span><br>lisuo is created.                                          [  OK  ]<br>laowang is created.                                        [  OK  ]<br>[root@CentOS7 data]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#查看执行脚本后是否成功创建用户</span><br>[root@CentOS7 data]<span class="hljs-comment"># cat /etc/passwd</span><br>....................................<br>lisuo:x:1002:1002::/home/lisuo:/bin/bash<br>laowang:x:1009:1009::/home/laowang:/bin/bash<br></code></pre></td></tr></table></figure><hr><p><strong>在centos中，函数保存在 <code>/etc/init.d/functions</code> 中，在脚本中<code>调用某函数之前</code></strong><br><strong>需要进行其<code>声明</code>，否则无法正常调用；系统中除了内置函数之外，用户也也可以编写函数、声明函数、调用函数；</strong></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#过滤搜索action函数关键词与其之后10行显示</span><br>[root@C7-3 data]<span class="hljs-comment"># grep -A10 &quot;^action&quot; /etc/init.d/functions </span><br><span class="hljs-function"><span class="hljs-title">action</span></span>() &#123;<br>    <span class="hljs-built_in">local</span> STRING rc<br><br>    STRING=<span class="hljs-variable">$1</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$STRING</span> &quot;</span><br>    <span class="hljs-built_in">shift</span><br>    <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span> &amp;&amp; success $<span class="hljs-string">&quot;<span class="hljs-variable">$STRING</span>&quot;</span> || failure $<span class="hljs-string">&quot;<span class="hljs-variable">$STRING</span>&quot;</span><br>    rc=$?<br>    <span class="hljs-built_in">echo</span><br>    <span class="hljs-built_in">return</span> <span class="hljs-variable">$rc</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#删除函数</span><br><span class="hljs-built_in">unset</span> function_name<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@C7-3 data]<span class="hljs-comment"># cat test.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>. /etc/init.d/functions    <span class="hljs-comment">#声明函数</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> = 0 ];<span class="hljs-keyword">then</span>         <span class="hljs-comment">#$1为脚本名后输入的第一个参数</span><br>action <span class="hljs-string">&quot;<span class="hljs-variable">$1</span> is good!&quot;</span> <span class="hljs-literal">true</span>  <span class="hljs-comment">#调用action 打印结果</span><br><span class="hljs-keyword">else</span><br>action <span class="hljs-string">&quot;<span class="hljs-variable">$1</span> is bad!&quot;</span> <span class="hljs-literal">false</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@C7-3 data]<span class="hljs-comment"># bash test.sh 0</span><br>0 is good!                                                 [  OK  ]<br>[root@C7-3 data]<span class="hljs-comment"># bash test.sh 1</span><br>1 is bad!                                                  [FAILED]<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200620115608308.png"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu安装</title>
    <link href="/2022/10/20/ubuntu-install/"/>
    <url>/2022/10/20/ubuntu-install/</url>
    
    <content type="html"><![CDATA[<p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><p>@[toc]</p><p><strong>Ubuntu 1804-server 下载</strong><br><img src="https://img-blog.csdnimg.cn/20191228083326655.png"></p><p><strong>Ubuntu 1904-server 下载</strong><br><img src="https://img-blog.csdnimg.cn/20191228083350180.png"></p><p><a href="http://cdimage.ubuntu.com/releases/">ubuntu server(服务器版)</a>  </p><p><a href="http://releases.ubuntu.com/">ubuntu desktop(桌⾯版)</a></p><p><a href="https://pan.baidu.com/s/1ll8Y7oAUKoeTf3xHY450LA">vmware workstations15下载链接 提取码: bnih</a></p><h2 id="安装步骤-开始-："><a href="#安装步骤-开始-：" class="headerlink" title="安装步骤(开始)："></a>安装步骤(开始)：</h2><p>1<br><img src="https://img-blog.csdnimg.cn/20191228084311521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>2<br><img src="https://img-blog.csdnimg.cn/20191228084320970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>3<br><img src="https://img-blog.csdnimg.cn/20191228084323397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>4<br><img src="https://img-blog.csdnimg.cn/201912280843381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>5<br><img src="https://img-blog.csdnimg.cn/20191228084347637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>6<br><img src="https://img-blog.csdnimg.cn/20191228084354151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>7<br><img src="https://img-blog.csdnimg.cn/2019122808440570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>8<br><img src="https://img-blog.csdnimg.cn/20191228084413157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>9<br><img src="https://img-blog.csdnimg.cn/20191228084419596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>10<br><img src="https://img-blog.csdnimg.cn/20191228084438224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>11<br><img src="https://img-blog.csdnimg.cn/20191228084446623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>12<br><img src="https://img-blog.csdnimg.cn/20191228084454135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>13<br><img src="https://img-blog.csdnimg.cn/20191228084501855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>14<br><img src="https://img-blog.csdnimg.cn/20191228084514110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>15<br><img src="https://img-blog.csdnimg.cn/20191228084520361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>16<br><img src="https://img-blog.csdnimg.cn/20191228084530290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>17<br><img src="https://img-blog.csdnimg.cn/20191228084543748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>18<br><img src="https://img-blog.csdnimg.cn/20191228084551166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>19<br><img src="https://img-blog.csdnimg.cn/20191228084600736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>20<br><img src="https://img-blog.csdnimg.cn/20191228084603927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>21<br><img src="https://img-blog.csdnimg.cn/20191228084615839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>22<br><img src="https://img-blog.csdnimg.cn/20191228084623971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>23<br><img src="https://img-blog.csdnimg.cn/20191228084631432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>24<br><img src="https://img-blog.csdnimg.cn/20191228084633648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>25<br><img src="https://img-blog.csdnimg.cn/20191228084649953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>26<br><img src="https://img-blog.csdnimg.cn/2019122808465951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>27<br><img src="https://img-blog.csdnimg.cn/20191228084712172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>28<br><img src="https://img-blog.csdnimg.cn/20191228084723918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>29<br><img src="https://img-blog.csdnimg.cn/20191228084732301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>30<br><img src="https://img-blog.csdnimg.cn/20191228084740309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>31<br><img src="https://img-blog.csdnimg.cn/20191228084748146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>32<br><img src="https://img-blog.csdnimg.cn/201912280847551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>33<br><img src="https://img-blog.csdnimg.cn/20191228084805287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>34<br><img src="https://img-blog.csdnimg.cn/20191228084816399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>35<br><img src="https://img-blog.csdnimg.cn/20191228084822942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>36<br><img src="https://img-blog.csdnimg.cn/20191228084833129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>37<br><img src="https://img-blog.csdnimg.cn/20191228084841495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>38<br><img src="https://img-blog.csdnimg.cn/20191228084846620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>39<br><img src="https://img-blog.csdnimg.cn/20191228084901330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>40<br><img src="https://img-blog.csdnimg.cn/20191228084907900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>41<br><img src="https://img-blog.csdnimg.cn/20191228084916639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>42<br><img src="https://img-blog.csdnimg.cn/20191228084929924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>43<br><img src="https://img-blog.csdnimg.cn/20191228084936704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>44<br><img src="https://img-blog.csdnimg.cn/20191228084943893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>45<br><img src="https://img-blog.csdnimg.cn/2019122808495182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70"><br>46</p><h2 id="安装步骤-结束-："><a href="#安装步骤-结束-：" class="headerlink" title="安装步骤(结束)："></a>安装步骤(结束)：</h2><p>#重启虚拟机<br>#基础配置</p><p>student@U:~$ sudo -i<br>sudo: unable to resolve host U<br>[sudo] password for td:<br>[root@U ~]# </p><hr><p>[root@U ~]# echo ‘127.0.0.1 U8’ &gt;&gt; &#x2F;etc&#x2F;hosts<br>[root@U ~]# echo ‘U8’ &gt; &#x2F;etc&#x2F;hostname</p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@U8 ~]<span class="hljs-comment"># vim /root/.bashrc</span><br><span class="hljs-comment">#追加以下内容</span><br><span class="hljs-comment">################# Custom Alias ############</span><br><span class="hljs-built_in">alias</span> c=clear<br><span class="hljs-built_in">alias</span> d=<span class="hljs-string">&#x27;date +%F/%X&#x27;</span><br>HISTTIMEFORMAT=<span class="hljs-string">&#x27;%F %T  &lt;====&gt;  &#x27;</span><br>HISTIGNORE=<span class="hljs-string">&#x27;ignoredups,ignorespace&#x27;</span><br>PS1=<span class="hljs-string">&#x27;\[\e[36;40m\][\u@\h \W]\$\e[m &#x27;</span> <br></code></pre></td></tr></table></figure><p>[root@U8 ~]# . &#x2F;root&#x2F;.bashrc </p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@U8 ~]<span class="hljs-comment"># vim /root/.vimrc </span><br><span class="hljs-built_in">set</span> ignorecase<br><span class="hljs-built_in">set</span> cursorline                                                                                    <br><span class="hljs-built_in">set</span> autoindent<br>autocmd BufNewFile *.sh <span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;:call SetTitle()&quot;</span>                                                           <br>func SetTitle()<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&#x27;sh&#x27;</span><br>call setline(1,<span class="hljs-string">&quot;#!/bin/bash&quot;</span>)<br>call setline(2,<span class="hljs-string">&quot;###########################################&quot;</span>)<br>call setline(5,<span class="hljs-string">&quot;#Date： &quot;</span>.strftime(<span class="hljs-string">&quot;%Y-%m-%d               &quot;</span>))<br>call setline(6,<span class="hljs-string">&quot;#************:   *********             ###############&quot;</span>)<br>call setline(7,<span class="hljs-string">&quot;#FileName： &quot;</span>.<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%&quot;</span>))<br>call setline(10,<span class="hljs-string">&quot;###########################################&quot;</span>)<br>call setline(11,<span class="hljs-string">&quot;&quot;</span>)<br>endif<br>endfunc<br>autocmd BufNewFile * normal G<br><br><span class="hljs-comment">#######更便利的使用 vim #####若不想使用某功能即在该行首加 &quot; 即可#########</span><br><span class="hljs-built_in">set</span> clipboard=unnamed           <span class="hljs-string">&quot; 设置vim中默认使用选择缓冲区寄存器,y复制,p粘贴</span><br><span class="hljs-string">set pastetoggle=&lt;F1&gt;        &quot;</span> 斩杀复制粘贴时产生的恶心的缩进<br><span class="hljs-built_in">set</span> ai                          <span class="hljs-string">&quot; 自动缩进，新行与前面的行保持—致的自动空格</span><br><span class="hljs-string">set cursorline                  &quot;</span> 显示光标行<br><span class="hljs-built_in">set</span> aw                          <span class="hljs-string">&quot; 自动写，转入shell或使用：n编辑其他文件时，当前的缓冲区被写入</span><br><span class="hljs-string">set flash                       &quot;</span> 在出错处闪烁但不呜叫(缺省)<br><span class="hljs-built_in">set</span> ic                          <span class="hljs-string">&quot; 在查询及模式匹配时忽赂大小写</span><br><span class="hljs-string">&quot;</span><span class="hljs-built_in">set</span> number                      <span class="hljs-string">&quot; 屏幕左边显示行号</span><br><span class="hljs-string">set showmatch                   &quot;</span> 显示括号配对，当键入“]”“)”时，高亮度显示匹配的括号<br><span class="hljs-built_in">set</span> showmode                    <span class="hljs-string">&quot; 处于文本输入方式时加亮按钮条中的模式指示器</span><br><span class="hljs-string">set warn                        &quot;</span> 对文本进行了新的修改后，离开shell时系统给出显示(缺省)<br><span class="hljs-built_in">set</span> ws                          <span class="hljs-string">&quot; 在搜索时如到达文件尾则绕回文件头继续搜索</span><br><span class="hljs-string">set wrap                        &quot;</span> 长行显示自动折行<br>colorscheme evening             <span class="hljs-string">&quot; 设定背景为夜间模式</span><br><span class="hljs-string">filetype plugin on              &quot;</span> 自动识别文件类型，自动匹配对应的, “文件类型Plugin.vim”文件，使用缩进定义文件<br><span class="hljs-built_in">set</span> autoindent                  <span class="hljs-string">&quot; 设置自动缩进：即每行的缩进值与上一行相等；使用 noautoindent 取消设置</span><br><span class="hljs-string">set cindent                     &quot;</span> 以C/C++的模式缩进<br><span class="hljs-built_in">set</span> noignorecase                <span class="hljs-string">&quot; 默认区分大小写</span><br><span class="hljs-string">set ruler                       &quot;</span> 打开状态栏标尺<br><span class="hljs-built_in">set</span> scrolloff=5                 <span class="hljs-string">&quot; 设定光标离窗口上下边界 5 行时窗口自动滚动</span><br><span class="hljs-string">set shiftwidth=4                &quot;</span> 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4<br><span class="hljs-built_in">set</span> softtabstop=4               <span class="hljs-string">&quot; 使得按退格键时可以一次删掉 4 个空格,不足 4 个时删掉所有剩下的空格）</span><br><span class="hljs-string">set tabstop=4                   &quot;</span> 设定 tab 长度为 4<br><span class="hljs-built_in">set</span> wrap                        <span class="hljs-string">&quot; 自动换行显示</span><br><span class="hljs-string">syntax enable</span><br><span class="hljs-string">syntax on                       &quot;</span> 自动语法高亮<br><span class="hljs-built_in">set</span> autoindent                  <span class="hljs-string">&quot;自动对齐</span><br><span class="hljs-string">set smartindent                 &quot;</span>智能对齐<br><span class="hljs-string">&quot;set mouse=a                     &quot;</span>使用鼠标<br><span class="hljs-string">&quot;set mouse=v                    &quot;</span>使用鼠标选定复制<br><span class="hljs-string">&quot;inoremap ( ()&lt;ESC&gt;i            &quot;</span>括号自动补齐<span class="hljs-string">&quot;&gt;</span><br><span class="hljs-string">&quot;</span>inoremap [ []&lt;ESC&gt;i<br><span class="hljs-string">&quot;inoremap &#123; &#123;&#125;&lt;ESC&gt;i</span><br><span class="hljs-string">&quot;</span>inoremap &lt; &lt;&gt;&lt;ESC&gt;i<br></code></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改网卡名称为eth0</span><br>[root@U9 ~]<span class="hljs-comment"># vim /etc/default/grub</span><br>GRUB_DEFAULT=0<br>GRUB_TIMEOUT_STYLE=hidden<br>GRUB_TIMEOUT=2<br>GRUB_DISTRIBUTOR=\`lsb_release -i -s 2&gt; /dev/null || <span class="hljs-built_in">echo</span> Debian`<br>GRUB_CMDLINE_LINUX_DEFAULT=<span class="hljs-string">&quot;&quot;</span><br>GRUB_CMDLINE_LINUX=<span class="hljs-string">&quot;net.ifnames=0 biosdevname=0&quot;</span><br></code></pre></td></tr></table></figure><p>[root@U9 ~]# update-grub<br>Sourcing file <code>/etc/default/grub&#39; Sourcing file </code>&#x2F;etc&#x2F;default&#x2F;grub.d&#x2F;init-select.cfg’<br>Generating grub configuration file …<br>Found linux image: &#x2F;boot&#x2F;vmlinuz-5.0.0-13-generic<br>Found initrd image: &#x2F;boot&#x2F;initrd.img-5.0.0-13-generic<br>done</p><p>#修改静态IP（空格有严格要求）：<br>[root@U ~]# vim &#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#内容如下：</span><br>network:<br>  version: 2<br>  renderer: networkd<br>  ethernets:<br>    eth0:<br>      addresses: [192.168.124.7/24]<br>      gateway4: 192.168.124.10<br>      dhcp4: no<br>      nameservers:<br>       addresses: [8.8.8.8]<br></code></pre></td></tr></table></figure><p>#使用vim编辑文件时，可使用该命令阻止递进<br>:set paste</p><p>[root@U ~]# netplan apply<br>[root@U ~]# ping <a href="http://www.baidu.com/">www.baidu.com</a><br>测试能否ping通外部网络；若通即完成</p><hr><p>Ubuntu无法使用xshell连接如何操作：<br>[root@U ~]# apt install openssh-server<br>[root@U ~]# service ssh start</p><hr><p>Ubuntu无法使用scp传输文件如何操作：<br>[root@U ~]# vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config<br>PermitRootLogin yes</p><hr><p>Ubuntu无法使用root在Xshell直接登录如何操作：<br>[root@U ~]# vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config<br>#追加此行</p><p>PasswordAuthentication yes</p><hr><p>一定要记得修改文件后，重启服务</p><p>#重启服务<br>[root@U ~]# &#x2F;etc&#x2F;init.d&#x2F;ssh restart<br>[ ok ] Restarting ssh (via systemctl): ssh.service.</p><hr><h2 id="Ubuntu软件源配置"><a href="#Ubuntu软件源配置" class="headerlink" title="Ubuntu软件源配置"></a>Ubuntu软件源配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@U ~]<span class="hljs-comment"># cd /etc/apt/</span><br>[root@U apt]<span class="hljs-comment"># cp sources.list sources.list.backup</span><br>[root@U apt]<span class="hljs-comment"># vim sources.list</span><br><span class="hljs-comment">#追加以下所有内容</span><br><br><span class="hljs-comment">#默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br> <br></code></pre></td></tr></table></figure><h2 id="常用软件包安装"><a href="#常用软件包安装" class="headerlink" title="常用软件包安装"></a>常用软件包安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install iproute2 ntpdate tcpdump telnet traceroute nfs-kernel-server \<br>nfs-common lrzsz tree openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev \<br>ntpdate tcpdump telnet traceroute gcc openssh-server iotop unzip zip make -y<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS安装</title>
    <link href="/2022/10/20/centos-Install/"/>
    <url>/2022/10/20/centos-Install/</url>
    
    <content type="html"><![CDATA[<p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><p>@<a href="CentOS%E5%AE%89%E8%A3%85">toc</a></p><p><strong>LINUX</strong><br><img src="https://img-blog.csdnimg.cn/20190921091053644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="获取发行版的途径："><a href="#获取发行版的途径：" class="headerlink" title="获取发行版的途径："></a>获取发行版的途径：</h3><p><strong>CentOS</strong></p><p><a href="https://wiki.centos.org/Download">官方</a></p><p><a href="http://mirrors.aliyun.com/">阿里云</a></p><p><a href="http://mirrors.sohu.com/">搜狐</a></p><p><a href="http://mirrors.163.com/">网易</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/centos/">清华源</a></p><p><strong>Ubuntu</strong></p><p><a href="http://cdimage.ubuntu.com/releases/">官方</a></p><hr><p><a href="https://pan.baidu.com/s/1ll8Y7oAUKoeTf3xHY450LA">vmware workstations15下载链接</a> 提取码: <strong>bnih</strong></p><h3 id="CentOS安装步骤："><a href="#CentOS安装步骤：" class="headerlink" title="CentOS安装步骤："></a>CentOS安装步骤：</h3><ul><li>安装 vmware workstations15，并打开</li><li><img src="https://img-blog.csdnimg.cn/20190921091135421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击创建新的虚拟机，选择第一个</li><li><img src="https://img-blog.csdnimg.cn/20190921091206967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>下一步</li><li><img src="https://img-blog.csdnimg.cn/20190921091240336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"> </li><li>选择你下载的镜像类型，例如：CentOS 7 64位</li><li><img src="https://img-blog.csdnimg.cn/20190921091300245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>给你的虚拟机取一个名字；将虚拟机安装在某个路径。</li><li>在C&#x2F;D盘中新建一个文件夹</li><li><img src="https://img-blog.csdnimg.cn/20190921091316398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>设置200G，无需担心你的磁盘不足，这里是虚拟磁盘，虚拟机不会立刻占光你的计算机200G。</li><li>下面选择第一个，然后下一步</li><li><img src="https://img-blog.csdnimg.cn/20190921091331974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>选择CD&#x2F;dvd;使用IOS镜像文件；浏览并打开你下载的镜像（iso文件）</li><li><img src="https://img-blog.csdnimg.cn/20190921091347271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>确定；开启此虚拟机（第一行是直接安装，第二行是测试ISO文件完整性不进行安装）</li><li><img src="https://img-blog.csdnimg.cn/20190921091408182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>回车</li><li><img src="https://img-blog.csdnimg.cn/20190921091434271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>选择默认English；点击Continue</li><li><img src="https://img-blog.csdnimg.cn/20190921091452134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击DATA&amp;TIME；点击上海位置；Done </li><li><img src="https://img-blog.csdnimg.cn/20190921091508907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击SOFTWORK SELECTION；选择GNOME Desktop</li><li><img src="https://img-blog.csdnimg.cn/20190921091528616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击INSTALLATION DESTINATION</li><li>下面的Other Storage Options选择第二个；Done</li><li><img src="https://img-blog.csdnimg.cn/20190921092637820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>中间选择Standard Partition</li><li>点击左下角+；分配磁盘空间（具体如何分配可随自己意愿）；Cancel</li><li><img src="https://img-blog.csdnimg.cn/20190921092715237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>创建如图所示的分区；应注意&#x2F;data需要手动打出；创建确认点击Add mount point；全部创建完成后点击Done</li><li><img src="https://img-blog.csdnimg.cn/20190921092751108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>确认无误后点击Accept Changes</li><li><img src="https://img-blog.csdnimg.cn/20190921092911884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击KDUMP；取消Enable kdump；Done</li><li><img src="https://img-blog.csdnimg.cn/20190921093005276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击NETWORK&amp;HOST NAME；左下角修改主机名以便区分；右上角点击显示成ON；Done</li><li><img src="https://img-blog.csdnimg.cn/20190921093052852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>做完以上工作，点击Begin Installation；点击ROOTPASSWORD，设置管理员密码（两遍）；Done</li><li><img src="https://img-blog.csdnimg.cn/2019092109314353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>点击CREATE USER；设置普通用户全称，用户名，密码（两遍）；Done</li></ul><hr><ul><li><strong>如果你已完成以上所有操作，那么恭喜你已经完成了99%的安装，剩下的只需等待虚拟机安装完成；最后点击重启（Reboot）即可登录</strong></li><li><strong>根据你的电脑配置，安装所需时间并不相同；但这可能需要不短的时间（也许你可以去喝喝茶什么的？）</strong></li></ul><hr><p><img src="https://img-blog.csdnimg.cn/20190921091855232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R1c2hhbnNhbw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="点击跳至文章尾部"><a href="#点击跳至文章尾部" class="headerlink" title="点击跳至文章尾部"></a>点击跳至文章尾部</h3><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MD</title>
    <link href="/2022/10/20/md/"/>
    <url>/2022/10/20/md/</url>
    
    <content type="html"><![CDATA[<p id="hitokoto">获取中...</p><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script><hr><ul><li>代码折叠</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">\       &#123;% details 代码折叠，点击展开 %&#125;<br>\       1. Sushi<br>\       2. Tempura<br>\       3. Sukiyaki<br>\       &#123;% enddetails %&#125;<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt">\&#123;% details 代码折叠，点击展开 %&#125;<br>\```bash<br>\1. Sushi<br>\2. Tempura<br>\3. Sukiyaki<br>\```<br>\&#123;% enddetails %&#125;<br></code></pre></td></tr></table></figure><details><summary>代码折叠，点击展开</summary><ol><li>Sushi</li><li>Tempura</li><li>Sukiyaki</li></ol></details><details><summary>代码折叠，点击展开</summary><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. Sushi<br>2. Tempura<br>3. Sukiyaki<br></code></pre></td></tr></table></figure></details><hr><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">\       &#123;% spoiler 代码折叠，点击展开 %&#125;<br>\       1. Sushi<br>\       2. Tempura<br>\       3. Sukiyaki<br>\       &#123;% endspoiler %&#125;<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt">\&#123;% spoiler 代码折叠，点击展开 %&#125;<br>\```bash<br>\1. Sushi<br>\2. Tempura<br>\3. Sukiyaki<br>\```<br>\&#123;% endspoiler %&#125;<br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <ol><li>Sushi</li><li>Tempura</li><li>Sukiyaki</li></ol>    </div></div><div class='spoiler collapsed'>    <div class='spoiler-title'>        代码折叠，点击展开    </div>    <div class='spoiler-content'>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. Sushi<br>2. Tempura<br>3. Sukiyaki<br></code></pre></td></tr></table></figure>    </div></div><hr><ul><li>字体设置<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs txt">&lt;font face=&quot;微软雅黑&quot; &gt;微软雅黑字体&lt;/font&gt;<br>&lt;font face=&quot;黑体&quot; &gt;黑体&lt;/font&gt;<br>font size=3 &gt;3号字&lt;/font&gt;<br>&lt;font size=5 &gt;5号字&lt;/font&gt;<br>&lt;font color=#FF0000 &gt;红色&lt;/font&gt;<br>&lt;font color=#008000 &gt;绿色&lt;/font&gt;<br>&lt;font color=#0000FF &gt;蓝色&lt;/font&gt;<br><br>red红色、orange橙色、yellow黄色、green绿色、blue蓝色、purple紫色<br>pink粉红色、brown棕色、white白色、black黑色、gray灰色、mauve紫红。<br><br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt; 我是橘色 orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= BlueViolet &gt;我是紫罗兰色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= red &gt;我是红色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= yellow &gt;我是黄色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= green &gt;我是绿色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= blue &gt;我是蓝色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= purple &gt;我是紫色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= pink &gt;我是粉红色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= brown &gt;我是棕色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= white &gt;我是白色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= black &gt;我是黑色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= gray &gt;我是灰色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor= mauve &gt;我是紫红色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br></code></pre></td></tr></table></figure></li></ul><p><font face="微软雅黑" >微软雅黑字体</font><br><font face="黑体" >黑体</font><br><font size=3 >3号字</font><br><font size=5 >5号字</font><br><font color=#FF0000 >红色</font><br><font color=#008000 >绿色</font><br><font color=#0000FF >蓝色</font></p><table><tr><td bgcolor=orange> 我是橘色</td></tr></table><table><tr><td bgcolor= BlueViolet >我是紫罗兰色</td></tr></table><table><tr><td bgcolor= red >我是红色</td></tr></table><table><tr><td bgcolor= yellow >我是黄色</td></tr></table><table><tr><td bgcolor= green >我是绿色</td></tr></table><table><tr><td bgcolor= blue >我是蓝色</td></tr></table><table><tr><td bgcolor= purple >我是紫色</td></tr></table><table><tr><td bgcolor= pink >我是粉红色</td></tr></table><table><tr><td bgcolor= brown >我是棕色</td></tr></table><table><tr><td bgcolor= white >我是白色</td></tr></table><table><tr><td bgcolor= black >我是黑色</td></tr></table><table><tr><td bgcolor= gray >我是灰色</td></tr></table><table><tr><td bgcolor= mauve >我是紫红色</td></tr></table><hr><ul><li>便签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html">可选便签：<br>primary<br>secondary<br>success<br>danger<br>warning<br>info<br>light<br></code></pre></td></tr></table></figure><p>使用 HTML 形式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt">&lt;p class=&quot;note note-primary&quot;&gt;标签&lt;/p&gt;<br>&lt;p class=&quot;note note-secondary&quot;&gt;标签&lt;/p&gt;<br>&lt;p class=&quot;note note-success&quot;&gt;标签&lt;/p&gt;<br>&lt;p class=&quot;note note-danger&quot;&gt;标签&lt;/p&gt;<br>&lt;p class=&quot;note note-warning&quot;&gt;标签&lt;/p&gt;<br>&lt;p class=&quot;note note-info&quot;&gt;标签&lt;/p&gt;<br>&lt;p class=&quot;note note-light&quot;&gt;标签&lt;/p&gt;<br></code></pre></td></tr></table></figure><p class="note note-primary">标签</p><p class="note note-secondary">标签</p><p class="note note-success">标签</p><p class="note note-danger">标签</p><p class="note note-warning">标签</p><p class="note note-info">标签</p><p class="note note-light">标签</p><p>在 markdown 中加入如下的代码来使用便签：<br>文字 或者 <code>markdown</code> 均可</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs txt">&#123;% note primary %&#125;<br>`markdown`<br>&#123;% endnote %&#125;<br><br>&#123;% note secondary %&#125;<br>*test123*<br>&#123;% endnote %&#125;<br><br>&#123;% note success %&#125;<br>test123<br>&#123;% endnote %&#125;<br><br>&#123;% note danger %&#125;<br>**test123**<br>&#123;% endnote %&#125;<br><br>&#123;% note warning %&#125;<br>`test123`<br>&#123;% endnote %&#125;<br><br>&#123;% note info %&#125;<br>[个人博客](https://mtdia.github.io/)<br>&#123;% endnote %&#125;<br><br>&#123;% note info %&#125;<br>![图片](https://mtdia.github.io/img/docker.png)<br>&#123;% endnote %&#125;<br><br>&#123;% note light %&#125;<br># test123<br>&#123;% endnote %&#125;<br><br>&#123;% note warning %&#125;<br># Warning<br>---<br>警告！<br>&#123;% endnote %&#125;<br></code></pre></td></tr></table></figure><div class="note note-primary">            <p><code>markdown</code></p>          </div><div class="note note-secondary">            <p><em>test123</em></p>          </div><div class="note note-success">            <p><code>test123</code></p>          </div><div class="note note-danger">            <p><strong>test123</strong></p>          </div><div class="note note-warning">            <p><code>test123</code></p>          </div><div class="note note-info">            <p><a href="https://mtdia.github.io/">个人博客</a></p>          </div><div class="note note-info">            <p><img src="https://mtdia.github.io/img/docker.png" alt="图片"></p>          </div><div class="note note-light">            <h1 id="test123"><a href="#test123" class="headerlink" title="test123"></a>test123</h1>          </div><div class="note note-warning">            <h1 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h1><hr><p>警告！</p>          </div><hr><ul><li>勾选框</li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% cb text, checked?, incline? %&#125;<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">text：显示的文字<br>checked：默认是否已勾选，默认 false<br>incline: 是否内联（可以理解为后面的文字是否换行），默认 false<br></code></pre></td></tr></table></figure><p><strong><code>示例：</code></strong></p><div>            <input type="checkbox" disabled checked="checked">网络正常          </div><div>            <input type="checkbox" disabled checked="checked">内存足够          </div><div>            <input type="checkbox" disabled checked="checked">Docker安装          </div><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">&#123;% cb 网络正常, true %&#125;<br>&#123;% cb 内存足够,true %&#125;<br>&#123;% cb Docker安装,true %&#125;<br></code></pre></td></tr></table></figure><hr><ul><li>按钮</li></ul><p><strong>可以在 markdown 中加入如下的代码来使用 Button：</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% btn url, text, title %&#125;<br></code></pre></td></tr></table></figure><p><strong>或者使用 HTML 形式：</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span></span>text<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选）<br></code></pre></td></tr></table></figure><p><strong><code>示例：</code></strong></p><a class="btn" href="https://mtdia.github.io"  title="我的博客" target="_blank">博客</a><p><a class="btn" href="https://mtdia.github.io/" title="我的博客">博客</a></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">&#123;% btn https://mtdia.github.io, 博客, 我的博客 %&#125;<br><br>&lt;a class=&quot;btn&quot; href=&quot;https://mtdia.github.io/&quot; title=&quot;我的博客&quot;&gt;博客&lt;/a&gt;<br></code></pre></td></tr></table></figure><hr><table><thead><tr><th>字符</th><th>表达含义</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>字母和数字</td></tr><tr><td>[:alpha:]</td><td>字母</td></tr><tr><td>[:cntrl:]</td><td>控制字符</td></tr><tr><td>[:digit:]</td><td>数字</td></tr><tr><td>[:graph:]</td><td>图形字符</td></tr><tr><td>[:lower:]</td><td>小写字母</td></tr><tr><td>[:print:]</td><td>可打印字符</td></tr><tr><td>[:punct:]</td><td>标点符号</td></tr><tr><td>[:space:]</td><td>空白字符</td></tr><tr><td>[:upper:]</td><td>大写字母</td></tr><tr><td>[:xdigit:]</td><td>十六进制字符</td></tr></tbody></table><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs txt">| 字符       | 表达含义           |<br>| ---------- | ------------------ |<br>| [:alnum:]  | 字母和数字         |<br>| [:alpha:]  | 字母               |<br>| [:cntrl:]  | 控制字符           |<br>| [:digit:]  | 数字               |<br>| [:graph:]  | 图形字符           |<br>| [:lower:]  | 小写字母           |<br>| [:print:]  | 可打印字符         |<br>| [:punct:]  | 标点符号           |<br>| [:space:]  | 空白字符           |<br>| [:upper:]  | 大写字母           |<br>| [:xdigit:] | 十六进制字符       |<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>md</category>
      
    </categories>
    
    
    <tags>
      
      <tag>md</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
